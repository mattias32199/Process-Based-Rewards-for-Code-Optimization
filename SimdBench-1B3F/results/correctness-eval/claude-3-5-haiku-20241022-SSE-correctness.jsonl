{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpigrh2gm8.cpp:35:20: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   35 |         mask_vec = _mm_insert_epi64(mask_vec, mask[i], 0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmpigrh2gm8.cpp:36:20: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   36 |         mask_vec = _mm_insert_epi64(mask_vec, mask[i+1], 1);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmpigrh2gm8.cpp:39:54: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i cmp_mask = _mm_cmpeq_epi64(mask_vec, _mm_cmpeq_epi64(mask_vec, mask_vec));\n      |                                                      ^\n[REDACTED]/tmpigrh2gm8.cpp:39:28: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i cmp_mask = _mm_cmpeq_epi64(mask_vec, _mm_cmpeq_epi64(mask_vec, mask_vec));\n      |                            ^\n[REDACTED]/tmpigrh2gm8.cpp:43:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   43 |         dst_vec = _mm_blendv_epi8(dst_vec, src_vec, cmp_mask);\n      |                   ^\n5 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgqskfkfc.cpp:38:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, _mm_set1_epi64x(mask_val ? -1 : 0));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkcmvd6ib.cpp:41:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_xmdk5sp.cpp:52:22: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |         result_vec = _mm_div_epi32(result_vec, div_vec);\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmperp5vhyy.cpp:51:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i div_vec = _mm_div_epi32(result_vec, _mm_set1_epi32(7));\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp674z7e9v.cpp:51:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i div_vec = _mm_div_epi32(result_vec, _mm_set1_epi32(7));\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx2pd5gf1.cpp:51:22: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         result_vec = _mm_div_epi32(result_vec, _mm_set1_epi32(7));\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgutt_829.cpp:51:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i div_vec = _mm_div_epi32(result_vec, _mm_set1_epi32(7));\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8si971t4.cpp:55:25: error: read-only variable is not assignable\n   55 |         src[indices[i]] = dst[i];\n      |         ~~~~~~~~~~~~~~~ ^\n1 error generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4u0kjyov.cpp:45:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   45 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvvnpes47.cpp:39:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmj9nisct.cpp:45:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   45 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy5ofjgi9.cpp:39:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphryox27l.cpp:45:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   45 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkyoej1v9.cpp:43:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   43 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl_ibjkzh.cpp:43:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   43 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2fixy5fw.cpp:41:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   41 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpklix03qx.cpp:43:19: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   43 |         sum_vec = _mm_srai_epi64(sum_vec, 1);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpywksjn1w.cpp:43:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   43 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoezfjj5v.cpp:46:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   46 |         min_val = min(min_val, min_arr[j]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmpoezfjj5v.cpp:50:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   50 |         min_val = min(min_val, src[i]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ljxxwh3.cpp:46:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   46 |         min_val = min(min_val, min_arr[j]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmp_ljxxwh3.cpp:50:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   50 |         min_val = min(min_val, src[i]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyj5qx6cz.cpp:46:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   46 |         min_val = min(min_val, min_arr[j]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmpyj5qx6cz.cpp:50:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   50 |         min_val = min(min_val, src[i]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_uhu9pg1.cpp:38:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   38 |         min_vec = _mm_min_epi32(min_vec, vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp44n9wqev.cpp:46:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   46 |         min_val = min(min_val, min_arr[j]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmp44n9wqev.cpp:50:19: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   50 |         min_val = min(min_val, src[i]);\n      |                   ^~~\n      |                   fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmvc_i8r3.cpp:58:70: error: use of undeclared identifier '_mm_SIDD_CMP_EQUAL_ORDERED'\n   58 |                 _mm_cmpestri(low, 8, _mm_set1_epi16(max_low_val), 1, _mm_SIDD_CMP_EQUAL_ORDERED) :\n      |                                                                      ^\n[REDACTED]/tmpmvc_i8r3.cpp:59:76: error: use of undeclared identifier '_mm_SIDD_CMP_EQUAL_ORDERED'\n   59 |                 8 + _mm_cmpestri(high, 8, _mm_set1_epi16(max_high_val), 1, _mm_SIDD_CMP_EQUAL_ORDERED));\n      |                                                                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8zmkulvy.cpp:58:72: error: use of undeclared identifier '_mm_cmpeq_epi16_mask'\n   58 |                 _mm_cmpestri(low, 8, _mm_set1_epi16(max_chunk_low), 8, _mm_cmpeq_epi16_mask) :\n      |                                                                        ^\n[REDACTED]/tmp8zmkulvy.cpp:59:78: error: use of undeclared identifier '_mm_cmpeq_epi16_mask'\n   59 |                 8 + _mm_cmpestri(high, 8, _mm_set1_epi16(max_chunk_high), 8, _mm_cmpeq_epi16_mask));\n      |                                                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1b14un2w.cpp:58:70: error: use of undeclared identifier '_mm_SIDD_CMP_EQUAL_ORDERED'\n   58 |                 _mm_cmpestri(low, 8, _mm_set1_epi16(max_low_val), 1, _mm_SIDD_CMP_EQUAL_ORDERED) :\n      |                                                                      ^\n[REDACTED]/tmp1b14un2w.cpp:59:76: error: use of undeclared identifier '_mm_SIDD_CMP_EQUAL_ORDERED'\n   59 |                 8 + _mm_cmpestri(high, 8, _mm_set1_epi16(max_high_val), 1, _mm_SIDD_CMP_EQUAL_ORDERED));\n      |                                                                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr7elg38_.cpp:49:31: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   49 |             int16_t val_low = _mm_extract_epi16(low, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmpr7elg38_.cpp:50:32: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   50 |             int16_t val_high = _mm_extract_epi16(high, j);\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmploih2mmt.cpp:46:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i blended = _mm_blendv_epi8(vec2, vec1, cmp_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmperh5ql3s.cpp:46:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i blended = _mm_blendv_epi8(vec2, vec1, cmp_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpivglofkb.cpp:38:30: error: argument to '__builtin_ia32_vec_set_v8hi' must be a constant integer\n   38 |                 blend_mask = _mm_insert_epi16(blend_mask, 0xFFFF, j);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4189:13: note: expanded from macro '_mm_insert_epi16'\n 4189 |   ((__m128i)__builtin_ia32_vec_set_v8hi((__v8hi)(__m128i)(a), (int)(b),        \\\n      |             ^\n 4190 |                                         (int)(imm)))\n      |                                         ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptu52td4c.cpp:46:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i blended = _mm_blendv_epi8(vec2, vec1, mask_condition);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4aop5erm.cpp:46:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i blended = _mm_blendv_epi8(vec2, vec1, cmp_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgfzsa000.cpp:46:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'population_count_simd' that is compiled without support for 'sse4.1'\n   46 |         input = _mm_mullo_epi32(input, _mm_set1_epi32(0x01010101));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe4ej2s0j.cpp:38:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxtdizdfo.cpp:38:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptb30gvma.cpp:38:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz58gkk_o.cpp:38:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppcs2d_oz.cpp:38:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwj5n3ltz.cpp:50:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |         __m128 rounded_result = _mm_ceil_ps(mul_result);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpwj5n3ltz.cpp:53:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128 result = _mm_blendv_ps(neg_one, rounded_result, condition_mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsh76ho5x.cpp:41:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |         __m128 rounded_result = _mm_ceil_ps(mul_result);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpsh76ho5x.cpp:43:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128 final_result = _mm_blendv_ps(_mm_set1_ps(-1.0f), rounded_result, combined_mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpao_lwtt8.cpp:41:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |         __m128 rounded_result = _mm_ceil_ps(mul_result);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpao_lwtt8.cpp:43:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128 result = _mm_blendv_ps(_mm_set1_ps(-1.0f), rounded_result, final_mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2nrly4dj.cpp:41:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |         result = _mm_ceil_ps(result);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp2nrly4dj.cpp:44:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   44 |         result = _mm_blendv_ps(default_val, result, mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4e9tkobq.cpp:42:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   42 |         __m128 ceil_result = _mm_ceil_ps(mul_result);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp4e9tkobq.cpp:45:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result = _mm_blendv_ps(_mm_set1_ps(-1.0f), ceil_result, final_mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj8zmyxfv.cpp:43:35: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   43 |             __m128d rounded_vec = _mm_round_pd(sum_vec, _MM_FROUND_TO_NEAREST_INT);\n      |                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx0jsfvnr.cpp:43:35: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   43 |             __m128d rounded_vec = _mm_round_pd(sum_vec, _MM_FROUND_TO_NEAREST_INT);\n      |                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpli7sr5wl.cpp:42:35: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   42 |             __m128d rounded_vec = _mm_round_pd(sum_vec, _MM_FROUND_TO_NEAREST_INT);\n      |                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2_0vpyiy.cpp:49:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row0 = _mm_div_ps(_mm_round_ps(row0 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp2_0vpyiy.cpp:50:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             row1 = _mm_div_ps(_mm_round_ps(row1 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp2_0vpyiy.cpp:51:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             row2 = _mm_div_ps(_mm_round_ps(row2 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp2_0vpyiy.cpp:52:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             row3 = _mm_div_ps(_mm_round_ps(row3 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm3mr17he.cpp:38:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |             row0 = _mm_div_ps(_mm_round_ps(row0 * _mm_rcp_ps(quarter), _MM_FROUND_TO_NEAREST_INT), _mm_rcp_ps(quarter));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpm3mr17he.cpp:39:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |             row1 = _mm_div_ps(_mm_round_ps(row1 * _mm_rcp_ps(quarter), _MM_FROUND_TO_NEAREST_INT), _mm_rcp_ps(quarter));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpm3mr17he.cpp:40:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             row2 = _mm_div_ps(_mm_round_ps(row2 * _mm_rcp_ps(quarter), _MM_FROUND_TO_NEAREST_INT), _mm_rcp_ps(quarter));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpm3mr17he.cpp:41:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |             row3 = _mm_div_ps(_mm_round_ps(row3 * _mm_rcp_ps(quarter), _MM_FROUND_TO_NEAREST_INT), _mm_rcp_ps(quarter));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmixypi07.cpp:49:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row0 = _mm_div_ps(_mm_round_ps(row0 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpmixypi07.cpp:50:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             row1 = _mm_div_ps(_mm_round_ps(row1 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpmixypi07.cpp:51:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             row2 = _mm_div_ps(_mm_round_ps(row2 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpmixypi07.cpp:52:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             row3 = _mm_div_ps(_mm_round_ps(row3 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_cks1y63.cpp:49:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row0 = _mm_div_ps(_mm_round_ps(row0 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_cks1y63.cpp:50:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             row1 = _mm_div_ps(_mm_round_ps(row1 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_cks1y63.cpp:51:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             row2 = _mm_div_ps(_mm_round_ps(row2 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_cks1y63.cpp:52:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             row3 = _mm_div_ps(_mm_round_ps(row3 * quarter, _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn6u8ig3x.cpp:37:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   37 |             row0 = _mm_div_ps(_mm_round_ps(row0 * _mm_set1_ps(4.0f), _MM_FROUND_TO_NEAREST_INT), _mm_set1_ps(4.0f));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn6u8ig3x.cpp:38:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |             row1 = _mm_div_ps(_mm_round_ps(row1 * _mm_set1_ps(4.0f), _MM_FROUND_TO_NEAREST_INT), _mm_set1_ps(4.0f));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn6u8ig3x.cpp:39:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |             row2 = _mm_div_ps(_mm_round_ps(row2 * _mm_set1_ps(4.0f), _MM_FROUND_TO_NEAREST_INT), _mm_set1_ps(4.0f));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn6u8ig3x.cpp:40:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             row3 = _mm_div_ps(_mm_round_ps(row3 * _mm_set1_ps(4.0f), _MM_FROUND_TO_NEAREST_INT), _mm_set1_ps(4.0f));\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4jg08yer.cpp:48:39: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 truncated = _mm_and_ps(_mm_floor_ps(result), positive_mask);\n      |                                       ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp4jg08yer.cpp:49:43: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |         __m128 truncated_neg = _mm_and_ps(_mm_ceil_ps(result), negative_mask);\n      |                                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptdgla5ab.cpp:49:57: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |         __m128 floor_result = _mm_and_ps(positive_mask, _mm_floor_ps(result));\n      |                                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmptdgla5ab.cpp:50:56: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |         __m128 ceil_result = _mm_and_ps(negative_mask, _mm_ceil_ps(result));\n      |                                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9y2imbky.cpp:49:57: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |         __m128 floor_result = _mm_and_ps(positive_mask, _mm_floor_ps(result));\n      |                                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp9y2imbky.cpp:50:56: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |         __m128 ceil_result = _mm_and_ps(negative_mask, _mm_ceil_ps(result));\n      |                                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp__1jxp0z.cpp:38:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   38 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw6nqjs5y.cpp:38:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   38 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdqwfbp3n.cpp:39:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   39 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprf_bi3q7.cpp:39:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   39 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqorwvexq.cpp:38:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   38 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp12xq8io7.cpp:46:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   46 |         equal_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk8qpe4yx.cpp:46:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   46 |         equal_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq03cv_l5.cpp:46:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   46 |         equal_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptgj0kvtn.cpp:46:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   46 |         equal_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfp6c21w7.cpp:35:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i mul_vec = _mm_mul_epi32(a_vec, x_vec);\n      |                           ^\n[REDACTED]/tmpfp6c21w7.cpp:38:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i abs_vec = _mm_abs_epi64(mul_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphzox4z0n.cpp:36:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i mul_vec = _mm_mul_epi32(a_vec, x_vec);\n      |                           ^\n[REDACTED]/tmphzox4z0n.cpp:39:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_vec = _mm_abs_epi64(mul_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyimpcemp.cpp:36:26: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i ax_vec = _mm_mul_epi32(x_vec, scalar_vec);\n      |                          ^\n[REDACTED]/tmpyimpcemp.cpp:39:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_vec = _mm_abs_epi64(ax_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmz9t37bb.cpp:37:26: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i ax_vec = _mm_mul_epi32(x_vec, a_vec);\n      |                          ^\n[REDACTED]/tmpmz9t37bb.cpp:40:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   40 |         __m128i abs_vec = _mm_abs_epi64(ax_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_p_tx50q.cpp:36:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i mul_vec = _mm_mul_epi32(a_vec, x_vec);\n      |                           ^\n[REDACTED]/tmp_p_tx50q.cpp:39:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_vec = _mm_abs_epi64(mul_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp29pb49fy.cpp:44:1: error: expected unqualified-id\n   44 | ```cpp\n      | ^\n[REDACTED]/tmp29pb49fy.cpp:75:1: error: expected unqualified-id\n   75 | ```\n      | ^\n[REDACTED]/tmp29pb49fy.cpp:95:17: error: use of undeclared identifier 'correctness_check'\n   95 |     bool pass = correctness_check(ITERATIONS);\n      |                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5axn7ifq.cpp:56:26: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   56 |         result.min_num = min(result.min_num, min_val);\n      |                          ^~~\n      |                          fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmp5axn7ifq.cpp:62:26: error: use of undeclared identifier 'max'; did you mean 'fmax'?\n   62 |         result.max_num = max(result.max_num, max_val);\n      |                          ^~~\n      |                          fmax\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:14: note: 'fmax' declared here\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmp5axn7ifq.cpp:67:26: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   67 |         result.min_num = min(result.min_num, vec[i]);\n      |                          ^~~\n      |                          fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmp5axn7ifq.cpp:68:26: error: use of undeclared identifier 'max'; did you mean 'fmax'?\n   68 |         result.max_num = max(result.max_num, vec[i]);\n      |                          ^~~\n      |                          fmax\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:14: note: 'fmax' declared here\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9rgo56bi.cpp:37:47: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i squares_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(va), _mm_cvtepi8_epi16(va));\n      |                                               ^\n[REDACTED]/tmp9rgo56bi.cpp:37:70: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i squares_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(va), _mm_cvtepi8_epi16(va));\n      |                                                                      ^\n[REDACTED]/tmp9rgo56bi.cpp:38:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i squares_high = _mm_mullo_epi16(_mm_cvtepi8_epi16(_mm_srli_si128(va, 8)), \n      |                                                ^\n[REDACTED]/tmp9rgo56bi.cpp:39:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   39 |                                                _mm_cvtepi8_epi16(_mm_srli_si128(va, 8)));\n      |                                                ^\n[REDACTED]/tmp9rgo56bi.cpp:40:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i products_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(va), _mm_cvtepi8_epi16(vb));\n      |                                                ^\n[REDACTED]/tmp9rgo56bi.cpp:40:71: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i products_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(va), _mm_cvtepi8_epi16(vb));\n      |                                                                       ^\n[REDACTED]/tmp9rgo56bi.cpp:41:49: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i products_high = _mm_mullo_epi16(_mm_cvtepi8_epi16(_mm_srli_si128(va, 8)), \n      |                                                 ^\n[REDACTED]/tmp9rgo56bi.cpp:42:49: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |                                                 _mm_cvtepi8_epi16(_mm_srli_si128(vb, 8)));\n      |                                                 ^\n8 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqk7y59s.cpp:38:47: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i squares_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(vec_a), _mm_cvtepi8_epi16(vec_a));\n      |                                               ^\n[REDACTED]/tmpeqk7y59s.cpp:38:73: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i squares_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(vec_a), _mm_cvtepi8_epi16(vec_a));\n      |                                                                         ^\n[REDACTED]/tmpeqk7y59s.cpp:39:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i squares_high = _mm_mullo_epi16(_mm_cvtepi8_epi16(_mm_srli_si128(vec_a, 8)), \n      |                                                ^\n[REDACTED]/tmpeqk7y59s.cpp:40:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   40 |                                                _mm_cvtepi8_epi16(_mm_srli_si128(vec_a, 8)));\n      |                                                ^\n[REDACTED]/tmpeqk7y59s.cpp:43:48: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i products_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(vec_a), _mm_cvtepi8_epi16(vec_b));\n      |                                                ^\n[REDACTED]/tmpeqk7y59s.cpp:43:74: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i products_low = _mm_mullo_epi16(_mm_cvtepi8_epi16(vec_a), _mm_cvtepi8_epi16(vec_b));\n      |                                                                          ^\n[REDACTED]/tmpeqk7y59s.cpp:44:49: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i products_high = _mm_mullo_epi16(_mm_cvtepi8_epi16(_mm_srli_si128(vec_a, 8)), \n      |                                                 ^\n[REDACTED]/tmpeqk7y59s.cpp:45:49: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |                                                 _mm_cvtepi8_epi16(_mm_srli_si128(vec_b, 8)));\n      |                                                 ^\n8 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv8vnt1u6.cpp:42:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squares_lo));\n      |                                                  ^\n[REDACTED]/tmpv8vnt1u6.cpp:43:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squares_lo, 8)));\n      |                                                  ^\n[REDACTED]/tmpv8vnt1u6.cpp:44:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squares_hi));\n      |                                                  ^\n[REDACTED]/tmpv8vnt1u6.cpp:45:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squares_hi, 8)));\n      |                                                  ^\n[REDACTED]/tmpv8vnt1u6.cpp:52:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   52 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(products_lo));\n      |                                                    ^\n[REDACTED]/tmpv8vnt1u6.cpp:53:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   53 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(_mm_srli_si128(products_lo, 8)));\n      |                                                    ^\n[REDACTED]/tmpv8vnt1u6.cpp:54:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   54 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(products_hi));\n      |                                                    ^\n[REDACTED]/tmpv8vnt1u6.cpp:55:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   55 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(_mm_srli_si128(products_hi, 8)));\n      |                                                    ^\n8 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw9y726jp.cpp:42:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squares_lo));\n      |                                                  ^\n[REDACTED]/tmpw9y726jp.cpp:43:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squares_lo, 8)));\n      |                                                  ^\n[REDACTED]/tmpw9y726jp.cpp:44:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squares_hi));\n      |                                                  ^\n[REDACTED]/tmpw9y726jp.cpp:45:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squares_hi, 8)));\n      |                                                  ^\n[REDACTED]/tmpw9y726jp.cpp:52:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   52 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(products_lo));\n      |                                                    ^\n[REDACTED]/tmpw9y726jp.cpp:53:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   53 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(_mm_srli_si128(products_lo, 8)));\n      |                                                    ^\n[REDACTED]/tmpw9y726jp.cpp:54:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   54 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(products_hi));\n      |                                                    ^\n[REDACTED]/tmpw9y726jp.cpp:55:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   55 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(_mm_srli_si128(products_hi, 8)));\n      |                                                    ^\n8 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0iwit498.cpp:54:59: error: always_inline function '_mm_cvtepi32_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   54 |         _mm_storeu_si128((__m128i*)&out[i * vector_size], _mm_cvtepi32_epi8(vec));\n      |                                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpybtzhnr9.cpp:57:59: error: always_inline function '_mm_cvtepi32_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   57 |         _mm_storeu_si128((__m128i*)&out[i * vector_size], _mm_cvtepi32_epi8(vec));\n      |                                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp597ba7y0.cpp:54:59: error: always_inline function '_mm_cvtepi32_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   54 |         _mm_storeu_si128((__m128i*)&out[i * vector_size], _mm_cvtepi32_epi8(vec));\n      |                                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu8ymbco4.cpp:38:48: error: use of undeclared identifier '_mm_mod_epi32'\n   38 |             __m128i mod_mask = _mm_cmpeq_epi32(_mm_mod_epi32(vec_a, three), zero);\n      |                                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpopc3wwv2.cpp:40:33: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   40 |             __m128i remainder = _mm_rem_epi32(a_vec, three_vec);\n      |                                 ^~~~~~~~~~~~~\n      |                                 _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpitde02n7.cpp:39:49: error: use of undeclared identifier '_mm_mod_epi32'\n   39 |             __m128i div_check = _mm_cmpeq_epi32(_mm_mod_epi32(vec_a, vec_3), _mm_setzero_si128());\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1oj1v5dt.cpp:40:31: error: use of undeclared identifier '_mm_mod_epi32'\n   40 |             __m128i vec_mod = _mm_mod_epi32(vec_a, vec_3);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_icj32cf.cpp:39:31: error: use of undeclared identifier '_mm_mod_epi32'\n   39 |             __m128i vec_mod = _mm_mod_epi32(vec_a, vec_3);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu8mi20o9.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpu8mi20o9.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpu8mi20o9.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpu8mi20o9.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result = _mm_blendv_epi8(negated_vec, rotated_vec, condition_mask);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkkq_v1jt.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpkkq_v1jt.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpkkq_v1jt.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpkkq_v1jt.cpp:51:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, all_ones_mask);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpml7zgyi3.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpml7zgyi3.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpml7zgyi3.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpml7zgyi3.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result = _mm_blendv_epi8(negated, rotated, all_ones);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprs0du28v.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmprs0du28v.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmprs0du28v.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmprs0du28v.cpp:51:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, condition_mask);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6qa5o5kq.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp6qa5o5kq.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp6qa5o5kq.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp6qa5o5kq.cpp:64:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, all_ones_mask);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptxfbrk26.cpp:41:50: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   41 |         __m128 eq_mask = _mm_cmpeq_ps(_mm_and_ps(_mm_abs_ps(diff_vec), _mm_abs_ps(diff_vec)), _mm_setzero_ps());\n      |                                                  ^~~~~~~~~~\n      |                                                  _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmptxfbrk26.cpp:41:72: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   41 |         __m128 eq_mask = _mm_cmpeq_ps(_mm_and_ps(_mm_abs_ps(diff_vec), _mm_abs_ps(diff_vec)), _mm_setzero_ps());\n      |                                                                        ^~~~~~~~~~\n      |                                                                        _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxtt6376p.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpxtt6376p.cpp:53:20: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   53 |         if (A[i] > INT32_MAX) {\n      |                  ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpxtt6376p.cpp:45:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   45 |         int_vec = _mm_blendv_epi8(int_vec, max_vec, _mm_castps_si128(max_mask));\n      |                   ^\n[REDACTED]/tmpxtt6376p.cpp:46:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   46 |         int_vec = _mm_blendv_epi8(int_vec, min_vec, _mm_castps_si128(min_mask));\n      |                   ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc0x8jq0k.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpc0x8jq0k.cpp:36:42: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         __m128 rounded = _mm_cvtps_epi32(_mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC));\n      |                                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpshc8ps5c.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpshc8ps5c.cpp:35:46: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded_vec = _mm_cvtps_epi32(_mm_round_ps(div_vec, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC));\n      |                                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjsfk0aln.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpjsfk0aln.cpp:35:46: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded_vec = _mm_cvtps_epi32(_mm_round_ps(div_vec, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC));\n      |                                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_4jppenr.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp_4jppenr.cpp:41:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |         __m128 vrounded = _mm_round_ps(vdiv, _MM_FROUND_TO_NEAREST_INT);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp67djo0l1.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp67djo0l1.cpp:39:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 rounded_vec = _mm_round_ps(div_vec, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpee7xjz4n.cpp:49:26: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   49 |         normalized_vec = _mm_blendv_ps(a_vec, normalized_vec, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz9oa78wp.cpp:50:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 result_vec = _mm_blendv_ps(a_vec, normalized_vec, _mm_castsi128_ps(mask));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmdtn5lbl.cpp:50:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 result_vec = _mm_blendv_ps(a_vec, normalized_vec, mask);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe4q_g9lu.cpp:56:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128 result_vec = _mm_blendv_ps(a_vec, normalized_vec, _mm_castsi128_ps(mask));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpao3rxw8k.cpp:34:27: error: use of undeclared identifier '_mm_loadl_epi16'; did you mean '_mm_loadu_epi16'?\n   34 |         __m128i indices = _mm_loadl_epi16((__m128i*)&index[i]);\n      |                           ^~~~~~~~~~~~~~~\n      |                           _mm_loadu_epi16\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlbwintrin.h:2295:1: note: '_mm_loadu_epi16' declared here\n 2295 | _mm_loadu_epi16 (void const *__P)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp93l1pmok.cpp:41:27: error: use of undeclared identifier '_mm_sad_epu16'\n   41 |         __m128i sum_vec = _mm_sad_epu16(vec, _mm_setzero_si128());\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy_geks8z.cpp:42:27: error: use of undeclared identifier '_mm_sad_epu16'\n   42 |         __m128i sum_vec = _mm_sad_epu16(vec, zero);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpha1smrfp.cpp:45:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i max_vec = _mm_max_epi32(current, prev_max);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0qos7q94.cpp:46:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i max_vec = _mm_max_epi32(current, prev_max);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphye20kok.cpp:46:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         current_max = _mm_max_epi32(current_max, vec);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpku05cn69.cpp:46:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i rolling_max = _mm_max_epi32(current, prev_max);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpew8n5a_q.cpp:46:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i max_vec = _mm_max_epi32(current, prev_max);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph5uohr6e.cpp:49:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   49 |             length_vec = _mm_blendv_epi8(length_vec, current_length, mask);\n      |                          ^\n[REDACTED]/tmph5uohr6e.cpp:50:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |             index_vec = _mm_blendv_epi8(index_vec, current_index, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdjpcza5d.cpp:50:31: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i max_lengths = _mm_max_epu32(lengths, _mm_srli_si128(lengths, 8));\n      |                               ^\n[REDACTED]/tmpdjpcza5d.cpp:51:23: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   51 |         max_lengths = _mm_max_epu32(max_lengths, _mm_srli_si128(max_lengths, 4));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc1q3y2uo.cpp:46:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   46 |             length_vec = _mm_insert_epi32(length_vec, len, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7pxzj9fi.cpp:38:15: error: use of undeclared identifier '_mm_rem_epi64'\n   38 |         mod = _mm_rem_epi64(target, current);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy_51ovsr.cpp:35:28: error: use of undeclared identifier '_mm_rem_epi64'\n   35 |         __m128i vec_mod1 = _mm_rem_epi64(vec_n, vec_i);\n      |                            ^\n[REDACTED]/tmpy_51ovsr.cpp:36:28: error: use of undeclared identifier '_mm_rem_epi64'\n   36 |         __m128i vec_mod2 = _mm_rem_epi64(vec_n, _mm_add_epi64(vec_i, vec_one));\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjg1gr0xb.cpp:36:27: error: use of undeclared identifier '_mm_div_epu64'; did you mean '_mm_min_epu64'?\n   36 |         __m128i div_vec = _mm_div_epu64(n_vec, i_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epu64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3260:1: note: '_mm_min_epu64' declared here\n 3260 | _mm_min_epu64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvmjufhc0.cpp:36:23: error: use of undeclared identifier '_mm_rem_epi64'\n   36 |         __m128i mod = _mm_rem_epi64(target, divisors);\n      |                       ^\n[REDACTED]/tmpvmjufhc0.cpp:47:12: error: use of undeclared identifier 'max'; did you mean 'fmax'?\n   47 |     return max(max_divisor1, max_divisor2);\n      |            ^~~\n      |            fmax\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:14: note: 'fmax' declared here\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkpsid5jb.cpp:34:30: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.2'\n   34 |     for (; _mm_movemask_epi8(_mm_cmpgt_epi64(div_vec, one_vec)) != 0; \n      |                              ^\n[REDACTED]/tmpkpsid5jb.cpp:42:24: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i mask = _mm_cmpeq_epi64(mod_vec, zero_vec);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgb9kyxhp.cpp:49:56: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   49 |         __m128i div = _mm_set1_epi32(_mm_cvtsi128_si32(_mm_srli_si128(divisors, i * 4)));\n      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpgb9kyxhp.cpp:51:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         while (_mm_cvtsi128_si32(_mm_rem_epi32(current, div)) == 0) {\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpgb9kyxhp.cpp:53:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   53 |             current = _mm_div_epi32(current, div);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz_8ppjq7.cpp:48:23: error: use of undeclared identifier '_mm_mod_epi32'\n   48 |         __m128i mod = _mm_mod_epi32(num, divisor);\n      |                       ^\n[REDACTED]/tmpz_8ppjq7.cpp:52:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |             num = _mm_div_epi32(num, divisor);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpznxn4jf8.cpp:48:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   48 |         __m128i remainder = _mm_div_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe677unnd.cpp:48:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   48 |         __m128i remainder = _mm_div_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_d8wpnk3.cpp:51:15: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         mod = _mm_rem_epi32(current, divisor);\n      |               ^~~~~~~~~~~~~\n      |               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_d8wpnk3.cpp:55:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |             current = _mm_div_epi32(current, divisor);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp990ak71h.cpp:37:12: error: use of undeclared identifier '_mm_comile_epi64'; did you mean '_mm_comle_epi64'?\n   37 |     while (_mm_comile_epi64(divisor, limit)) {\n      |            ^~~~~~~~~~~~~~~~\n      |            _mm_comle_epi64\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:671:1: note: '_mm_comle_epi64' declared here\n  671 | _mm_comle_epi64(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp990ak71h.cpp:37:12: error: value of type '__m128i' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   37 |     while (_mm_comile_epi64(divisor, limit)) {\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp990ak71h.cpp:41:24: error: use of undeclared identifier '_mm_rem_epi64'\n   41 |         __m128i mod1 = _mm_rem_epi64(num, check1);\n      |                        ^\n[REDACTED]/tmp990ak71h.cpp:42:24: error: use of undeclared identifier '_mm_rem_epi64'\n   42 |         __m128i mod2 = _mm_rem_epi64(num, check2);\n      |                        ^\n[REDACTED]/tmp990ak71h.cpp:44:13: error: use of undeclared identifier '_mm_comieq_epi64'\n   44 |         if (_mm_comieq_epi64(mod1, _mm_setzero_si128()) || \n      |             ^\n[REDACTED]/tmp990ak71h.cpp:45:13: error: use of undeclared identifier '_mm_comieq_epi64'\n   45 |             _mm_comieq_epi64(mod2, _mm_setzero_si128())) {\n      |             ^\n6 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp96gx0qf_.cpp:59:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i min1 = _mm_min_epi32(vec, swap1);\n      |                        ^\n[REDACTED]/tmp96gx0qf_.cpp:60:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i max1 = _mm_max_epi32(vec, swap1);\n      |                        ^\n[REDACTED]/tmp96gx0qf_.cpp:63:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i min2 = _mm_min_epi32(min1, swap2);\n      |                        ^\n[REDACTED]/tmp96gx0qf_.cpp:64:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i max2 = _mm_max_epi32(min1, swap2);\n      |                        ^\n[REDACTED]/tmp96gx0qf_.cpp:67:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   67 |         __m128i sorted = _mm_min_epi32(min2, swap3);\n      |                          ^\n5 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeomx0s4e.cpp:60:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i min = _mm_min_epi32(shuffled1, shuffled2);\n      |                       ^\n[REDACTED]/tmpeomx0s4e.cpp:61:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i max = _mm_max_epi32(shuffled1, shuffled2);\n      |                       ^\n[REDACTED]/tmpeomx0s4e.cpp:63:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   63 |         vec = _mm_blendv_epi8(min, max, mask);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvcfuksx9.cpp:46:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   46 |             int num = _mm_cvtsi128_si32(_mm_srli_si128(vec_nums, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoflaa3_t.cpp:44:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |         __m128i mod11 = _mm_rem_epi32(nums, div11);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpoflaa3_t.cpp:45:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   45 |         __m128i mod13 = _mm_rem_epi32(nums, div13);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr8hi31b5.cpp:51:32: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'sse4.1'\n   51 |                 _mm_srli_epi32(_mm_mullo_epi32(current_vec, _mm_set1_epi32(10)), 1),\n      |                                ^\n[REDACTED]/tmpr8hi31b5.cpp:52:32: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'sse4.1'\n   52 |                 _mm_srli_epi32(_mm_mullo_epi32(current_vec, _mm_set1_epi32(10)), 3)\n      |                                ^\n[REDACTED]/tmpr8hi31b5.cpp:58:32: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'sse4.1'\n   58 |                 _mm_srli_epi32(_mm_mullo_epi32(current_vec, _mm_set1_epi32(10)), 2),\n      |                                ^\n[REDACTED]/tmpr8hi31b5.cpp:59:32: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'sse4.1'\n   59 |                 _mm_srli_epi32(_mm_mullo_epi32(current_vec, _mm_set1_epi32(10)), 3)\n      |                                ^\n[REDACTED]/tmpr8hi31b5.cpp:73:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'popcnt'\n   73 |         count += _mm_popcnt_u32(mask) / 4;\n      |                  ^\n5 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqu7far53.cpp:65:13: error: '__builtin_ia32_blendps' needs target feature sse4.1\n   65 |             _mm_blend_ps(\n      |             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7uuqtaw_.cpp:76:13: error: '__builtin_ia32_blendps' needs target feature sse4.1\n   76 |             _mm_blend_ps(vec, sorted, 0b0101)\n      |             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpujjgxybb.cpp:50:29: error: use of undeclared identifier '_mm_rem_epi64'\n   50 |         __m128i remainder = _mm_rem_epi64(x_vec, base_vec);\n      |                             ^\n[REDACTED]/tmpujjgxybb.cpp:54:17: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   54 |         x_vec = _mm_div_epi64(x_vec, base_vec);\n      |                 ^~~~~~~~~~~~~\n      |                 _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp69c77t5l.cpp:50:29: error: use of undeclared identifier '_mm_rem_epi64'\n   50 |         __m128i remainder = _mm_rem_epi64(x_vec, base_vec);\n      |                             ^\n[REDACTED]/tmp69c77t5l.cpp:53:17: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   53 |         x_vec = _mm_div_epi64(x_vec, base_vec);\n      |                 ^~~~~~~~~~~~~\n      |                 _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbezhbn20.cpp:50:29: error: use of undeclared identifier '_mm_rem_epi64'\n   50 |         __m128i remainder = _mm_rem_epi64(x_vec, base_vec);\n      |                             ^\n[REDACTED]/tmpbezhbn20.cpp:55:17: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   55 |         x_vec = _mm_div_epi64(x_vec, base_vec);\n      |                 ^~~~~~~~~~~~~\n      |                 _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvfizpqs0.cpp:39:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i rev_last = _mm_shuffle_epi8(last, _mm_setr_epi8(\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1weehfmz.cpp:49:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   49 |         shifted = _mm_blendv_epi8(shifted, wrapped, below_a);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvm5ojk19.cpp:49:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   49 |         shifted = _mm_blendv_epi8(shifted, wrapped, below_a);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnr96f273.cpp:52:38: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i delta = _mm_sub_epi8(_mm_blendv_epi8(neg_ones, ones, is_open), \n      |                                      ^\n[REDACTED]/tmpnr96f273.cpp:53:38: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   53 |                                      _mm_blendv_epi8(neg_ones, ones, is_close));\n      |                                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptp_hqoo8.cpp:75:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   75 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(vowel_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpro42sjl9.cpp:73:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   73 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(vowel_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_52pkme7.cpp:76:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   76 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(vowel_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdij82czo.cpp:66:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   66 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(vowels));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_74uzzbm.cpp:54:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   54 |         smallest_even = _mm_blendv_epi8(smallest_even, masked_current, cmp_mask);\n      |                         ^\n[REDACTED]/tmp_74uzzbm.cpp:55:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   55 |         smallest_index = _mm_blendv_epi8(smallest_index, indices, cmp_mask);\n      |                          ^\n[REDACTED]/tmp_74uzzbm.cpp:62:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   62 |     __m128i min1 = _mm_min_epi32(smallest_even, shuffled1);\n      |                    ^\n[REDACTED]/tmp_74uzzbm.cpp:63:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   63 |     __m128i index1 = _mm_blendv_epi8(smallest_index, shuffled2, \n      |                      ^\n[REDACTED]/tmp_74uzzbm.cpp:69:25: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   69 |     __m128i final_min = _mm_min_epi32(min1, min2);\n      |                         ^\n[REDACTED]/tmp_74uzzbm.cpp:70:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   70 |     __m128i final_index = _mm_blendv_epi8(index1, index2, \n      |                           ^\n6 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5_9s4iaj.cpp:47:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   47 |         current_vals = _mm_blendv_epi8(current_vals, _mm_set1_epi32(INT_MAX), _mm_cmpeq_epi32(even_mask, _mm_setzero_si128()));\n      |                        ^\n[REDACTED]/tmp5_9s4iaj.cpp:51:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   51 |         smallest_even_val = _mm_blendv_epi8(smallest_even_val, current_vals, cmp_mask);\n      |                             ^\n[REDACTED]/tmp5_9s4iaj.cpp:52:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   52 |         smallest_even_idx = _mm_blendv_epi8(smallest_even_idx, indices, cmp_mask);\n      |                             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmposrh0mb8.cpp:52:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   52 |             int val = _mm_cvtsi128_si32(_mm_srli_si128(masked_vec, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwgy5n33f.cpp:50:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   50 |             int val = _mm_cvtsi128_si32(_mm_srli_si128(even_vec, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx0he15sz.cpp:50:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   50 |             int val = _mm_cvtsi128_si32(_mm_srli_si128(even_vec, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_95_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_95_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: malloc(): unaligned tcache chunk detected\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppi6gzt2w.cpp:55:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   55 |         prime_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_xic4bl9.cpp:51:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   51 |         prime_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplthdo_b5.cpp:51:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   51 |         prime_count += _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyv38i473.cpp:48:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   48 |         prime_count += _mm_popcnt_u32(_mm_movemask_epi8(match));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp99mdl4_.cpp:39:29: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   39 |             __m128i first = _mm_srli_si128(chars, j);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpp99mdl4_.cpp:40:30: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   40 |             __m128i second = _mm_srli_si128(chars, j + 1);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpp99mdl4_.cpp:41:29: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   41 |             __m128i third = _mm_srli_si128(chars, j + 2);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1po05u4m.cpp:38:31: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   38 |             __m128i shifted = _mm_srli_si128(chunk, j + 1);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb0pywm1g.cpp:45:23: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |         __m128i div = _mm_shuffle_epi32(divisors, _MM_SHUFFLE(i, i, i, i));\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_gfk5s9l.cpp:45:23: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |         __m128i div = _mm_shuffle_epi32(divisors, _MM_SHUFFLE(i, i, i, i));\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmp_gfk5s9l.cpp:46:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   46 |         __m128i mod = _mm_rem_epi32(length_vec, div);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0tuimdc7.cpp:52:31: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |                 __m128i mod = _mm_div_epi32(limit, current_div);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe2em78rc.cpp:44:30: error: use of undeclared identifier '_mm_rem_epi64'\n   44 |         __m128i last_digit = _mm_rem_epi64(digits, mod_10);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr0nyesqu.cpp:44:30: error: use of undeclared identifier '_mm_div_epu64'; did you mean '_mm_min_epu64'?\n   44 |         __m128i div_result = _mm_div_epu64(n_vec, ten);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epu64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3260:1: note: '_mm_min_epu64' declared here\n 3260 | _mm_min_epu64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpukziqzdu.cpp:44:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   44 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n[REDACTED]/tmpukziqzdu.cpp:45:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   45 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyjh3ld6k.cpp:44:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i sum = _mm_hadd_epi32(filtered, filtered);\n      |                       ^\n[REDACTED]/tmpyjh3ld6k.cpp:45:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   45 |         sum = _mm_hadd_epi32(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg3i34_g_.cpp:45:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   45 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n[REDACTED]/tmpg3i34_g_.cpp:46:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   46 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmfgxif71.cpp:42:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'add_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i odd_indices_vec = _mm_blendv_epi8(_mm_setzero_si128(), vec, mask);\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp35nr3u93.cpp:44:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   44 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n[REDACTED]/tmp35nr3u93.cpp:45:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   45 |         vec = _mm_hadd_epi32(vec, vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_7o5znth.cpp:52:46: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   52 |         __m128i is_lowercase = _mm_and_si128(_mm_cmpge_epi8(chars, lowercase_base), _mm_cmpgt_epi8(_mm_set1_epi8('z'), chars));\n      |                                              ^~~~~~~~~~~~~~\n      |                                              _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpst6718jo.cpp:57:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i encoded = _mm_blendv_epi8(case_swapped, replacement, vowel_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdsu7xz36.cpp:64:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   64 |         swapped_case = _mm_blendv_epi8(swapped_case, vowel_replace_a, is_vowel_a);\n      |                        ^\n[REDACTED]/tmpdsu7xz36.cpp:65:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   65 |         swapped_case = _mm_blendv_epi8(swapped_case, vowel_replace_e, is_vowel_e);\n      |                        ^\n[REDACTED]/tmpdsu7xz36.cpp:66:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   66 |         swapped_case = _mm_blendv_epi8(swapped_case, vowel_replace_i, is_vowel_i);\n      |                        ^\n[REDACTED]/tmpdsu7xz36.cpp:67:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   67 |         swapped_case = _mm_blendv_epi8(swapped_case, vowel_replace_o, is_vowel_o);\n      |                        ^\n[REDACTED]/tmpdsu7xz36.cpp:68:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   68 |         swapped_case = _mm_blendv_epi8(swapped_case, vowel_replace_u, is_vowel_u);\n      |                        ^\n5 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2_mwrqpg.cpp:68:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   68 |         swapped_case = _mm_blendv_epi8(swapped_case, replacement, vowel_mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp117ji10o.cpp:68:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   68 |         swapped_case = _mm_blendv_epi8(swapped_case, replacement, vowel_mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcqo_xhib.cpp:59:50: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   59 |                 int multiple = _mm_cvtsi128_si32(_mm_srli_si128(vec_multiples, k * 4));\n      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyex0bh2g.cpp:59:50: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   59 |                 int multiple = _mm_cvtsi128_si32(_mm_srli_si128(vec_multiples, k * 4));\n      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl8nwlqec.cpp:61:49: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   61 |                     int idx = _mm_cvtsi128_si32(_mm_srli_si128(vec_j, k * 4));\n      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfptop_pv.cpp:56:37: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   56 |             __m128i vec_multiples = _mm_mullo_epi32(vec_i, vec_j);\n      |                                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdipzqddq.cpp:59:50: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   59 |                 int multiple = _mm_cvtsi128_si32(_mm_srli_si128(vec_multiples, k * 4));\n      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3409xl5_.cpp:42:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i evenChars = _mm_shuffle_epi8(chars, indices);\n      |                             ^\n[REDACTED]/tmp3409xl5_.cpp:56:19: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   56 |         result += _mm_popcnt_u32(mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpysa1my9b.cpp:42:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i even_chars = _mm_shuffle_epi8(chars, indices);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprqq8swe6.cpp:44:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i even_chars = _mm_shuffle_epi8(chars, even_indices);\n      |                              ^\n[REDACTED]/tmprqq8swe6.cpp:73:19: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   73 |         result += _mm_popcnt_u32(_mm_movemask_epi8(vowel_mask));\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkp8jfmwz.cpp:60:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   60 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph6n7rdhu.cpp:53:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   53 |             int idx = _mm_cvtsi128_si32(_mm_srli_si128(indices, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmph6n7rdhu.cpp:61:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   61 |                 values = _mm_insert_epi32(values, factorial, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmph6n7rdhu.cpp:65:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   65 |                 values = _mm_insert_epi32(values, sum, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0sx01tt0.cpp:56:51: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   56 |             int current_index = _mm_cvtsi128_si32(_mm_srli_si128(indices, j * 4));\n      |                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmp0sx01tt0.cpp:64:17: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   64 |                 _mm_insert_epi32(values, factorial, j);\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmp0sx01tt0.cpp:68:17: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   68 |                 _mm_insert_epi32(values, sum, j);\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp2kroibq.cpp:53:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   53 |             int idx = _mm_cvtsi128_si32(_mm_srli_si128(indices, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpp2kroibq.cpp:61:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   61 |                 values = _mm_insert_epi32(values, factorial, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpp2kroibq.cpp:65:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   65 |                 values = _mm_insert_epi32(values, sum, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplltn1w7s.cpp:64:28: error: use of undeclared identifier '_mm_mod_epi32'\n   64 |             current_mult = _mm_mod_epi32(current_mult, _mm_set1_epi32(10000));\n      |                            ^\n[REDACTED]/tmplltn1w7s.cpp:66:25: error: use of undeclared identifier '_mm_mod_epi32'\n   66 |             factorial = _mm_mod_epi32(factorial, _mm_set1_epi32(10000));\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg9kkpjqh.cpp:53:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   53 |             int idx = _mm_cvtsi128_si32(_mm_srli_si128(indices, j * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpg9kkpjqh.cpp:61:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   61 |                 values = _mm_insert_epi32(values, factorial, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpg9kkpjqh.cpp:65:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   65 |                 values = _mm_insert_epi32(values, sum, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj6yug2cm.cpp:63:35: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   63 |                 palindrome_mask = _mm_insert_epi32(palindrome_mask, 1 << j, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7ph0esy5.cpp:49:28: error: no matching function for call to '_mm_set_epi32'\n   49 |         __m128i reversed = _mm_set_epi32(\n      |                            ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 1st argument\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_p4l1hsq.cpp:63:35: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   63 |                 palindrome_mask = _mm_insert_epi32(palindrome_mask, 1, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplagwnwwi.cpp:60:33: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   60 |                 is_palindrome = _mm_insert_epi32(is_palindrome, 1, j);\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiqnafyq3.cpp:49:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj2dj46ap.cpp:49:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2w7qm8k6.cpp:65:30: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   65 |                 digit_sums = _mm_insert_epi32(digit_sums, 1, j);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb7bobi1t.cpp:49:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp8deiqzf.cpp:41:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   41 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask1));\n      |                       ^\n[REDACTED]/tmpp8deiqzf.cpp:46:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   46 |         odd_count2 += _mm_popcnt_u32(odd_mask_val2);\n      |                       ^\n[REDACTED]/tmpp8deiqzf.cpp:47:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         even_count2 += 4 - _mm_popcnt_u32(odd_mask_val2);\n      |                            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvfzs8van.cpp:44:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   44 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask1));\n      |                       ^\n[REDACTED]/tmpvfzs8van.cpp:48:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   48 |         odd_count2 += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask2));\n      |                       ^\n[REDACTED]/tmpvfzs8van.cpp:52:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   52 |         even_count2 += _mm_popcnt_u32(_mm_movemask_epi8(even_mask2));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprix9kin0.cpp:43:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   43 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_epi8(odd_count_vec1));\n      |                       ^\n[REDACTED]/tmprix9kin0.cpp:48:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   48 |         odd_count2 += _mm_popcnt_u32(_mm_movemask_epi8(odd_count_vec2));\n      |                       ^\n[REDACTED]/tmprix9kin0.cpp:52:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   52 |         even_count2 += _mm_popcnt_u32(_mm_movemask_epi8(even_mask2));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxzfvcywv.cpp:43:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   43 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask1));\n      |                       ^\n[REDACTED]/tmpxzfvcywv.cpp:47:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         odd_count2 += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask2));\n      |                       ^\n[REDACTED]/tmpxzfvcywv.cpp:51:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         even_count2 += _mm_popcnt_u32(_mm_movemask_epi8(even_mask2));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp4tnye3g.cpp:46:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   46 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(vec1_odd)));\n      |                       ^\n[REDACTED]/tmpp4tnye3g.cpp:47:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         odd_count2 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(vec2_odd)));\n      |                       ^\n[REDACTED]/tmpp4tnye3g.cpp:51:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         even_count2 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(vec2_even)));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvcpnitzd.cpp:72:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   72 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqnsgzp3u.cpp:71:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   71 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp12jh9umv.cpp:71:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   71 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpns38dh33.cpp:71:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   71 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdxzlnw_z.cpp:71:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   71 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptib78ibu.cpp:56:18: error: no matching function for call to 'min'\n   56 |         minSum = std::min(minSum, _mm_cvtsi128_si64(min_sum));\n      |                  ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmptib78ibu.cpp:57:18: error: no matching function for call to 'min'\n   57 |         minSum = std::min(minSum, _mm_cvtsi128_si64(_mm_srli_si128(min_sum, 8)));\n      |                  ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp13530x7.cpp:46:29: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   46 |                 row_water = _mm_insert_epi32(row_water, water_in_row, k);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpom090v4g.cpp:49:31: error: no matching function for call to '_mm_add_epi32'\n   49 |             __m128i row_sum = _mm_add_epi32(\n      |                               ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2058:46: note: candidate function not viable: requires 2 arguments, but 1 was provided\n 2058 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi32(__m128i __a,\n      |                                              ^             ~~~~~~~~~~~~\n 2059 |                                                            __m128i __b) {\n      |                                                            ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqi4vry3s.cpp:50:17: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'max_fill_simd' that is compiled without support for 'popcnt'\n   50 |                 _mm_popcnt_u32(_mm_movemask_epi8(row4)),\n      |                 ^\n[REDACTED]/tmpqi4vry3s.cpp:51:17: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'max_fill_simd' that is compiled without support for 'popcnt'\n   51 |                 _mm_popcnt_u32(_mm_movemask_epi8(row3)),\n      |                 ^\n[REDACTED]/tmpqi4vry3s.cpp:52:17: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'max_fill_simd' that is compiled without support for 'popcnt'\n   52 |                 _mm_popcnt_u32(_mm_movemask_epi8(row2)),\n      |                 ^\n[REDACTED]/tmpqi4vry3s.cpp:53:17: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'max_fill_simd' that is compiled without support for 'popcnt'\n   53 |                 _mm_popcnt_u32(_mm_movemask_epi8(row1))\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd0wxsatg.cpp:49:33: error: no matching function for call to '_mm_add_epi32'\n   49 |             __m128i row_water = _mm_add_epi32(\n      |                                 ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2058:46: note: candidate function not viable: requires 2 arguments, but 1 was provided\n 2058 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi32(__m128i __a,\n      |                                              ^             ~~~~~~~~~~~~\n 2059 |                                                            __m128i __b) {\n      |                                                            ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbia_mtd7.cpp:45:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   45 |             0, (vec.m128i_i16[1] % 2 == 1) ? -1 : 0,\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmpbia_mtd7.cpp:46:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   46 |             0, (vec.m128i_i16[3] % 2 == 1) ? -1 : 0,\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmpbia_mtd7.cpp:47:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   47 |             0, (vec.m128i_i16[5] % 2 == 1) ? -1 : 0,\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmpbia_mtd7.cpp:48:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |             0, (vec.m128i_i16[7] % 2 == 1) ? -1 : 0\n      |                 ~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwh60hkac.cpp:45:28: error: argument to '__builtin_ia32_vec_set_v8hi' must be a constant integer\n   45 |                 odd_mask = _mm_insert_epi16(odd_mask, -1, j);\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4189:13: note: expanded from macro '_mm_insert_epi16'\n 4189 |   ((__m128i)__builtin_ia32_vec_set_v8hi((__v8hi)(__m128i)(a), (int)(b),        \\\n      |             ^\n 4190 |                                         (int)(imm)))\n      |                                         ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf43wtpon.cpp:48:27: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i sum_vec = _mm_hadd_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpf43wtpon.cpp:49:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   49 |         sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwydhcipp.cpp:43:27: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i sum_vec = _mm_hadd_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpwydhcipp.cpp:44:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   44 |         sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx1ysvmoi.cpp:43:27: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i sum_vec = _mm_hadd_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpx1ysvmoi.cpp:44:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   44 |         sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6j21zcxd.cpp:44:27: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i sum_vec = _mm_hadd_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmp6j21zcxd.cpp:45:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   45 |         sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjvxynt1c.cpp:50:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i abs_vec = _mm_abs_epi32(current_vec);\n      |                           ^\n[REDACTED]/tmpjvxynt1c.cpp:55:24: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   55 |     __m128i sign_sum = _mm_hadd_epi32(sign_vec, sign_vec);\n      |                        ^\n[REDACTED]/tmpjvxynt1c.cpp:56:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   56 |     sign_sum = _mm_hadd_epi32(sign_sum, sign_sum);\n      |                ^\n[REDACTED]/tmpjvxynt1c.cpp:59:29: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   59 |     __m128i magnitude_sum = _mm_hadd_epi32(magnitude_vec, magnitude_vec);\n      |                             ^\n[REDACTED]/tmpjvxynt1c.cpp:60:21: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   60 |     magnitude_sum = _mm_hadd_epi32(magnitude_sum, magnitude_sum);\n      |                     ^\n5 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_qpmyifv.cpp:52:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   52 |         __m128i abs_vec = _mm_abs_epi32(current_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8_ccnbii.cpp:50:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i abs_vec = _mm_abs_epi32(current_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgtpmg786.cpp:46:37: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   46 |         signs = _mm_or_si128(signs, _mm_cmpneq_epi32(current_vec, _mm_setzero_si128()));\n      |                                     ^~~~~~~~~~~~~~~~\n      |                                     _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp824vbnms.cpp:54:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   54 |         __m128i abs_vec = _mm_abs_epi32(current_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2xd6ewvo.cpp:75:18: error: no member named 'function' in namespace 'std'\n   75 |             std::function<void(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |             ~~~~~^\n[REDACTED]/tmp2xd6ewvo.cpp:75:35: error: expected '(' for function-style cast or type construction\n   75 |             std::function<void(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                ~~~^\n[REDACTED]/tmp2xd6ewvo.cpp:75:40: error: expected '(' for function-style cast or type construction\n   75 |             std::function<void(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                     ~~~^\n[REDACTED]/tmp2xd6ewvo.cpp:75:45: error: expected '(' for function-style cast or type construction\n   75 |             std::function<void(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                          ~~~^\n[REDACTED]/tmp2xd6ewvo.cpp:75:48: error: use of undeclared identifier 'dfs'\n   75 |             std::function<void(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                                ^\n[REDACTED]/tmp2xd6ewvo.cpp:101:25: error: use of undeclared identifier 'dfs'\n  101 |                         dfs(new_row, new_col, depth + 1);\n      |                         ^\n[REDACTED]/tmp2xd6ewvo.cpp:106:13: error: use of undeclared identifier 'dfs'\n  106 |             dfs(start_row, start_col, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpod49srjb.cpp:81:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   81 |         minVal = _mm_blendv_epi8(minVal, currentVals, mask);\n      |                  ^\n[REDACTED]/tmpod49srjb.cpp:82:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   82 |         minPos = _mm_blendv_epi8(minPos, _mm_set1_epi32(i), mask);\n      |                  ^\n[REDACTED]/tmpod49srjb.cpp:116:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  116 |         neighborVals = _mm_blendv_epi8(_mm_set1_epi32(INT_MAX), neighborVals, validMask);\n      |                        ^\n[REDACTED]/tmpod49srjb.cpp:118:34: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  118 |         __m128i minNeighborVal = _mm_min_epi32(neighborVals, _mm_srli_si128(neighborVals, 8));\n      |                                  ^\n[REDACTED]/tmpod49srjb.cpp:119:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  119 |         minNeighborVal = _mm_min_epi32(minNeighborVal, _mm_srli_si128(minNeighborVal, 4));\n      |                          ^\n5 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu8s1r14e.cpp:75:18: error: no member named 'function' in namespace 'std'\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |             ~~~~~^\n[REDACTED]/tmpu8s1r14e.cpp:75:35: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                ~~~^\n[REDACTED]/tmpu8s1r14e.cpp:75:40: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                     ~~~^\n[REDACTED]/tmpu8s1r14e.cpp:75:45: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                          ~~~^\n[REDACTED]/tmpu8s1r14e.cpp:75:48: error: use of undeclared identifier 'dfs'\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                                ^\n[REDACTED]/tmpu8s1r14e.cpp:94:25: error: use of undeclared identifier 'dfs'\n   94 |                         dfs(new_row, new_col, depth + 1);\n      |                         ^\n[REDACTED]/tmpu8s1r14e.cpp:100:13: error: use of undeclared identifier 'dfs'\n  100 |             dfs(start_row, start_col, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp48o66qv_.cpp:86:30: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   86 |                     int di = _mm_extract_epi32(directions, d) / N;\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp48o66qv_.cpp:87:30: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   87 |                     int dj = _mm_extract_epi32(directions, d) % N;\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp48o66qv_.cpp:92:42: error: no viable conversion from 'value_type' (aka 'int') to 'std::vector<int>'\n   92 |                         std::vector<int> prevPath = paths[ni][nj][len - 1];\n      |                                          ^          ~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'value_type' (aka 'int') to 'const vector<int> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'value_type' (aka 'int') to 'vector<int> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'value_type' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\n[REDACTED]/tmp48o66qv_.cpp:107:36: error: assigning to 'value_type' (aka 'int') from incompatible type 'std::vector<int>'\n  107 |                 paths[i][j][len] = minPath;\n      |                                    ^~~~~~~\n[REDACTED]/tmp48o66qv_.cpp:118:58: error: invalid operands to binary expression ('value_type' (aka 'int') and 'std::vector<int>')\n  118 |                 (dp[i][j][k] == minVal && paths[i][j][k] < result)) {\n      |                                           ~~~~~~~~~~~~~~ ^ ~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/system_error:324:3: note: candidate function not viable: no known conversion from 'value_type' (aka 'int') to 'const error_code' for 1st argument\n  324 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n      |   ^         ~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/system_error:507:3: note: candidate function not viable: no known conversion from 'value_type' (aka 'int') to 'const error_condition' for 1st argument\n  507 |   operator<(const error_condition& __lhs,\n      |   ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:455:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'value_type' (aka 'int')\n  455 |     operator<(const reverse_iterator<_Iterator>& __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:500:5: note: candidate template ignored: could not match 'reverse_iterator<_IteratorL>' against 'value_type' (aka 'int')\n  500 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1705:5: note: candidate template ignored: could not match 'move_iterator<_IteratorL>' against 'value_type' (aka 'int')\n 1705 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1770:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'value_type' (aka 'int')\n 1770 |     operator<(const move_iterator<_Iterator>& __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_pair.h:835:5: note: candidate template ignored: could not match 'pair<_T1, _T2>' against 'value_type' (aka 'int')\n  835 |     operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/string_view:671:5: note: candidate template ignored: could not match 'basic_string_view<_CharT, _Traits>' against 'value_type' (aka 'int')\n  671 |     operator< (basic_string_view<_CharT, _Traits> __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/string_view:678:5: note: candidate template ignored: could not match 'basic_string_view<_CharT, _Traits>' against 'value_type' (aka 'int')\n  678 |     operator< (basic_string_view<_CharT, _Traits> __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/string_view:686:5: note: candidate template ignored: could not match 'basic_string_view' against 'vector'\n  686 |     operator< (__type_identity_t<basic_string_view<_CharT, _Traits>> __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3829:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'value_type' (aka 'int')\n 3829 |     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3843:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'value_type' (aka 'int')\n 3843 |     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3856:5: note: candidate template ignored: could not match 'const _CharT *' against 'value_type' (aka 'int')\n 3856 |     operator<(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/tuple:1961:5: note: candidate template ignored: could not match 'tuple<_TElements...>' against 'value_type' (aka 'int')\n 1961 |     operator<(const tuple<_TElements...>& __t,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:2079:5: note: candidate template ignored: could not match 'vector<_Tp, _Alloc>' against 'value_type' (aka 'int')\n 2079 |     operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:1551:5: note: candidate template ignored: could not match 'map<_Key, _Tp, _Compare, _Alloc>' against 'value_type' (aka 'int')\n 1551 |     operator<(const map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_multimap.h:1172:5: note: candidate template ignored: could not match 'multimap<_Key, _Tp, _Compare, _Alloc>' against 'value_type' (aka 'int')\n 1172 |     operator<(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^\n[REDACTED]/tmp48o66qv_.cpp:120:24: error: no viable overloaded '='\n  120 |                 result = paths[i][j][k];\n      |                 ~~~~~~ ^ ~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:751:7: note: candidate function not viable: no known conversion from 'value_type' (aka 'int') to 'const vector<int>' for 1st argument\n  751 |       operator=(const vector& __x);\n      |       ^         ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:766:7: note: candidate function not viable: no known conversion from 'value_type' (aka 'int') to 'vector<int>' for 1st argument\n  766 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n      |       ^         ~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:788:7: note: candidate function not viable: no known conversion from 'value_type' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument\n  788 |       operator=(initializer_list<value_type> __l)\n      |       ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpud5di458.cpp:75:18: error: no member named 'function' in namespace 'std'\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |             ~~~~~^\n[REDACTED]/tmpud5di458.cpp:75:35: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                ~~~^\n[REDACTED]/tmpud5di458.cpp:75:40: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                     ~~~^\n[REDACTED]/tmpud5di458.cpp:75:45: error: expected '(' for function-style cast or type construction\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                          ~~~^\n[REDACTED]/tmpud5di458.cpp:75:48: error: use of undeclared identifier 'dfs'\n   75 |             std::function<bool(int, int, int)> dfs = [&](int row, int col, int depth) {\n      |                                                ^\n[REDACTED]/tmpud5di458.cpp:97:25: error: use of undeclared identifier 'dfs'\n   97 |                         dfs(new_row, new_col, depth + 1);\n      |                         ^\n[REDACTED]/tmpud5di458.cpp:103:13: error: use of undeclared identifier 'dfs'\n  103 |             dfs(start_row, start_col, 0);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ovoz7h_.cpp:35:39: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]\n   35 |     int len = sprintf(digits, \"%llu\", n);\n      |                                ~~~~   ^\n      |                                %lu\n[REDACTED]/tmp6ovoz7h_.cpp:59:25: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   59 |             int digit = _mm_extract_epi8(digit_ints, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n[REDACTED]/tmp6ovoz7h_.cpp:60:26: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   60 |             int is_odd = _mm_extract_epi8(odd_mask, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0yqfn3pw.cpp:35:39: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]\n   35 |     int len = sprintf(digits, \"%llu\", n);\n      |                                ~~~~   ^\n      |                                %lu\n[REDACTED]/tmp0yqfn3pw.cpp:59:25: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   59 |             int digit = _mm_extract_epi8(digit_vec, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n[REDACTED]/tmp0yqfn3pw.cpp:60:26: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   60 |             int is_odd = _mm_extract_epi8(odd_mask, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx68_2ujs.cpp:35:39: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]\n   35 |     int len = sprintf(digits, \"%llu\", n);\n      |                                ~~~~   ^\n      |                                %lu\n[REDACTED]/tmpx68_2ujs.cpp:59:25: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   59 |         uint8_t digit = _mm_extract_epi8(odd_digits, i);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp035sdcvj.cpp:35:39: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]\n   35 |     int len = sprintf(digits, \"%llu\", n);\n      |                                ~~~~   ^\n      |                                %lu\n[REDACTED]/tmp035sdcvj.cpp:63:25: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   63 |             int digit = _mm_extract_epi8(odd_digits, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8bqzn73y.cpp:39:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 roundedValues = _mm_ceil_ps(values);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp8bqzn73y.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp8bqzn73y.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp8bqzn73y.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzn9cc9gr.cpp:39:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 roundedValues = _mm_ceil_ps(values);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpzn9cc9gr.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzn9cc9gr.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzn9cc9gr.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9gwe3hv4.cpp:39:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 roundedValues = _mm_ceil_ps(values);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp9gwe3hv4.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp9gwe3hv4.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp9gwe3hv4.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmc8r8wvx.cpp:35:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 ceil_vec = _mm_ceil_ps(input_vec);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpmc8r8wvx.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpmc8r8wvx.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpmc8r8wvx.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv_6uh5vk.cpp:39:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 roundedValues = _mm_ceil_ps(values);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpv_6uh5vk.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv_6uh5vk.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv_6uh5vk.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqal28chi.cpp:39:30: error: use of undeclared identifier '_mm_cmpge_epi32'; did you mean '_mm_cmpgt_epi32'?\n   39 |         __m128i comparison = _mm_cmpge_epi32(current, next);\n      |                              ^~~~~~~~~~~~~~~\n      |                              _mm_cmpgt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3120:46: note: '_mm_cmpgt_epi32' declared here\n 3120 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkbjzmfp_.cpp:48:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   48 |         max_neg = _mm_max_epi32(max_neg, masked_neg);\n      |                   ^\n[REDACTED]/tmpkbjzmfp_.cpp:55:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         min_pos = _mm_min_epi32(min_pos, _mm_or_si128(masked_pos, _mm_cmpeq_epi32(masked_pos, _mm_setzero_si128())));\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp10jq3w1x.cpp:46:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         largest_negative = _mm_max_epi32(largest_negative, negative_nums);\n      |                            ^\n[REDACTED]/tmp10jq3w1x.cpp:51:29: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         smallest_positive = _mm_min_epi32(smallest_positive, _mm_or_si128(positive_nums, _mm_cmpeq_epi32(positive_nums, _mm_setzero_si128())));\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz5v86s9k.cpp:46:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         largest_negative = _mm_max_epi32(largest_negative, masked_negative);\n      |                            ^\n[REDACTED]/tmpz5v86s9k.cpp:51:29: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         smallest_positive = _mm_min_epi32(smallest_positive, _mm_or_si128(masked_positive, _mm_cmpeq_epi32(masked_positive, _mm_setzero_si128())));\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwegpvtw0.cpp:51:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         largest_negative = _mm_max_epi32(largest_negative, masked_negative);\n      |                            ^\n[REDACTED]/tmpwegpvtw0.cpp:55:29: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         smallest_positive = _mm_min_epi32(smallest_positive, \n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzzhicysr.cpp:55:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         max_negative = _mm_max_epi32(max_negative, masked_negative);\n      |                        ^\n[REDACTED]/tmpzzhicysr.cpp:59:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   59 |         min_positive = _mm_min_epi32(min_positive, \n      |                        ^\n[REDACTED]/tmpzzhicysr.cpp:65:20: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   65 |     max_negative = _mm_max_epi32(max_negative, max_negative_shifted);\n      |                    ^\n[REDACTED]/tmpzzhicysr.cpp:67:20: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   67 |     max_negative = _mm_max_epi32(max_negative, max_negative_shifted);\n      |                    ^\n[REDACTED]/tmpzzhicysr.cpp:70:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   70 |     min_positive = _mm_min_epi32(min_positive, min_positive_shifted);\n      |                    ^\n[REDACTED]/tmpzzhicysr.cpp:72:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |     min_positive = _mm_min_epi32(min_positive, min_positive_shifted);\n      |                    ^\n6 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7wig7_sh.cpp:41:29: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'sse4.1'\n   41 |             factorial_vec = _mm_mul_epi32(factorial_vec, counter_vec);\n      |                             ^\n[REDACTED]/tmp7wig7_sh.cpp:46:22: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'sse4.1'\n   46 |         result_vec = _mm_mul_epi32(result_vec, factorial_vec);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4g2bi718.cpp:39:64: error: use of undeclared identifier '_mm_mod_epi32'\n   39 |         __m128i div3_mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mod_epi32(indices, _mm_set1_epi32(3)));\n      |                                                                ^\n[REDACTED]/tmp4g2bi718.cpp:40:64: error: use of undeclared identifier '_mm_mod_epi32'\n   40 |         __m128i div4_mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mod_epi32(indices, _mm_set1_epi32(4)));\n      |                                                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpggpa75iu.cpp:48:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i squared = _mm_mullo_epi32(current, current);\n      |                           ^\n[REDACTED]/tmpggpa75iu.cpp:52:50: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i cubed = _mm_mullo_epi32(current, _mm_mullo_epi32(current, current));\n      |                                                  ^\n[REDACTED]/tmpggpa75iu.cpp:52:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i cubed = _mm_mullo_epi32(current, _mm_mullo_epi32(current, current));\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnk6lmlow.cpp:51:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i squared = _mm_mullo_epi32(current, current);\n      |                           ^\n[REDACTED]/tmpnk6lmlow.cpp:55:50: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i cubed = _mm_mullo_epi32(current, _mm_mullo_epi32(current, current));\n      |                                                  ^\n[REDACTED]/tmpnk6lmlow.cpp:55:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i cubed = _mm_mullo_epi32(current, _mm_mullo_epi32(current, current));\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0iotr0mq.cpp:39:64: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i div3_mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mullo_epi32(index_vec, _mm_set1_epi32(1/3)));\n      |                                                                ^\n[REDACTED]/tmp0iotr0mq.cpp:40:64: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i div4_mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mullo_epi32(index_vec, _mm_set1_epi32(1/4)));\n      |                                                                ^\n[REDACTED]/tmp0iotr0mq.cpp:43:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmp0iotr0mq.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmp0iotr0mq.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n[REDACTED]/tmp0iotr0mq.cpp:55:27: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   55 |         __m128i sum_vec = _mm_hadd_epi32(result, result);\n      |                           ^\n[REDACTED]/tmp0iotr0mq.cpp:56:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   56 |         sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                   ^\n7 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf3ruq1kl.cpp:41:70: error: use of undeclared identifier '_mm_mod_epi32'\n   41 |         __m128i multipleOf3Mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mod_epi32(indexVector, _mm_set1_epi32(3)));\n      |                                                                      ^\n[REDACTED]/tmpf3ruq1kl.cpp:42:70: error: use of undeclared identifier '_mm_mod_epi32'\n   42 |         __m128i multipleOf4Mask = _mm_cmpeq_epi32(_mm_set1_epi32(0), _mm_mod_epi32(indexVector, _mm_set1_epi32(4)));\n      |                                                                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfi2xrmil.cpp:45:30: error: use of undeclared identifier '_mm_mod_epi32'\n   45 |         __m128i last_digit = _mm_mod_epi32(abs_vec, _mm_set1_epi32(10));\n      |                              ^\n[REDACTED]/tmpfi2xrmil.cpp:48:45: error: use of undeclared identifier '_mm_mod_epi32'\n   48 |         __m128i first_odd = _mm_cmpeq_epi32(_mm_mod_epi32(first_digit, _mm_set1_epi32(10)), _mm_set1_epi32(1));\n      |                                             ^\n[REDACTED]/tmpfi2xrmil.cpp:49:44: error: use of undeclared identifier '_mm_mod_epi32'\n   49 |         __m128i last_odd = _mm_cmpeq_epi32(_mm_mod_epi32(last_digit, _mm_set1_epi32(2)), _mm_set1_epi32(1));\n      |                                            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0twwzmut.cpp:48:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |             int num = abs_vec.m128i_i32[j];\n      |                       ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp0twwzmut.cpp:52:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |                 first_digit_mask.m128i_i32[j] = 0xFFFFFFFF;\n      |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp0twwzmut.cpp:62:32: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   62 |                 last_digit_mask.m128i_i32[j] = 0xFFFFFFFF;\n      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp0twwzmut.cpp:72:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   72 |             if (combined_mask.m128i_i32[j] != 0) {\n      |                 ~~~~~~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk_yip_pa.cpp:51:99: error: invalid operands to binary expression ('double' and 'int')\n   51 |             (nums[i+3] / std::abs(std::pow(10, std::floor(std::log10(std::abs(nums[i+3]))) + 1))) % 2 == 1,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmpk_yip_pa.cpp:52:99: error: invalid operands to binary expression ('double' and 'int')\n   52 |             (nums[i+2] / std::abs(std::pow(10, std::floor(std::log10(std::abs(nums[i+2]))) + 1))) % 2 == 1,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmpk_yip_pa.cpp:53:99: error: invalid operands to binary expression ('double' and 'int')\n   53 |             (nums[i+1] / std::abs(std::pow(10, std::floor(std::log10(std::abs(nums[i+1]))) + 1))) % 2 == 1,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmpk_yip_pa.cpp:54:95: error: invalid operands to binary expression ('double' and 'int')\n   54 |             (nums[i] / std::abs(std::pow(10, std::floor(std::log10(std::abs(nums[i]))) + 1))) % 2 == 1\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmpk_yip_pa.cpp:68:95: error: invalid operands to binary expression ('double' and 'int')\n   68 |             (nums[i] / std::abs(std::pow(10, std::floor(std::log10(std::abs(nums[i]))) + 1))) % 2 == 1) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n5 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4x_y1gsk.cpp:43:31: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i first_digit = _mm_div_epi32(abs_vec, _mm_set1_epi32(pow(10, floor(log10(INT_MAX)))));\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp4x_y1gsk.cpp:44:30: error: use of undeclared identifier '_mm_mod_epi32'\n   44 |         __m128i last_digit = _mm_mod_epi32(abs_vec, _mm_set1_epi32(10));\n      |                              ^\n[REDACTED]/tmp4x_y1gsk.cpp:47:50: error: use of undeclared identifier '_mm_mod_epi32'\n   47 |         __m128i first_odd_mask = _mm_cmpeq_epi32(_mm_mod_epi32(first_digit, _mm_set1_epi32(2)), _mm_set1_epi32(1));\n      |                                                  ^\n[REDACTED]/tmp4x_y1gsk.cpp:48:49: error: use of undeclared identifier '_mm_mod_epi32'\n   48 |         __m128i last_odd_mask = _mm_cmpeq_epi32(_mm_mod_epi32(last_digit, _mm_set1_epi32(2)), _mm_set1_epi32(1));\n      |                                                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6x6n6j5c.cpp:51:94: error: invalid operands to binary expression ('typename __gnu_cxx::__promote_2<int, double>::__type' (aka 'double') and 'int')\n   51 |             (std::abs(nums[i+3]) / std::pow(10, std::floor(std::log10(std::abs(nums[i+3])))) % 2 == 1),\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmp6x6n6j5c.cpp:52:94: error: invalid operands to binary expression ('typename __gnu_cxx::__promote_2<int, double>::__type' (aka 'double') and 'int')\n   52 |             (std::abs(nums[i+2]) / std::pow(10, std::floor(std::log10(std::abs(nums[i+2])))) % 2 == 1),\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmp6x6n6j5c.cpp:53:94: error: invalid operands to binary expression ('typename __gnu_cxx::__promote_2<int, double>::__type' (aka 'double') and 'int')\n   53 |             (std::abs(nums[i+1]) / std::pow(10, std::floor(std::log10(std::abs(nums[i+1])))) % 2 == 1),\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmp6x6n6j5c.cpp:54:90: error: invalid operands to binary expression ('typename __gnu_cxx::__promote_2<int, double>::__type' (aka 'double') and 'int')\n   54 |             (std::abs(nums[i]) / std::pow(10, std::floor(std::log10(std::abs(nums[i])))) % 2 == 1)\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n[REDACTED]/tmp6x6n6j5c.cpp:68:91: error: invalid operands to binary expression ('typename __gnu_cxx::__promote_2<int, double>::__type' (aka 'double') and 'int')\n   68 |             (std::abs(nums[i]) / std::pow(10, std::floor(std::log10(std::abs(nums[i]))))) % 2 == 1) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~\n5 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn2owze8u.cpp:72:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i squared = _mm_mul_epi32(indices, indices);\n      |                           ^\n[REDACTED]/tmpn2owze8u.cpp:73:32: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   73 |         __m128i squared_next = _mm_mul_epi32(indices_next, indices_next);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphokseyyg.cpp:72:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i squared1 = _mm_mul_epi32(indices, indices);\n      |                            ^\n[REDACTED]/tmphokseyyg.cpp:73:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   73 |         __m128i squared2 = _mm_mul_epi32(indices2, indices2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9qhlnk20.cpp:72:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i squared1 = _mm_mul_epi32(indices, indices);\n      |                            ^\n[REDACTED]/tmp9qhlnk20.cpp:73:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   73 |         __m128i squared2 = _mm_mul_epi32(indices2, indices2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1vk35q25.cpp:72:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i squared1 = _mm_mul_epi32(indices, indices);\n      |                            ^\n[REDACTED]/tmp1vk35q25.cpp:73:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   73 |         __m128i squared2 = _mm_mul_epi32(indices2, indices2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzvrm0vp7.cpp:72:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i squared1 = _mm_mul_epi32(indices, indices);\n      |                            ^\n[REDACTED]/tmpzvrm0vp7.cpp:73:28: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   73 |         __m128i squared2 = _mm_mul_epi32(indices2, indices2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr4827v68.cpp:39:40: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   39 |         result = _mm_and_si128(result, _mm_cmpneq_epi32(mod, _mm_setzero_si128()));\n      |                                        ^~~~~~~~~~~~~~~~\n      |                                        _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn558076m.cpp:46:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i quotient = _mm_div_epi32(num, divisor);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm91q2wjb.cpp:42:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   42 |         __m128i div = _mm_div_epi32(num, current);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq5v0q87p.cpp:40:27: error: use of undeclared identifier '_mm_mod_ps'\n   40 |             _mm_cmpneq_ps(_mm_mod_ps(vec_data, _mm_set1_ps(2.0f)), _mm_setzero_ps()),\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0hixn2nm.cpp:40:27: error: use of undeclared identifier '_mm_mod_ps'\n   40 |             _mm_cmpneq_ps(_mm_mod_ps(vec_data, _mm_set1_ps(2.0f)), _mm_setzero_ps()),\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk791699b.cpp:40:27: error: use of undeclared identifier '_mm_mod_ps'\n   40 |             _mm_cmpneq_ps(_mm_mod_ps(vec_data, _mm_set1_ps(2.0f)), _mm_setzero_ps()),\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5xv1onhg.cpp:40:27: error: use of undeclared identifier '_mm_mod_ps'\n   40 |             _mm_cmpneq_ps(_mm_mod_ps(input_vec, _mm_set1_ps(2.0f)), _mm_setzero_ps()),\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1tbxl7ts.cpp:40:27: error: use of undeclared identifier '_mm_mod_ps'\n   40 |             _mm_cmpneq_ps(_mm_mod_ps(input_vec, _mm_set1_ps(2.0f)), _mm_setzero_ps()),\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmmalq9dg.cpp:41:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6r9a2acr.cpp:41:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4hiqbvsj.cpp:40:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ikx7lu5.cpp:41:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoya48ohb.cpp:41:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}

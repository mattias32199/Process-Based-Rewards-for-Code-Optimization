{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwcum13qt.cpp:35:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled = _mm_mullo_epi32(src_vec, scale_vec);\n      |                          ^\n[REDACTED]/tmpwcum13qt.cpp:44:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i prod = _mm_mullo_epi32(tmp1, tmp2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp54uf4gv7.cpp:35:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled = _mm_mullo_epi32(src_vec, scale_vec);\n      |                          ^\n[REDACTED]/tmp54uf4gv7.cpp:44:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i prod = _mm_mullo_epi32(tmp1, tmp2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqz0vkr2s.cpp:42:22: error: use of undeclared identifier '_mm_mulhi_epi32'\n   42 |         __m128i hi = _mm_mulhi_epi32(scaled_plus_prod, div7);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpimo1c06v.cpp:42:22: error: use of undeclared identifier '_mm_mulhi_epi32'\n   42 |         __m128i hi = _mm_mulhi_epi32(scaled_plus_prod, div7_vec);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmple9spfzo.cpp:33:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i scaled = _mm_mullo_epi32(src_vec, scale_vec);\n      |                          ^\n[REDACTED]/tmple9spfzo.cpp:38:31: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i tmp1_x_tmp2 = _mm_mullo_epi32(tmp1, tmp2);\n      |                               ^\n[REDACTED]/tmple9spfzo.cpp:48:26: error: '__builtin_ia32_pblendw128' needs target feature sse4.1\n   48 |         __m128i result = _mm_blend_epi16(t1, _mm_slli_si128(t3, 4), 0xCC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_5_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_6_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_6_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_6_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_6_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_6_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgf0cgk5t.cpp:46:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   46 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n[REDACTED]/tmpgf0cgk5t.cpp:47:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   47 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmcp2cho4.cpp:37:26: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   37 |         __m128i result = _mm_srai_epi64(sum, 1);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1box9wtd.cpp:48:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   48 |         min_val = _mm_min_epi32(min_val, v1);\n      |                   ^\n[REDACTED]/tmp1box9wtd.cpp:49:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   49 |         min_val = _mm_min_epi32(min_val, v2);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuzh_kgkg.cpp:43:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |         min_val = _mm_min_epi32(min_val, curr);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpod9q2un2.cpp:43:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |         min_val = _mm_min_epi32(min_val, curr);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxc1cgln9.cpp:48:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   48 |         min_val = _mm_min_epi32(min_val, v1);\n      |                   ^\n[REDACTED]/tmpxc1cgln9.cpp:49:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   49 |         min_val = _mm_min_epi32(min_val, v2);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkin9xml6.cpp:64:15: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   64 |     min_val = min(min_val, min_arr[0]);\n      |               ^~~\n      |               fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n[REDACTED]/tmpkin9xml6.cpp:65:15: error: use of undeclared identifier 'min'; did you mean 'fmin'?\n   65 |     min_val = min(min_val, min_arr[2]);\n      |               ^~~\n      |               fmin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:14: note: 'fmin' declared here\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkd4fciyt.cpp:44:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   44 |         max_val = _mm_max_epi8(max_val, curr_val);\n      |                   ^\n[REDACTED]/tmpkd4fciyt.cpp:45:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   45 |         max_idx = _mm_blendv_epi8(max_idx, curr_idx, mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn6smxyh1.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i result = _mm_blendv_epi8(src1_vec, src2_vec, mask_cmp);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmh1o_x2u.cpp:37:36: error: use of undeclared identifier '_mm_srli_epi8'\n   37 |         __m128i hi = _mm_and_si128(_mm_srli_epi8(x, 4), mask);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa2arfeab.cpp:37:38: error: use of undeclared identifier '_mm_srli_epi8'\n   37 |         __m128i high = _mm_and_si128(_mm_srli_epi8(x, 4), mask1);\n      |                                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgkui7_pq.cpp:37:36: error: use of undeclared identifier '_mm_srli_epi8'\n   37 |         __m128i hi = _mm_and_si128(_mm_srli_epi8(x, 4), mask);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp638feppn.cpp:37:36: error: use of undeclared identifier '_mm_srli_epi8'\n   37 |         __m128i hi = _mm_and_si128(_mm_srli_epi8(x, 4), mask);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn1huk5yx.cpp:37:36: error: use of undeclared identifier '_mm_srli_epi8'\n   37 |         __m128i hi = _mm_and_si128(_mm_srli_epi8(x, 4), mask);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1sxeblt8.cpp:75:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   75 |             sum = _mm_hadd_pd(sum, zero);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp98cjed6r.cpp:75:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   75 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz5sy4gax.cpp:33:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppipembpd.cpp:33:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpujkhcarc.cpp:33:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0g0tvhbq.cpp:33:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk_lybt8p.cpp:33:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4oe_vwea.cpp:60:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   60 |         prod = _mm_ceil_ps(prod);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpah8vcrt1.cpp:62:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         mul = _mm_ceil_ps(mul);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjvr67xj3.cpp:62:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         prod = _mm_ceil_ps(prod);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp28recp1j.cpp:61:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   61 |         prod = _mm_ceil_ps(prod);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7k1jm19i.cpp:58:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   58 |         __m128 rounded = _mm_ceil_ps(product);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps94qulpu.cpp:53:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   53 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7qmzvbvx.cpp:43:41: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   43 |             double temp = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppukzjljd.cpp:53:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   53 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgp86cfcq.cpp:43:41: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   43 |             double temp = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpadhb8cnn.cpp:44:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   44 |             row0 = _mm_round_ps(row0, _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpadhb8cnn.cpp:45:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   45 |             row1 = _mm_round_ps(row1, _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpadhb8cnn.cpp:46:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             row2 = _mm_round_ps(row2, _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpadhb8cnn.cpp:47:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             row3 = _mm_round_ps(row3, _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1cy42oyg.cpp:52:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppg4f7_lq.cpp:52:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyfhjq7m6.cpp:40:17: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             v = _mm_round_ps(v, _MM_FROUND_TO_NEAREST_INT);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0z3rcaxy.cpp:47:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   47 |     __m128d temp = _mm_hadd_pd(sum, sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpic2jvgi5.cpp:33:24: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i vdiv = _mm_div_epi16(vsrc, vbase);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw1ncu0_8.cpp:33:24: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i vdiv = _mm_div_epi16(vsrc, vbase);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcm_gx_0h.cpp:33:24: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i vdiv = _mm_div_epi16(vsrc, vbase);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7jnovzui.cpp:33:24: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i vdiv = _mm_div_epi16(vsrc, vbase);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp39hi9upi.cpp:33:24: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i vdiv = _mm_div_epi16(vsrc, vbase);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaxusnhgj.cpp:48:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   48 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqavh4uni.cpp:46:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   46 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa7umq468.cpp:33:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i mul = _mm_mul_epi32(va, vx);\n      |                       ^\n[REDACTED]/tmpa7umq468.cpp:34:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   34 |         __m128i abs_y = _mm_abs_epi64(vy);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuz5xo7fy.cpp:34:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i vax = _mm_mul_epi32(va, vx);\n      |                       ^\n[REDACTED]/tmpuz5xo7fy.cpp:37:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   37 |         __m128i mask = _mm_cmpgt_epi64(_mm_setzero_si128(), vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6jpcfc4y.cpp:34:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i vax = _mm_mul_epi32(va, vx);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfq41fgwe.cpp:34:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i vax = _mm_mul_epi32(va, vx);\n      |                       ^\n[REDACTED]/tmpfq41fgwe.cpp:37:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   37 |         __m128i mask = _mm_cmpgt_epi64(_mm_setzero_si128(), vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpun8fbnpd.cpp:34:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i vax = _mm_mul_epi32(va, vx);\n      |                       ^\n[REDACTED]/tmpun8fbnpd.cpp:37:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   37 |         __m128i mask = _mm_cmpgt_epi64(_mm_setzero_si128(), vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_35_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0z3n1dz0.cpp:40:40: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   40 |         double row_sum = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphmmvjsk6.cpp:40:37: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   40 |         double norm = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp52_pukvo.cpp:61:24: error: no matching function for call to '_mm_and_ps'\n   61 |         __m128 temp4 = _mm_and_ps(_mm_andnot_ps(mask1, _mm_andnot_ps(mask2, d)));\n      |                        ^~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:412:1: note: candidate function not viable: requires 2 arguments, but 1 was provided\n  412 | _mm_and_ps(__m128 __a, __m128 __b)\n      | ^          ~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjxmo7p3n.cpp:52:33: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   52 |             __m128i count_low = _mm_shuffle_epi8(lookup, low_nibble);\n      |                                 ^\n[REDACTED]/tmpjxmo7p3n.cpp:53:34: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   53 |             __m128i count_high = _mm_shuffle_epi8(lookup, high_nibble);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa_vmr2r2.cpp:51:26: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i count1 = _mm_shuffle_epi8(lookup, nibble1);\n      |                          ^\n[REDACTED]/tmpa_vmr2r2.cpp:52:26: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   52 |         __m128i count2 = _mm_shuffle_epi8(lookup, nibble2);\n      |                          ^\n[REDACTED]/tmpa_vmr2r2.cpp:58:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   58 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 16), mask2)),\n      |             ^\n[REDACTED]/tmpa_vmr2r2.cpp:59:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   59 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 20), mask2))\n      |             ^\n[REDACTED]/tmpa_vmr2r2.cpp:63:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   63 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 8), mask2)),\n      |             ^\n[REDACTED]/tmpa_vmr2r2.cpp:64:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   64 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 12), mask2))\n      |             ^\n[REDACTED]/tmpa_vmr2r2.cpp:68:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   68 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 24), mask2)),\n      |             ^\n[REDACTED]/tmpa_vmr2r2.cpp:69:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   69 |             _mm_shuffle_epi8(lookup, _mm_and_si128(_mm_srli_epi32(bytes, 28), mask2))\n      |             ^\n8 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvnn773iq.cpp:45:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i low_count = _mm_shuffle_epi8(lookup, low_nibbles);\n      |                             ^\n[REDACTED]/tmpvnn773iq.cpp:46:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i high_count = _mm_shuffle_epi8(lookup, high_nibbles);\n      |                              ^\n[REDACTED]/tmpvnn773iq.cpp:55:18: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   55 |         out[i] = _mm_extract_epi8(result, 0);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpvnn773iq.cpp:56:20: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   56 |         out[i+1] = _mm_extract_epi8(result, 4);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpvnn773iq.cpp:57:20: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   57 |         out[i+2] = _mm_extract_epi8(result, 8);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpvnn773iq.cpp:58:20: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   58 |         out[i+3] = _mm_extract_epi8(result, 12);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n6 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcmf39nis.cpp:48:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   48 |         tmp1 = _mm_shuffle_epi8(lookup, tmp1);\n      |                ^\n[REDACTED]/tmpcmf39nis.cpp:49:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   49 |         tmp2 = _mm_shuffle_epi8(lookup, tmp2);\n      |                ^\n[REDACTED]/tmpcmf39nis.cpp:56:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   56 |         tmp2 = _mm_shuffle_epi8(lookup, tmp2);\n      |                ^\n[REDACTED]/tmpcmf39nis.cpp:57:17: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   57 |         input = _mm_shuffle_epi8(lookup, input);\n      |                 ^\n[REDACTED]/tmpcmf39nis.cpp:65:26: error: always_inline function '_mm_packus_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128i result = _mm_packus_epi32(tmp1, tmp1);\n      |                          ^\n5 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpti2700eg.cpp:52:42: error: use of undeclared identifier '_mm_srli_epi8'\n   52 |             __m128i high = _mm_and_si128(_mm_srli_epi8(shifted, 4), mask1);\n      |                                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaoimchta.cpp:38:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         __m128i quotient = _mm_div_epi32(a, three);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7dubefy0.cpp:38:39: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i div3 = _mm_srli_epi32(_mm_mullo_epi32(a, _mm_set1_epi32(0x55555556)), 32);\n      |                                       ^\n[REDACTED]/tmp7dubefy0.cpp:39:85: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   39 |         div3 = _mm_sub_epi32(_mm_srai_epi32(a, 31), _mm_srai_epi32(_mm_sub_epi32(a, _mm_mullo_epi32(div3, three)), 31));\n      |                                                                                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpysjdzp_q.cpp:39:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   39 |         __m128i quotient = _mm_div_epi32(a, three);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp2rvqqv6.cpp:38:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         __m128i div = _mm_div_epi32(a, three);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdzcpgo9u.cpp:38:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         __m128i div = _mm_div_epi32(a, three);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj241lm_0.cpp:50:47: error: use of undeclared identifier '_mm_nor_ps'\n   50 |         result = _mm_or_ps(result, _mm_and_ps(_mm_nor_ps(gt_mask, lt_mask), zeros));\n      |                                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0dkgx3o3.cpp:30:21: error: use of undeclared identifier '_mm_load_si64'; did you mean '_mm_loadu_si64'?\n   30 |         __m64 tmp = _mm_load_si64((const __m64*)(A + i));\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_loadu_si64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1591:46: note: '_mm_loadu_si64' declared here\n 1591 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_loadu_si64(void const *__a) {\n      |                                              ^\n[REDACTED]/tmp0dkgx3o3.cpp:30:15: error: cannot initialize a variable of type '__m64' (vector of 1 'long long' value) with an rvalue of type '__m128i' (vector of 2 'long long' values)\n   30 |         __m64 tmp = _mm_load_si64((const __m64*)(A + i));\n      |               ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv3p8eux3.cpp:30:15: error: cannot initialize a variable of type '__m64' (vector of 1 'long long' value) with an rvalue of type '__m128' (vector of 4 'float' values)\n   30 |         __m64 mmx_val = _mm_loadl_pi(_mm_setzero_ps(), (__m64*)&A[i]);\n      |               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpv3p8eux3.cpp:31:27: error: use of undeclared identifier '_mm_cvtpi16_pi32'; did you mean '_mm_cvtepi16_epi32'?\n   31 |         __m128i xmm_val = _mm_cvtpi16_pi32(mmx_val);\n      |                           ^~~~~~~~~~~~~~~~\n      |                           _mm_cvtepi16_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1281:46: note: '_mm_cvtepi16_epi32' declared here\n 1281 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepi16_epi32(__m128i __V) {\n      |                                              ^\n[REDACTED]/tmpv3p8eux3.cpp:31:44: error: cannot initialize a parameter of type '__m128i' (vector of 2 'long long' values) with an lvalue of type '__m64' (vector of 1 'long long' value)\n   31 |         __m128i xmm_val = _mm_cvtpi16_pi32(mmx_val);\n      |                                            ^~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1281:73: note: passing argument to parameter '__V' here\n 1281 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepi16_epi32(__m128i __V) {\n      |                                                                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo9ckwy1t.cpp:30:23: error: no matching function for call to '_mm_loadl_pi'\n   30 |         __m64 lower = _mm_loadl_pi(_mm_setzero_si64(), (__m64*)&A[i]);\n      |                       ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1659:1: note: candidate function not viable: no known conversion from '__m64' (vector of 1 'long long' value) to '__m128' (vector of 4 'float' values) for 1st argument\n 1659 | _mm_loadl_pi(__m128 __a, const __m64 *__p)\n      | ^            ~~~~~~~~~~\n[REDACTED]/tmpo9ckwy1t.cpp:30:15: error: cannot initialize a variable of type '__m64' (vector of 1 'long long' value) with an rvalue of type '__m128' (vector of 4 'float' values)\n   30 |         __m64 lower = _mm_loadl_pi(_mm_setzero_si64(), (__m64*)&A[i]);\n      |               ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpo9ckwy1t.cpp:31:44: error: no matching function for call to '_mm_loadl_pi'\n   31 |         __m128i values = _mm_cvtpi16_epi32(_mm_loadl_pi(_mm_setzero_si64(), (__m64*)&A[i]));\n      |                                            ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1659:1: note: candidate function not viable: no known conversion from '__m64' (vector of 1 'long long' value) to '__m128' (vector of 4 'float' values) for 1st argument\n 1659 | _mm_loadl_pi(__m128 __a, const __m64 *__p)\n      | ^            ~~~~~~~~~~\n[REDACTED]/tmpo9ckwy1t.cpp:31:26: error: use of undeclared identifier '_mm_cvtpi16_epi32'; did you mean '_mm_cvtepi16_epi32'?\n   31 |         __m128i values = _mm_cvtpi16_epi32(_mm_loadl_pi(_mm_setzero_si64(), (__m64*)&A[i]));\n      |                          ^~~~~~~~~~~~~~~~~\n      |                          _mm_cvtepi16_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1281:46: note: '_mm_cvtepi16_epi32' declared here\n 1281 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepi16_epi32(__m128i __V) {\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3tq6vfeq.cpp:30:15: error: cannot initialize a variable of type '__m64' (vector of 1 'long long' value) with an rvalue of type '__m128' (vector of 4 'float' values)\n   30 |         __m64 mmx_val = _mm_loadl_pi(_mm_setzero_ps(), (__m64*)&A[i]);\n      |               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp3tq6vfeq.cpp:31:27: error: use of undeclared identifier '_mm_cvtpi16_pi32'; did you mean '_mm_cvtepi16_epi32'?\n   31 |         __m128i xmm_val = _mm_cvtpi16_pi32(mmx_val);\n      |                           ^~~~~~~~~~~~~~~~\n      |                           _mm_cvtepi16_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1281:46: note: '_mm_cvtepi16_epi32' declared here\n 1281 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepi16_epi32(__m128i __V) {\n      |                                              ^\n[REDACTED]/tmp3tq6vfeq.cpp:31:44: error: cannot initialize a parameter of type '__m128i' (vector of 2 'long long' values) with an lvalue of type '__m64' (vector of 1 'long long' value)\n   31 |         __m128i xmm_val = _mm_cvtpi16_pi32(mmx_val);\n      |                                            ^~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1281:73: note: passing argument to parameter '__V' here\n 1281 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepi16_epi32(__m128i __V) {\n      |                                                                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr_r5tee6.cpp:52:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   52 |     __m128d temp = _mm_hadd_pd(sum, sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4lm_nlj8.cpp:46:34: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   46 |     double total = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                  ^\n[REDACTED]/tmp4lm_nlj8.cpp:63:38: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   63 |     double abs_total = _mm_cvtsd_f64(_mm_hadd_pd(abs_sum, abs_sum));\n      |                                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9b_q19f9.cpp:48:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i max1 = _mm_max_epi32(curr, prev);\n      |                        ^\n[REDACTED]/tmp9b_q19f9.cpp:52:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i max2 = _mm_max_epi32(max1, shift1);\n      |                        ^\n[REDACTED]/tmp9b_q19f9.cpp:56:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i max3 = _mm_max_epi32(max2, shift2);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi5f8gptw.cpp:52:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   52 |             current_max = _mm_max_epi32(current_max, data);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp687f54t9.cpp:47:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   47 |             curr_max = _mm_max_epi32(curr_max, curr_nums);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyllijyh7.cpp:51:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   51 |             current_max = _mm_max_epi32(current_max, nums);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkackxvlc.cpp:50:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i max1 = _mm_max_epi32(curr, shifted);\n      |                        ^\n[REDACTED]/tmpkackxvlc.cpp:54:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i max2 = _mm_max_epi32(max1, shifted);\n      |                        ^\n[REDACTED]/tmpkackxvlc.cpp:57:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i max3 = _mm_max_epi32(max2, shifted);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppqfb5042.cpp:50:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n[REDACTED]/tmppqfb5042.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   52 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk9wjwi3s.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   52 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n[REDACTED]/tmpk9wjwi3s.cpp:54:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   54 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp03_dubrr.cpp:48:15: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   48 |         max = _mm_max_epi32(max, shuffle);\n      |               ^\n[REDACTED]/tmp03_dubrr.cpp:50:15: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |         max = _mm_max_epi32(max, shuffle);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwhw1nvkr.cpp:50:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n[REDACTED]/tmpwhw1nvkr.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   52 |         max_vec = _mm_max_epi32(max_vec, shuffle);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0h8q41m1.cpp:44:24: error: use of undeclared identifier '_mm_div_epu64'; did you mean '_mm_min_epu64'?\n   44 |         __m128i vdiv = _mm_div_epu64(temp, vb);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epu64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3260:1: note: '_mm_min_epu64' declared here\n 3260 | _mm_min_epu64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyprt32xg.cpp:45:28: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   45 |         __m128i quotient = _mm_div_epi64(temp, vb);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj_296lcz.cpp:44:24: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   44 |         __m128i vmod = _mm_div_epi64(temp, vb);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprf_psglz.cpp:45:28: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   45 |         __m128i quotient = _mm_div_epi64(temp, vb);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppcdhrbrb.cpp:45:28: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   45 |         __m128i quotient = _mm_div_epi64(temp, vb);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp109lc6_2.cpp:43:20: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   43 |             diff = _mm_abs_ps(diff);\n      |                    ^~~~~~~~~~\n      |                    _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe4nvl8d2.cpp:42:20: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   42 |             diff = _mm_abs_ps(diff);\n      |                    ^~~~~~~~~~\n      |                    _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp41qavtgk.cpp:36:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   36 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3hccp0qf.cpp:36:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   36 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_os5bmho.cpp:37:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   37 |         __m128i quotient = _mm_div_epi32(num, divisors);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2efpi3b0.cpp:36:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   36 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4z8ers3s.cpp:36:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   36 |         __m128i quotient = _mm_div_epi32(num, divisors);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz0ehevxq.cpp:55:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i quotients = _mm_div_epi32(num, divs);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpz0ehevxq.cpp:76:52: error: called object type '__m128i' (vector of 2 'long long' values) is not a function or function pointer\n   76 |             __m128i sqrt = _mm_set1_epi32((int)sqrt(n));\n      |                                                ~~~~^\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx_ipbbo_.cpp:52:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |         __m128i quotient = _mm_div_epi32(num, divisor);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpx_ipbbo_.cpp:62:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   62 |             int factor = divisor.m128i_i32[idx];\n      |                          ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpx_ipbbo_.cpp:72:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   72 |         if (divisor.m128i_i32[0] * divisor.m128i_i32[0] > n) {\n      |             ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpx_ipbbo_.cpp:72:43: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   72 |         if (divisor.m128i_i32[0] * divisor.m128i_i32[0] > n) {\n      |                                    ~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp89p1o3j.cpp:52:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |         __m128i quotient = _mm_div_epi32(num, divisor);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9iawr18b.cpp:55:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i quotients = _mm_div_epi32(num, divs);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwwneksx4.cpp:55:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |     while (n > 1 && divisor.m128i_i32[0] <= limit) {\n      |                     ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpwwneksx4.cpp:57:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |         __m128i remainder = _mm_rem_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpwwneksx4.cpp:63:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   63 |             int d = divisor.m128i_i32[__builtin_ctz(m)];\n      |                     ~~~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_813b8ii.cpp:37:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   37 |         __m128i rem = _mm_rem_epi32(n_vec, divisors);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd80y04mv.cpp:54:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   54 |             __m128i min = _mm_min_epi32(v1, v2);\n      |                           ^\n[REDACTED]/tmpd80y04mv.cpp:55:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   55 |             __m128i max = _mm_max_epi32(v1, v2);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw0mlg7lx.cpp:55:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   55 |             __m128i min = _mm_min_epi32(v1, v2);\n      |                           ^\n[REDACTED]/tmpw0mlg7lx.cpp:56:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   56 |             __m128i max = _mm_max_epi32(v1, v2);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpapauwjj6.cpp:55:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   55 |             __m128i min = _mm_min_epi32(v1, v2);\n      |                           ^\n[REDACTED]/tmpapauwjj6.cpp:56:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   56 |             __m128i max = _mm_max_epi32(v1, v2);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4llt4tn_.cpp:59:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   59 |         vec = _mm_blendv_epi8(vec, third_val, mask);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprpvubi23.cpp:53:16: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   53 |             if(_mm_extract_epi32(div_mask, j)) {\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp60xi9bsn.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |             __m128i digit = _mm_and_si128(_mm_cmpeq_epi32(_mm_rem_epi32(curr, ten), seven), divisible);\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp60xi9bsn.cpp:50:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |             curr = _mm_div_epi32(curr, ten);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3af900ff.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |             __m128i digit = _mm_and_si128(_mm_cmpeq_epi32(_mm_rem_epi32(curr, tens), sevens), mask);\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp3af900ff.cpp:50:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |             curr = _mm_div_epi32(curr, tens);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjxpcq_ca.cpp:49:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   49 |             __m128i digit = _mm_and_si128(_mm_cmpeq_epi32(_mm_rem_epi32(curr, tens), sevens), mask);\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpjxpcq_ca.cpp:51:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |             curr = _mm_div_epi32(curr, tens);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprr_og2fa.cpp:52:35: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |             curr = _mm_srli_epi32(_mm_div_epi32(curr, tens), 0);\n      |                                   ^~~~~~~~~~~~~\n      |                                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpratesfi2.cpp:63:29: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   63 |                 __m128 v2 = _mm_shuffle_ps(v, v, _MM_SHUFFLE(k+1,k,k+1,k));\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfwlf44u6.cpp:62:29: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   62 |                 __m128 v1 = _mm_shuffle_ps(v, v, _MM_SHUFFLE(k+1,k+1,k,k));\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n[REDACTED]/tmpfwlf44u6.cpp:66:21: error: argument to '__builtin_ia32_blendps' must be a constant integer\n   66 |                 v = _mm_blend_ps(v, _mm_shuffle_ps(max,min,_MM_SHUFFLE(0,1,2,3)), \n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   67 |                                (1 << k) | (1 << (k+1)));\n      |                                ~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n  414 |                                   (int)(M)))\n      |                                   ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1a6b9vmc.cpp:50:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |         __m128i quotient = _mm_div_epi32(num, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp07862kys.cpp:55:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i quotient = _mm_div_epi32(vec_x, vec_base);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0w0a32ze.cpp:55:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i quotient = _mm_div_epi32(vec_x, vec_base);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpop118rb4.cpp:56:59: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   56 |         __m128i vrem = _mm_sub_epi32(vquot, _mm_mul_epi32(_mm_div_epi32(vquot, vbase), vbase));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphy6gxmoa.cpp:55:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i quotient = _mm_div_epi32(num, divisor);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw812r9sw.cpp:40:19: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   40 |         reverse = _mm_shuffle_epi8(reverse, _mm_setr_epi8(15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0));\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm1hbz8_j.cpp:48:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   48 |         count += _mm_popcnt_u32(opens) - _mm_popcnt_u32(closes);\n      |                  ^\n[REDACTED]/tmpm1hbz8_j.cpp:48:42: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   48 |         count += _mm_popcnt_u32(opens) - _mm_popcnt_u32(closes);\n      |                                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwq6h70kd.cpp:52:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   52 |         count += _mm_popcnt_u32(open_count);\n      |                  ^\n[REDACTED]/tmpwq6h70kd.cpp:53:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   53 |         count -= _mm_popcnt_u32(close_count);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5p02eigu.cpp:48:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   48 |         count += _mm_popcnt_u32(open_count);\n      |                  ^\n[REDACTED]/tmp5p02eigu.cpp:49:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   49 |         count -= _mm_popcnt_u32(close_count);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj9ng60fv.cpp:61:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   61 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgb21vz8s.cpp:68:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   68 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuvu1g_dw.cpp:74:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   74 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1eip_0_u.cpp:72:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   72 |         count += _mm_popcnt_u32(mask_bits);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkdyfw4dm.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp33rbnr15.cpp:59:18: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   59 |         sum_lo = _mm_hadd_epi16(sum_lo, sum_lo);\n      |                  ^\n[REDACTED]/tmp33rbnr15.cpp:60:18: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   60 |         sum_lo = _mm_hadd_epi16(sum_lo, sum_lo);\n      |                  ^\n[REDACTED]/tmp33rbnr15.cpp:61:18: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   61 |         sum_lo = _mm_hadd_epi16(sum_lo, sum_lo);\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp509r3wv1.cpp:66:24: error: use of undeclared identifier '_mm_cmpge_epi32'; did you mean '_mm_cmpgt_epi32'?\n   66 |         __m128i cmp2 = _mm_cmpge_epi32(freqs, nums);\n      |                        ^~~~~~~~~~~~~~~\n      |                        _mm_cmpgt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3120:46: note: '_mm_cmpgt_epi32' declared here\n 3120 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptd91mxmx.cpp:45:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   45 |     sum = _mm_hadd_epi32(sum, sum);\n      |           ^\n[REDACTED]/tmptd91mxmx.cpp:46:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   46 |     sum = _mm_hadd_epi32(sum, sum);\n      |           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnu_94ze6.cpp:51:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   51 |     sum = _mm_hadd_epi32(sum, sum);\n      |           ^\n[REDACTED]/tmpnu_94ze6.cpp:52:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   52 |     sum = _mm_hadd_epi32(sum, sum);\n      |           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0dkz7mjv.cpp:60:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   60 |         changes += 4 - _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8bi_eyp8.cpp:60:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   60 |         changes += 4 - _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt5ox1eb6.cpp:60:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   60 |         changes += 4 - _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp81dl7j8.cpp:60:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   60 |         changes += 4 - _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwbrb8c_a.cpp:60:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   60 |         changes += 4 - _mm_popcnt_u32(mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu8h1kb4c.cpp:38:18: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   38 |     while (result.m128d_f64[0] <= x) {\n      |            ~~~~~~^~~~~~~~~~\n[REDACTED]/tmpu8h1kb4c.cpp:40:19: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   40 |         if (result.m128d_f64[0] == x) {\n      |             ~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp2_z74cg.cpp:38:18: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   38 |     while (result.m128d_f64[0] <= x) {\n      |            ~~~~~~^~~~~~~~~~\n[REDACTED]/tmpp2_z74cg.cpp:40:19: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   40 |         if (result.m128d_f64[0] == x) {\n      |             ~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmkae0k31.cpp:38:22: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   38 |     while (vec_result.m128d_f64[0] <= x) {\n      |            ~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpmkae0k31.cpp:40:23: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   40 |         if (vec_result.m128d_f64[0] == x) {\n      |             ~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwlx5g5_l.cpp:59:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   59 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbdc5qo62.cpp:66:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   66 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpbdc5qo62.cpp:68:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   68 |             count += _mm_popcnt_u32(mask & ((1 << (len - i)) - 1));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpit46oqry.cpp:70:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   70 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc6qylxlu.cpp:72:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   72 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpc6qylxlu.cpp:74:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   74 |             count += _mm_popcnt_u32(mask & ((1 << (len - i)) - 1));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphkiwm32i.cpp:43:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   43 |         __m128i remainder = _mm_rem_epi32(len_vec, divisors_vec);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp88fmlams.cpp:43:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i divs = _mm_div_epi32(vec_len, start);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjwmlznoz.cpp:43:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i quotient = _mm_div_epi32(len_vec, divisors_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcvozujju.cpp:42:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   42 |         __m128i divs = _mm_div_epi32(lens, nums);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpueubypn6.cpp:43:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i quotient = _mm_div_epi32(curr, divisors);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbbxgcn66.cpp:41:22: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   41 |             digits = _mm_insert_epi32(digits, N % 10, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5jydkcwf.cpp:44:22: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   44 |             digits = _mm_insert_epi32(digits, digit, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaqfy16k1.cpp:44:22: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   44 |             digits = _mm_insert_epi32(digits, digit, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp02b3fxjw.cpp:61:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   61 |     __m128i sum1 = _mm_hadd_epi32(result, result);\n      |                    ^\n[REDACTED]/tmp02b3fxjw.cpp:62:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   62 |     __m128i sum2 = _mm_hadd_epi32(sum1, sum1);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeix9bywy.cpp:52:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   52 |             __m128i vowel = _mm_shuffle_epi8(vowels, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpeix9bywy.cpp:59:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   59 |             __m128i v = _mm_shuffle_epi8(vowels, _mm_set1_epi8(j));\n      |                         ^\n[REDACTED]/tmpeix9bywy.cpp:60:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   60 |             __m128i r = _mm_shuffle_epi8(vowel_shifts, _mm_set1_epi8(j));\n      |                         ^\n[REDACTED]/tmpeix9bywy.cpp:62:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   62 |             vowel_replace = _mm_blendv_epi8(vowel_replace, r, mask);\n      |                             ^\n[REDACTED]/tmpeix9bywy.cpp:74:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   74 |         __m128i final = _mm_blendv_epi8(case_swapped, vowel_replace, is_vowel);\n      |                         ^\n5 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc_j_ojeg.cpp:52:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   52 |             __m128i vowel = _mm_shuffle_epi8(vowels, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpc_j_ojeg.cpp:59:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   59 |             __m128i vowel = _mm_shuffle_epi8(vowels, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpc_j_ojeg.cpp:60:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   60 |             __m128i shift = _mm_shuffle_epi8(vowel_shifts, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpc_j_ojeg.cpp:62:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   62 |             vowel_replace = _mm_blendv_epi8(vowel_replace, shift, mask);\n      |                             ^\n[REDACTED]/tmpc_j_ojeg.cpp:74:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   74 |         __m128i final = _mm_blendv_epi8(case_swapped, vowel_replace, is_vowel);\n      |                         ^\n5 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp08ma7jm4.cpp:67:73: error: expected ')'\n   67 |                                         _mm_cmpgt_epi8(_mm_set1_epi8('{'}, chars));\n      |                                                                         ^\n[REDACTED]/tmp08ma7jm4.cpp:67:69: note: to match this '('\n   67 |                                         _mm_cmpgt_epi8(_mm_set1_epi8('{'}, chars));\n      |                                                                     ^\n[REDACTED]/tmp08ma7jm4.cpp:69:73: error: expected ')'\n   69 |                                         _mm_cmpgt_epi8(_mm_set1_epi8('['}, chars));\n      |                                                                         ^\n[REDACTED]/tmp08ma7jm4.cpp:69:69: note: to match this '('\n   69 |                                         _mm_cmpgt_epi8(_mm_set1_epi8('['}, chars));\n      |                                                                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp23vrcrbd.cpp:69:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   69 |                 if (!_mm_test_all_ones(upper_check)) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n[REDACTED]/tmp23vrcrbd.cpp:78:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   78 |                 if (!_mm_test_all_ones(lower_check)) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjynbhunj.cpp:65:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   65 |             __m128i div = _mm_div_epi32(num_vec, prime_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkzs27vh7.cpp:68:32: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   68 |                 __m128i vmod = _mm_rem_epi32(vj, vi);\n      |                                ^~~~~~~~~~~~~\n      |                                _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp24z6bsxn.cpp:65:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   65 |                 __m128i rem = _mm_rem_epi32(div, prime_vec);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpozenqrsn.cpp:61:76: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             __m128i remainders = _mm_sub_epi32(numVec, _mm_mul_epi32(divs, _mm_div_epi32(numVec, divs)));\n      |                                                                            ^~~~~~~~~~~~~\n      |                                                                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgvy9y3kl.cpp:61:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             __m128i rem = _mm_sub_epi32(nums, _mm_mul_epi32(_mm_div_epi32(nums, divs), divs));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ugk_goc.cpp:67:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   67 |         count += _mm_popcnt_u32(mask_result);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqgcrk9x4.cpp:66:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   66 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi93uwsoz.cpp:66:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   66 |         count += _mm_popcnt_u32(mask_result);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxl_e7_ib.cpp:67:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   67 |         count += _mm_popcnt_u32(mask_result);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfpv3rk0b.cpp:67:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   67 |         count += _mm_popcnt_u32(mask_result);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz6nk8py8.cpp:47:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i multiplier = _mm_mullo_epi32(indices, increment);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn7xtx5z5.cpp:64:20: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   64 |             fact = _mm_rem_epi32(fact, mod);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnoiet7iv.cpp:69:21: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   69 |             facts = _mm_rem_epi32(facts, mod);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpezoabmo1.cpp:63:21: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |             facts = _mm_rem_epi32(facts, mod);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6b6_t4yt.cpp:44:33: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'sse4.1'\n   44 |             rev = _mm_add_epi32(_mm_mullo_epi32(rev, _mm_set1_epi32(10)), \n      |                                 ^\n[REDACTED]/tmp6b6_t4yt.cpp:69:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'ssse3'\n   69 |     __m128i sum = _mm_hadd_epi32(counts, counts);\n      |                   ^\n[REDACTED]/tmp6b6_t4yt.cpp:70:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'ssse3'\n   70 |     sum = _mm_hadd_epi32(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw0zz24ha.cpp:61:35: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   61 |                 palindrome_mask = _mm_insert_epi32(palindrome_mask, 1, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg_4wewam.cpp:56:25: error: argument to '__builtin_ia32_pslldqi128_byteshift' must be a constant integer\n   56 |                         _mm_slli_si128(ones, j * 4));\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2686:13: note: expanded from macro '_mm_slli_si128'\n 2686 |   ((__m128i)__builtin_ia32_pslldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2687 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpg_4wewam.cpp:60:29: error: argument to '__builtin_ia32_pslldqi128_byteshift' must be a constant integer\n   60 |                             _mm_slli_si128(ones, j * 4));\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2686:13: note: expanded from macro '_mm_slli_si128'\n 2686 |   ((__m128i)__builtin_ia32_pslldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2687 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb56cx3an.cpp:45:41: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   45 |             int num = _mm_cvtsi128_si32(_mm_srli_si128(temp_nums, i * 4));\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n[REDACTED]/tmpb56cx3an.cpp:55:25: error: argument to '__builtin_ia32_pslldqi128_byteshift' must be a constant integer\n   55 |                         _mm_slli_si128(_mm_set1_epi32(1), i * 4));\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2686:13: note: expanded from macro '_mm_slli_si128'\n 2686 |   ((__m128i)__builtin_ia32_pslldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2687 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1p2udnl2.cpp:78:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   78 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ssicnz0.cpp:54:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |             int num = _mm_extract_epi32(abs_nums, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp0ssicnz0.cpp:55:24: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |             int sign = _mm_extract_epi32(signs, j) & 1;\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsfxdiu1o.cpp:52:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |             __m128i q = _mm_div_epi32(nums, _mm_set1_epi32(10));\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoplhhlmr.cpp:54:30: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   54 |             __m128i digits = _mm_rem_epi32(abs_nums, tens);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpoplhhlmr.cpp:61:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             nums = _mm_div_epi32(nums, tens);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgrwozliw.cpp:54:30: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   54 |             __m128i digits = _mm_rem_epi32(abs_nums, tens);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpgrwozliw.cpp:61:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             nums = _mm_div_epi32(nums, tens);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptxvm49av.cpp:53:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'move_one_ball_simd' that is compiled without support for 'sse4.1'\n   53 |         min_val = _mm_min_epi32(curr, min_val);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0_mchj3r.cpp:42:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'move_one_ball_simd' that is compiled without support for 'sse4.1'\n   42 |         min_val = _mm_min_epi32(curr, min_val);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoulx40oh.cpp:47:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         odd_count1 += _mm_popcnt_u32(odd_mask1);\n      |                       ^\n[REDACTED]/tmpoulx40oh.cpp:57:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   57 |         even_count2 += 4 - _mm_popcnt_u32(odd_mask2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpml4od7pk.cpp:46:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   46 |         odd_count1 += _mm_popcnt_u32(mask1);\n      |                       ^\n[REDACTED]/tmpml4od7pk.cpp:55:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   55 |         even_count2 += _mm_popcnt_u32(mask2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps5hrfd7l.cpp:47:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         odd_count1 += _mm_popcnt_u32(m1);\n      |                       ^\n[REDACTED]/tmps5hrfd7l.cpp:51:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         even_count2 += 4 - _mm_popcnt_u32(m2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv69ipw30.cpp:45:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   45 |         odd_count1 += _mm_popcnt_u32(odd_mask1);\n      |                       ^\n[REDACTED]/tmpv69ipw30.cpp:53:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   53 |         even_count2 += 4 - _mm_popcnt_u32(odd_mask2);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptxuyluen.cpp:46:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   46 |         odd_count1 += _mm_popcnt_u32(mask1);\n      |                       ^\n[REDACTED]/tmptxuyluen.cpp:55:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   55 |         even_count2 += _mm_popcnt_u32(mask2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgw5fclfd.cpp:73:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             odd_count += _mm_popcnt_u32(mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp279ai_i9.cpp:82:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   82 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptd24ntng.cpp:76:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   76 |             odd_count += _mm_popcnt_u32(mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4n580yjq.cpp:53:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   53 |         min_sum = _mm_min_epi64(min_sum, curr);\n      |                   ^\n[REDACTED]/tmp4n580yjq.cpp:55:23: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   55 |         __m128i cmp = _mm_cmpgt_epi64(zero, curr);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2xsopxyf.cpp:54:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   54 |         min_sum = _mm_min_epi64(min_sum, curr_sum);\n      |                   ^\n[REDACTED]/tmp2xsopxyf.cpp:58:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   58 |         __m128i mask = _mm_cmpgt_epi64(curr_sum, zero);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7veyac94.cpp:56:47: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   56 |         __m128i sum = _mm_add_epi64(nums_vec, _mm_alignr_epi8(curr_sum_prev, zero, 8));\n      |                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmp7veyac94.cpp:58:27: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   58 |         __m128i compare = _mm_cmpgt_epi64(sum, nums_vec);\n      |                           ^\n[REDACTED]/tmp7veyac94.cpp:59:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i result = _mm_blendv_epi8(sum, nums_vec, compare);\n      |                          ^\n[REDACTED]/tmp7veyac94.cpp:64:28: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   64 |         __m128i min_vals = _mm_min_epi64(result, min_sum_prev);\n      |                            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4xvy41nt.cpp:48:23: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   48 |         __m128i cmp = _mm_cmpgt_epi64(zero, curr_sum);\n      |                       ^\n[REDACTED]/tmp4xvy41nt.cpp:51:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   51 |         min_sum = _mm_min_epi64(min_sum, curr_sum);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp723trcm0.cpp:59:28: error: always_inline function '_mm_min_epi8' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i curr_min = _mm_min_epi8(_mm_setzero_si128(), sum);\n      |                            ^\n[REDACTED]/tmp723trcm0.cpp:62:19: error: always_inline function '_mm_min_epi8' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   62 |         min_val = _mm_min_epi8(min_val, curr_min);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbbiyzvfl.cpp:57:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'max_fill_simd' that is compiled without support for 'ssse3'\n   57 |         sum = _mm_hadd_epi32(sum, sum);\n      |               ^\n[REDACTED]/tmpbbiyzvfl.cpp:58:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'max_fill_simd' that is compiled without support for 'ssse3'\n   58 |         sum = _mm_hadd_epi32(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2eltfd3j.cpp:66:39: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   66 |                     __m128i extract = _mm_min_epi32(curr, count);\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6qqr507w.cpp:68:39: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   68 |                     __m128i min_val = _mm_min_epi32(row, cap);\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxjntj4n2.cpp:50:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   50 |         nums = _mm_hadd_epi32(nums, nums);\n      |                ^\n[REDACTED]/tmpxjntj4n2.cpp:51:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   51 |         nums = _mm_hadd_epi32(nums, nums);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbawgiw02.cpp:55:13: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'popcnt'\n   55 |         if (_mm_popcnt_u32(mask) > 2) {\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw6ws2s5d.cpp:66:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   66 |         __m128i magnitudes = _mm_abs_epi32(chunk);\n      |                              ^\n[REDACTED]/tmpw6ws2s5d.cpp:69:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   69 |         sign_prod = _mm_mullo_epi32(sign_prod, signs);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqqioqec5.cpp:47:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsiodsgos.cpp:58:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   58 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplgzcbhtx.cpp:59:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   59 |         __m128i abs_val = _mm_abs_epi32(curr);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp11xhul4a.cpp:80:18: error: no member named 'function' in namespace 'std'\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |             ~~~~~^\n[REDACTED]/tmp11xhul4a.cpp:80:35: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                ~~~^\n[REDACTED]/tmp11xhul4a.cpp:80:39: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                    ~~~^\n[REDACTED]/tmp11xhul4a.cpp:80:43: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                        ~~~^\n[REDACTED]/tmp11xhul4a.cpp:80:46: error: use of undeclared identifier 'dfs'\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                              ^\n[REDACTED]/tmp11xhul4a.cpp:115:25: error: use of undeclared identifier 'dfs'\n  115 |                         dfs(nx, ny, len + 1);\n      |                         ^\n[REDACTED]/tmp11xhul4a.cpp:121:13: error: use of undeclared identifier 'dfs'\n  121 |             dfs(i, j, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0e17qo1u.cpp:80:18: error: no member named 'function' in namespace 'std'\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |             ~~~~~^\n[REDACTED]/tmp0e17qo1u.cpp:80:35: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                ~~~^\n[REDACTED]/tmp0e17qo1u.cpp:80:39: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                    ~~~^\n[REDACTED]/tmp0e17qo1u.cpp:80:43: error: expected '(' for function-style cast or type construction\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                        ~~~^\n[REDACTED]/tmp0e17qo1u.cpp:80:46: error: use of undeclared identifier 'dfs'\n   80 |             std::function<void(int,int,int)> dfs = [&](int x, int y, int len) {\n      |                                              ^\n[REDACTED]/tmp0e17qo1u.cpp:115:25: error: use of undeclared identifier 'dfs'\n  115 |                         dfs(nx, ny, len + 1);\n      |                         ^\n[REDACTED]/tmp0e17qo1u.cpp:121:13: error: use of undeclared identifier 'dfs'\n  121 |             dfs(i, j, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpifkjmk7b.cpp:124:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  124 |                         currMin = _mm_min_epi32(currMin, _mm_add_epi32(prev, curr));\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt5eeesno.cpp:68:16: error: use of undeclared identifier '_mm_mullo_epi8'\n   68 |         prod = _mm_mullo_epi8(prod, nums);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt707phuh.cpp:39:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |             vec = _mm_ceil_ps(vec);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpt707phuh.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpt707phuh.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpt707phuh.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphhlvy_9l.cpp:39:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |             vec = _mm_ceil_ps(vec);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmphhlvy_9l.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphhlvy_9l.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmphhlvy_9l.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeu1x7h7j.cpp:36:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |             __m128 ceil_vec = _mm_ceil_ps(vec);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpeu1x7h7j.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpeu1x7h7j.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpeu1x7h7j.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqa3o1vce.cpp:36:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |             __m128 ceil_vec = _mm_ceil_ps(vec);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpqa3o1vce.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpqa3o1vce.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpqa3o1vce.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp37gmqtby.cpp:38:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp37gmqtby.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp37gmqtby.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp37gmqtby.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgdonx0pl.cpp:56:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         max_neg = _mm_max_epi32(max_neg, neg_vals);\n      |                   ^\n[REDACTED]/tmpgdonx0pl.cpp:57:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         min_pos = _mm_min_epi32(_mm_or_si128(min_pos, _mm_andnot_si128(is_pos, _mm_set1_epi32(0x7FFFFFFF))), pos_vals);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9slidqb0.cpp:57:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         max_neg = _mm_max_epi32(max_neg, neg_vals);\n      |                   ^\n[REDACTED]/tmp9slidqb0.cpp:58:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         min_pos = _mm_min_epi32(_mm_or_si128(min_pos, _mm_andnot_si128(is_pos, _mm_set1_epi32(0x7FFFFFFF))), pos_vals);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkk810iwy.cpp:56:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         max_neg = _mm_max_epi32(max_neg, neg_vals);\n      |                   ^\n[REDACTED]/tmpkk810iwy.cpp:63:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   63 |         min_pos = _mm_min_epi32(min_pos, pos_vals);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnfb7pwgw.cpp:56:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         max_neg = _mm_max_epi32(max_neg, neg_vals);\n      |                   ^\n[REDACTED]/tmpnfb7pwgw.cpp:57:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         min_pos = _mm_min_epi32(_mm_or_si128(min_pos, _mm_andnot_si128(is_pos, _mm_set1_epi32(0x7FFFFFFF))), pos_vals);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfah48rh7.cpp:56:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         max_neg = _mm_max_epi32(max_neg, neg_vals);\n      |                   ^\n[REDACTED]/tmpfah48rh7.cpp:63:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   63 |         min_pos = _mm_min_epi32(min_pos, pos_vals);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjewn7nkj.cpp:53:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i squared = _mm_mullo_epi32(nums, nums);\n      |                           ^\n[REDACTED]/tmpjewn7nkj.cpp:58:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i cubed = _mm_mullo_epi32(squared, nums);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0a88i4yn.cpp:44:44: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |         __m128i is_mult3 = _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod3), _mm_setzero_si128());\n      |                                            ^~~~~~~~~~~~~\n      |                                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp0a88i4yn.cpp:45:44: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   45 |         __m128i is_mult4 = _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod4), _mm_setzero_si128());\n      |                                            ^~~~~~~~~~~~~\n      |                                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpggxu66c_.cpp:53:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i squared = _mm_mullo_epi32(nums, nums);\n      |                           ^\n[REDACTED]/tmpggxu66c_.cpp:58:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i cubed = _mm_mullo_epi32(squared, nums);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpma_j2ppk.cpp:53:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i squared = _mm_mullo_epi32(nums, nums);\n      |                           ^\n[REDACTED]/tmpma_j2ppk.cpp:58:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i cubed = _mm_mullo_epi32(squared, nums);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx3h7wp9i.cpp:44:44: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |         __m128i is_mult3 = _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod3), _mm_setzero_si128());\n      |                                            ^~~~~~~~~~~~~\n      |                                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpx3h7wp9i.cpp:45:44: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   45 |         __m128i is_mult4 = _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod4), _mm_setzero_si128());\n      |                                            ^~~~~~~~~~~~~\n      |                                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5o3oiaej.cpp:44:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   44 |             temp = _mm_div_epi32(temp, ten_vec);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp5o3oiaej.cpp:49:30: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   49 |         __m128i last_digit = _mm_rem_epi32(nums_vec, ten_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp5o3oiaej.cpp:53:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   53 |         __m128i first_odd = _mm_rem_epi32(first_digit, two);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp5o3oiaej.cpp:54:28: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   54 |         __m128i last_odd = _mm_rem_epi32(last_digit, two);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n4 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2zv92gu6.cpp:49:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   49 |             first_digits = _mm_div_epi32(first_digits, ten_div);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp2zv92gu6.cpp:53:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   53 |         __m128i last_digits = _mm_rem_epi32(abs_data, ten_div);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp2zv92gu6.cpp:57:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |         __m128i first_odd = _mm_rem_epi32(first_digits, two);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp2zv92gu6.cpp:58:28: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   58 |         __m128i last_odd = _mm_rem_epi32(last_digits, two);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n4 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_131_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzrql4kmk.cpp:48:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   48 |             first_digits = _mm_div_epi32(first_digits, div);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpzrql4kmk.cpp:52:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   52 |         __m128i last_digits = _mm_rem_epi32(abs_nums, _mm_set1_epi32(10));\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjqpdc249.cpp:94:37: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   94 |                 __m128i remainder = _mm_rem_epi32(sum, three);\n      |                                     ^~~~~~~~~~~~~\n      |                                     _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp12kdnevz.cpp:85:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   85 |                 __m128i rem = _mm_rem_epi32(sum, three);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfttq8la6.cpp:86:31: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   86 |                 __m128i div = _mm_div_epi64(sum, three);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp00vnwm_w.cpp:87:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   87 |                 __m128i mod = _mm_rem_epi32(sum, three);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdh6070gx.cpp:88:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   88 |                 __m128i rem = _mm_rem_epi32(sum, three);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp85azv92c.cpp:39:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   39 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbnp256d4.cpp:37:26: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   37 |     __m128i remainders = _mm_rem_epi32(num, divisors);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvee57a9c.cpp:39:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   39 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3m0u71i8.cpp:39:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   39 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3z_nhuof.cpp:39:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   39 |         __m128i remainder = _mm_rem_epi32(num, divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzh8s80pn.cpp:46:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 rounded = _mm_round_ps(nums, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmww6hguf.cpp:46:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 rounded = _mm_round_ps(nums, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr66ru1n8.cpp:46:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 rounded = _mm_round_ps(nums, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt07ov5f0.cpp:46:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 rounded = _mm_round_ps(nums, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpt07ov5f0.cpp:51:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_div = _mm_round_ps(divided, _MM_FROUND_TO_NEAREST_INT);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp87jbt3c0.cpp:46:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 rounded = _mm_round_ps(nums, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp87jbt3c0.cpp:51:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_div = _mm_round_ps(divided, _MM_FROUND_TO_NEAREST_INT);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp653d01cj.cpp:37:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i abs_diff = _mm_max_epi32(diff, neg_diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnm4g_wev.cpp:37:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i abs_diff = _mm_max_epi32(diff, neg_diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpytaax3wz.cpp:37:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i abs_diff = _mm_max_epi32(diff, neg_diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqisiygb7.cpp:37:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i abs_diff = _mm_max_epi32(diff, neg_diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprl29i7hs.cpp:37:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i abs_diff = _mm_max_epi32(diff, neg_diff);\n      |                            ^\n1 error generated.\n"}

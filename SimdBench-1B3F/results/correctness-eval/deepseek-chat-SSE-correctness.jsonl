{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj3jo4_de.cpp:45:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpew8_qkl6.cpp:46:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph_v1dnmc.cpp:45:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3q37s5gg.cpp:45:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqgi71ygy.cpp:45:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4y0dprwg.cpp:49:19: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   49 |     __m128 temp = _mm_hadd_ps(sum, sum);\n      |                   ^\n[REDACTED]/tmp4y0dprwg.cpp:50:12: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   50 |     temp = _mm_hadd_ps(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuyt8ot6q.cpp:49:19: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   49 |     __m128 temp = _mm_hadd_ps(sum, sum);\n      |                   ^\n[REDACTED]/tmpuyt8ot6q.cpp:50:12: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   50 |     temp = _mm_hadd_ps(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsh93b3wl.cpp:49:19: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   49 |     __m128 temp = _mm_hadd_ps(sum, sum);\n      |                   ^\n[REDACTED]/tmpsh93b3wl.cpp:50:12: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   50 |     temp = _mm_hadd_ps(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp18l5lf2.cpp:49:19: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   49 |     __m128 temp = _mm_hadd_ps(sum, sum);\n      |                   ^\n[REDACTED]/tmpp18l5lf2.cpp:50:12: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   50 |     temp = _mm_hadd_ps(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8xhf131u.cpp:42:23: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128d res = _mm_blendv_pd(val, scaled, mask);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsnosynop.cpp:44:18: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   44 |         result = _mm_blendv_pd(src_vec, scaled, mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpta03s1dj.cpp:44:15: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   44 |         val = _mm_blendv_pd(val, scaled, mask);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm124b17h.cpp:43:23: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128d res = _mm_blendv_pd(val, scaled, mask);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2t5p5dyt.cpp:42:23: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128d res = _mm_blendv_pd(val, scaled, mask);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpprxmd93f.cpp:40:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   40 |         sum_vec = _mm_div_epi64(sum_vec, two_vec);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0qmpkcnu.cpp:40:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   40 |         sum_vec = _mm_div_epi64(sum_vec, two_vec);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprvoeogrd.cpp:39:26: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   39 |         __m128i result = _mm_div_epi64(sum_scalar, two_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp98qsixve.cpp:39:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   39 |         sum_vec = _mm_div_epi64(sum_vec, two_vec);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4zi054wj.cpp:39:15: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   39 |         sum = _mm_div_epi64(sum, two_vec);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpniealuo1.cpp:44:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   44 |         min_val = _mm_min_epi32(min_val, even);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjlu0n3gt.cpp:44:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   44 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwojhoew1.cpp:44:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   44 |         min_val = _mm_min_epi32(min_val, even);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc0f0raoi.cpp:44:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   44 |         min_val = _mm_min_epi32(min_val, even);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd2d_1xo6.cpp:44:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   44 |         min_val = _mm_min_epi32(min_val, even);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_r40_40n.cpp:51:20: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   51 |         max_vals = _mm_max_epi8(max_vals, data);\n      |                    ^\n[REDACTED]/tmp_r40_40n.cpp:52:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   52 |         max_indices = _mm_blendv_epi8(max_indices, indices, mask);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_14_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_14_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_14_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpke3gsr5v.cpp:50:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i blend1 = _mm_blendv_epi8(src1_data1, src2_data1, cmp1);\n      |                          ^\n[REDACTED]/tmpke3gsr5v.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i blend2 = _mm_blendv_epi8(src1_data2, src2_data2, cmp2);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcyusrdzw.cpp:49:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i blend1 = _mm_blendv_epi8(src1_vec1, src2_vec1, cmp1);\n      |                          ^\n[REDACTED]/tmpcyusrdzw.cpp:50:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i blend2 = _mm_blendv_epi8(src1_vec2, src2_vec2, cmp2);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy4bftpws.cpp:39:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i res1 = _mm_blendv_epi8(src1_vec1, src2_vec1, cmp1);\n      |                        ^\n[REDACTED]/tmpy4bftpws.cpp:48:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i res2 = _mm_blendv_epi8(src1_vec2, src2_vec2, cmp2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbvx1wnyk.cpp:47:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i blend1 = _mm_blendv_epi8(src1_data1, src2_data1, cmp1);\n      |                          ^\n[REDACTED]/tmpbvx1wnyk.cpp:48:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i blend2 = _mm_blendv_epi8(src1_data2, src2_data2, cmp2);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzdskdbcw.cpp:50:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i blend1 = _mm_blendv_epi8(src1_data1, src2_data1, cmp1);\n      |                          ^\n[REDACTED]/tmpzdskdbcw.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i blend2 = _mm_blendv_epi8(src1_data2, src2_data2, cmp2);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvproltrz.cpp:55:13: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'population_count_simd' that is compiled without support for 'sse4.1'\n   55 |         v = _mm_mullo_epi32(v, mask4);\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp50ekz7e_.cpp:44:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'population_count_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i v4 = _mm_mullo_epi32(v3, mask4);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpws0gx71r.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx_iw70hs.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp42lirb21.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpidtfrz63.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpidtfrz63.cpp:41:32: error: '__builtin_ia32_roundss' needs target feature sse4.1\n   41 |         dst[i] = _mm_cvtss_f32(_mm_round_ss(_mm_setzero_ps(), _mm_set_ss(sum), _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC));\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:281:12: note: expanded from macro '_mm_round_ss'\n  281 |   ((__m128)__builtin_ia32_roundss((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y),    \\\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp26xr0as_.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi6lyvvak.cpp:63:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   63 |         __m128 rounded = _mm_ceil_ps(mul);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbs9g7ag3.cpp:60:65: error: expected ')'\n   60 |         if ((i % 2 == 0) && (fabsf(src1[i] - src2[i]) <= 50.0f) {\n      |                                                                 ^\n[REDACTED]/tmpbs9g7ag3.cpp:60:12: note: to match this '('\n   60 |         if ((i % 2 == 0) && (fabsf(src1[i] - src2[i]) <= 50.0f) {\n      |            ^\n[REDACTED]/tmpbs9g7ag3.cpp:65:5: error: expected statement\n   65 |     }\n      |     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqx56e136.cpp:63:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   63 |         __m128 rounded = _mm_round_ps(product, _MM_FROUND_TO_POS_INF | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpqx56e136.cpp:66:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128 result = _mm_blendv_ps(minus_one, rounded, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5beg_xl4.cpp:57:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |         __m128 rounded = _mm_round_ps(mul, _MM_FROUND_TO_POS_INF | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp5beg_xl4.cpp:59:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128 res = _mm_blendv_ps(neg_one, rounded, mask);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8fw8xonk.cpp:61:22: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   61 |         mul_result = _mm_ceil_ps(mul_result);\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp8fw8xonk.cpp:64:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128 result = _mm_blendv_ps(neg_one, mul_result, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp29_cr49f.cpp:52:16: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   52 |         temp = _mm_hadd_ps(temp, temp);\n      |                ^\n[REDACTED]/tmp29_cr49f.cpp:53:16: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   53 |         temp = _mm_hadd_ps(temp, temp);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe2m5j1qn.cpp:52:23: error: always_inline function '_mm_movehdup_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   52 |         __m128 shuf = _mm_movehdup_ps(sum_sq);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzbex2mt9.cpp:51:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   51 |             __m128d rounded = _mm_round_pd(_mm_set_sd(res), _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9ib3d7ac.cpp:45:40: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   45 |             double res = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                        ^\n[REDACTED]/tmp9ib3d7ac.cpp:49:44: error: '__builtin_ia32_roundsd' needs target feature sse4.1\n   49 |             dst[i * p + j] = _mm_cvtsd_f64(_mm_round_sd(_mm_setzero_pd(), _mm_set_sd(res), _MM_FROUND_TO_NEAREST_INT));\n      |                                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:356:13: note: expanded from macro '_mm_round_sd'\n  356 |   ((__m128d)__builtin_ia32_roundsd((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), \\\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpss7q0zfc.cpp:49:44: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   49 |             dst[i * p + j] = _mm_cvtsd_f64(_mm_round_pd(_mm_set_sd(res), _MM_FROUND_TO_NEAREST_INT));\n      |                                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk5w8q5yc.cpp:40:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeikhpvwb.cpp:42:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   42 |             __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyz1hov2u.cpp:54:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   54 |             row0 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row0, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpyz1hov2u.cpp:55:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   55 |             row1 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row1, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpyz1hov2u.cpp:56:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             row2 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row2, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpyz1hov2u.cpp:57:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |             row3 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row3, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_1ltq2qr.cpp:54:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   54 |             row0 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row0, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_1ltq2qr.cpp:55:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   55 |             row1 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row1, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_1ltq2qr.cpp:56:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             row2 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row2, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_1ltq2qr.cpp:57:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |             row3 = _mm_mul_ps(_mm_round_ps(_mm_div_ps(row3, quarter), _MM_FROUND_TO_NEAREST_INT), quarter);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf591ojpi.cpp:47:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |         rounded = _mm_floor_ps(rounded);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpf591ojpi.cpp:48:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         floored = _mm_ceil_ps(floored);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpurpu29tw.cpp:47:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor3d_sub_round_zero_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 final = _mm_blendv_ps(floored, rounded, mask);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpujqglwqg.cpp:42:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   42 |         res = _mm_round_ps(res, _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3fllcdqc.cpp:39:26: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   39 |         __m128i v_quot = _mm_div_epi16(v_src, v_base);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg6maci8o.cpp:38:25: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   38 |         __m128i v_div = _mm_div_epi16(v_src, v_base);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpakqmmz8y.cpp:39:23: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   39 |         __m128i div = _mm_div_epi16(src_vec, base_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm2wtrjj2.cpp:38:25: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   38 |         __m128i v_div = _mm_div_epi16(v_src, v_base);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp61jwj0nh.cpp:39:23: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   39 |         __m128i div = _mm_div_epi16(src_vec, base_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpluzz9728.cpp:38:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i mul_res = _mm_mul_epi32(vec_a, vec_x);\n      |                           ^\n[REDACTED]/tmpluzz9728.cpp:39:45: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   39 |         __m128i abs_y = _mm_sub_epi64(zero, _mm_cmpgt_epi64(zero, vec_y));\n      |                                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmqhk429g.cpp:38:22: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i ax = _mm_mul_epi32(a_vec, x_vec);\n      |                      ^\n[REDACTED]/tmpmqhk429g.cpp:39:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_y = _mm_abs_epi64(y_vec);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkvbb557a.cpp:38:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i mul_res = _mm_mul_epi32(a_vec, x_vec);\n      |                           ^\n[REDACTED]/tmpkvbb557a.cpp:39:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_y = _mm_abs_epi64(y_vec);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjv1i6i40.cpp:38:22: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i ax = _mm_mul_epi32(a_vec, x_vec);\n      |                      ^\n[REDACTED]/tmpjv1i6i40.cpp:39:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i abs_y = _mm_abs_epi64(y_vec);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyjss5s1r.cpp:38:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i mul_res = _mm_mul_epi32(vec_a, vec_x);\n      |                           ^\n[REDACTED]/tmpyjss5s1r.cpp:39:45: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   39 |         __m128i abs_y = _mm_sub_epi64(zero, _mm_cmpgt_epi64(zero, vec_y));\n      |                                             ^\n[REDACTED]/tmpyjss5s1r.cpp:40:38: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.2'\n   40 |         abs_y = _mm_xor_si128(abs_y, _mm_cmpgt_epi64(zero, vec_y));\n      |                                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq3jjo4uq.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpq3jjo4uq.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkwn5t7i_.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpkwn5t7i_.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpavbltjrq.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpavbltjrq.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1ban1ivd.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmp1ban1ivd.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzinzim9t.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpzinzim9t.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxnqwflsx.cpp:63:99: error: expected ')'\n   63 |                 size_t current_block_idx = ((i + (k / block_size)) * cols + (j + (k % block_size));\n      |                                                                                                   ^\n[REDACTED]/tmpxnqwflsx.cpp:63:44: note: to match this '('\n   63 |                 size_t current_block_idx = ((i + (k / block_size)) * cols + (j + (k % block_size));\n      |                                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd49u398m.cpp:43:40: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   43 |         double row_sum = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd7p_m8bm.cpp:41:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i a_sq = _mm_maddubs_epi16(a, a);\n      |                        ^\n[REDACTED]/tmpd7p_m8bm.cpp:42:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i b_sq = _mm_maddubs_epi16(b, b);\n      |                        ^\n[REDACTED]/tmpd7p_m8bm.cpp:43:22: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i ab = _mm_maddubs_epi16(a, b);\n      |                      ^\n[REDACTED]/tmpd7p_m8bm.cpp:45:54: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         sum_sq = _mm_add_epi32(sum_sq, _mm_add_epi32(_mm_cvtepi16_epi32(a_sq), _mm_cvtepi16_epi32(b_sq)));\n      |                                                      ^\n[REDACTED]/tmpd7p_m8bm.cpp:45:80: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         sum_sq = _mm_add_epi32(sum_sq, _mm_add_epi32(_mm_cvtepi16_epi32(a_sq), _mm_cvtepi16_epi32(b_sq)));\n      |                                                                                ^\n[REDACTED]/tmpd7p_m8bm.cpp:46:44: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   46 |         sum_prod = _mm_add_epi32(sum_prod, _mm_cvtepi16_epi32(ab));\n      |                                            ^\n6 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1e74vv4e.cpp:41:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i a_sq = _mm_maddubs_epi16(a, a);\n      |                        ^\n[REDACTED]/tmp1e74vv4e.cpp:42:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i b_sq = _mm_maddubs_epi16(b, b);\n      |                        ^\n[REDACTED]/tmp1e74vv4e.cpp:43:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i prod = _mm_maddubs_epi16(a, b);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvglw1u3k.cpp:41:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i a_sq = _mm_maddubs_epi16(a, a);\n      |                        ^\n[REDACTED]/tmpvglw1u3k.cpp:42:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i b_sq = _mm_maddubs_epi16(b, b);\n      |                        ^\n[REDACTED]/tmpvglw1u3k.cpp:43:22: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i ab = _mm_maddubs_epi16(a, b);\n      |                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuyyabt9x.cpp:41:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i a_sq = _mm_maddubs_epi16(a, a);\n      |                        ^\n[REDACTED]/tmpuyyabt9x.cpp:42:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i b_sq = _mm_maddubs_epi16(b, b);\n      |                        ^\n[REDACTED]/tmpuyyabt9x.cpp:43:24: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i prod = _mm_maddubs_epi16(a, b);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzavt_10k.cpp:52:10: error: expected ')'\n   52 |         );\n      |          ^\n[REDACTED]/tmpzavt_10k.cpp:49:31: note: to match this '('\n   49 |         sum_sq = _mm_add_epi32(sum_sq, _mm_add_epi32(\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt429cflf.cpp:48:72: error: expected ')'\n   48 |         v = _mm_sub_epi32(v, _mm_and_si128(_mm_srli_epi32(v, 1), mask1);\n      |                                                                        ^\n[REDACTED]/tmpt429cflf.cpp:48:26: note: to match this '('\n   48 |         v = _mm_sub_epi32(v, _mm_and_si128(_mm_srli_epi32(v, 1), mask1);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpthdyyd9j.cpp:41:62: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   41 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three));\n      |                                                              ^~~~~~~~~~~~~\n      |                                                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd2xh38gy.cpp:41:62: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   41 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three));\n      |                                                              ^~~~~~~~~~~~~\n      |                                                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp93jnkmoq.cpp:42:62: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   42 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three));\n      |                                                              ^~~~~~~~~~~~~\n      |                                                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqvh6k88_.cpp:42:62: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   42 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three);\n      |                                                              ^~~~~~~~~~~~~\n      |                                                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpqvh6k88_.cpp:42:101: error: expected ')'\n   42 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three);\n      |                                                                                                     ^\n[REDACTED]/tmpqvh6k88_.cpp:42:34: note: to match this '('\n   42 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9xyvpj14.cpp:41:62: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   41 |         remainder = _mm_sub_epi32(remainder, _mm_mullo_epi32(_mm_div_epi32(remainder, three), three));\n      |                                                              ^~~~~~~~~~~~~\n      |                                                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp04pfi16v.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp04pfi16v.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp04pfi16v.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp04pfi16v.cpp:54:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i res = _mm_blendv_epi8(negated, rotated, cond);\n      |                       ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8lqb6wn9.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp8lqb6wn9.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp8lqb6wn9.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp8lqb6wn9.cpp:55:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i res = _mm_blendv_epi8(negated, rotated, cond);\n      |                       ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnyi25chw.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpnyi25chw.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpnyi25chw.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpnyi25chw.cpp:54:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i res = _mm_blendv_epi8(negated, rotated, cond);\n      |                       ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp032123wj.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp032123wj.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp032123wj.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp032123wj.cpp:54:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i result = _mm_blendv_epi8(negated, rotated, cond);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfkm4qemx.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpfkm4qemx.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpfkm4qemx.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpfkm4qemx.cpp:53:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i res = _mm_blendv_epi8(negated, rotated, cond);\n      |                       ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxqngdrdv.cpp:51:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   51 |             _mm_blendv_ps(neg_one, one, mask_gt),\n      |             ^\n[REDACTED]/tmpxqngdrdv.cpp:50:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 res = _mm_blendv_ps(\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf_e07qtl.cpp:55:9: error: always_inline function '_mm_storeu_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'avx512vl'\n   55 |         _mm_storeu_epi8(&out[i], res);\n      |         ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2zw_8r9s.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_vec = _mm_mullo_epi32(int_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprcaprf5h.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_vec = _mm_mullo_epi32(int_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq9ih4g2d.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_vec = _mm_mullo_epi32(int_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3qdn2d4b.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_int = _mm_mullo_epi32(int_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsz4f94wx.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_vec = _mm_mullo_epi32(int_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: corrupted size vs. prev_size\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5l93_zgw.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i lo = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmp5l93_zgw.cpp:34:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpphust5n_.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i lo = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmpphust5n_.cpp:34:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr78383et.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i lo = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmpr78383et.cpp:34:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuuum0dqz.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i lo = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmpuuum0dqz.cpp:34:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpycalmfom.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i lo = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmpycalmfom.cpp:34:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo7_f0356.cpp:52:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128 result = _mm_blendv_ps(a, normalized, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpptqcx76f.cpp:52:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128 result = _mm_blendv_ps(a, normalized, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph_bapw8w.cpp:54:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128 v_result = _mm_blendv_ps(v_a, v_normalized, v_control_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph1qcix6q.cpp:55:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 v_result = _mm_blendv_ps(v_a, v_normalized, v_mask_ps);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxxwzg13m.cpp:54:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128 v_result = _mm_blendv_ps(v_a, v_normalized, v_mask_ps);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcsixpgk9.cpp:51:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   51 |         diff_float = _mm_blendv_ps(zeros, diff_float, _mm_castsi128_ps(cond_mask));\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt4z6be2g.cpp:51:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128 result = _mm_blendv_ps(zeros, diff_float, _mm_castsi128_ps(cond_mask));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd56ecg63.cpp:51:35: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   51 |     double result = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprqale2pm.cpp:46:35: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   46 |     double result = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyol3tmvz.cpp:49:35: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   49 |     double result = _mm_cvtsd_f64(_mm_hadd_pd(sum, sum));\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4vtuvak0.cpp:44:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i sum_low = _mm_cvtepi16_epi32(data);\n      |                           ^\n[REDACTED]/tmp4vtuvak0.cpp:45:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                            ^\n[REDACTED]/tmp4vtuvak0.cpp:50:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i prod_low = _mm_cvtepi16_epi32(data);\n      |                            ^\n[REDACTED]/tmp4vtuvak0.cpp:51:29: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i prod_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                             ^\n[REDACTED]/tmp4vtuvak0.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_low);\n      |                    ^\n[REDACTED]/tmp4vtuvak0.cpp:53:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   53 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_high);\n      |                    ^\n6 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7szjucho.cpp:43:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i sum_low = _mm_cvtepi16_epi32(data);\n      |                           ^\n[REDACTED]/tmp7szjucho.cpp:44:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                            ^\n[REDACTED]/tmp7szjucho.cpp:49:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i prod_low = _mm_cvtepi16_epi32(data);\n      |                            ^\n[REDACTED]/tmp7szjucho.cpp:50:29: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i prod_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                             ^\n[REDACTED]/tmp7szjucho.cpp:51:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_low);\n      |                    ^\n[REDACTED]/tmp7szjucho.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_high);\n      |                    ^\n6 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa8xs_83l.cpp:44:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i sum_low = _mm_cvtepi16_epi32(data);\n      |                           ^\n[REDACTED]/tmpa8xs_83l.cpp:45:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                            ^\n[REDACTED]/tmpa8xs_83l.cpp:50:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i prod_low = _mm_cvtepi16_epi32(data);\n      |                            ^\n[REDACTED]/tmpa8xs_83l.cpp:51:29: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i prod_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                             ^\n[REDACTED]/tmpa8xs_83l.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_low);\n      |                    ^\n[REDACTED]/tmpa8xs_83l.cpp:53:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   53 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_high);\n      |                    ^\n6 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpadnc4ut9.cpp:44:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i sum_low = _mm_cvtepi16_epi32(data);\n      |                           ^\n[REDACTED]/tmpadnc4ut9.cpp:45:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                            ^\n[REDACTED]/tmpadnc4ut9.cpp:50:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i prod_low = _mm_cvtepi16_epi32(data);\n      |                            ^\n[REDACTED]/tmpadnc4ut9.cpp:51:29: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i prod_high = _mm_cvtepi16_epi32(_mm_srli_si128(data, 8));\n      |                             ^\n[REDACTED]/tmpadnc4ut9.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_low);\n      |                    ^\n[REDACTED]/tmpadnc4ut9.cpp:53:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   53 |         prod_vec = _mm_mullo_epi32(prod_vec, prod_high);\n      |                    ^\n6 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo3bg69my.cpp:51:24: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   51 |         shifted_prev = _mm_insert_epi32(shifted_prev, result[i-1], 0);\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpo3bg69my.cpp:53:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i max1 = _mm_max_epi32(shifted_prev, current);\n      |                        ^\n[REDACTED]/tmpo3bg69my.cpp:55:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i max2 = _mm_max_epi32(prev_max, max1);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvtpaxt5z.cpp:64:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i max_val = _mm_max_epi32(current, prev_max);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7izw0ex_.cpp:59:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   59 |             result[i + j] = _mm_extract_epi32(new_max, j);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcrzvqlt7.cpp:50:28: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i max_vals = _mm_max_epi32(current_max, current_vals);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppv7x4joi.cpp:51:24: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   51 |             max_lens = _mm_insert_epi32(max_lens, len, j);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmppv7x4joi.cpp:52:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   52 |             indices = _mm_insert_epi32(indices, i + j, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmppv7x4joi.cpp:56:24: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   56 |             max_lens = _mm_insert_epi32(max_lens, 0, j);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmppv7x4joi.cpp:57:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   57 |             indices = _mm_insert_epi32(indices, 0, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6sz2jfym.cpp:55:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i max2 = _mm_max_epi32(lengths, max1);\n      |                        ^\n[REDACTED]/tmp6sz2jfym.cpp:57:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i max4 = _mm_max_epi32(max2, max3);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpimp1lq9t.cpp:50:51: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   50 |         vtemp = _mm_sub_epi64(va, _mm_mullo_epi64(_mm_div_epi64(va, vb), vb));\n      |                                                   ^~~~~~~~~~~~~\n      |                                                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt9hsu382.cpp:47:60: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   47 |         __m128i vrem = _mm_sub_epi64(va, _mm_mul_epu32(vb, _mm_div_epu32(va, vb)));\n      |                                                            ^~~~~~~~~~~~~\n      |                                                            _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7rs6617i.cpp:57:59: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   57 |         __m128i rem1 = _mm_sub_epi64(n_vec, _mm_mul_epu32(_mm_div_epu32(n_vec, divisors), divisors));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp7rs6617i.cpp:58:59: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   58 |         __m128i rem2 = _mm_sub_epi64(n_vec, _mm_mul_epu32(_mm_div_epu32(n_vec, divisors2), divisors2));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaek3iniv.cpp:43:64: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   43 |         __m128i v_remainder = _mm_sub_epi64(v_n, _mm_mul_epu32(_mm_div_epu32(v_n, v_i), v_i));\n      |                                                                ^~~~~~~~~~~~~\n      |                                                                _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp33l3twez.cpp:45:50: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   45 |         v_rem = _mm_sub_epi64(v_n, _mm_mul_epu32(_mm_div_epu32(v_n, v_divisors), v_divisors));\n      |                                                  ^~~~~~~~~~~~~\n      |                                                  _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq92i93i2.cpp:66:16: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   66 |         vrem = _mm_rem_epi32(vn, vdiv);\n      |                ^~~~~~~~~~~~~\n      |                _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvh8_esg_.cpp:63:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   63 |         __m128i v_remainder = _mm_sub_epi32(v_n, _mm_mullo_epi32(_mm_div_epi32(v_n, v_divisor), v_divisor));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp22fbqv3h.cpp:65:25: error: use of undeclared identifier '_mm_rem_epu32'\n   65 |         __m128i v_rem = _mm_rem_epu32(v_n, v_div);\n      |                         ^\n[REDACTED]/tmp22fbqv3h.cpp:72:35: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   72 |                     int divisor = _mm_extract_epi32(v_div, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr6tqn38l.cpp:73:21: error: use of undeclared identifier '_mm_rem_epu32'\n   73 |             v_rem = _mm_rem_epu32(v_tmp, v_current_div);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn2hxhaxq.cpp:62:64: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |         __m128i vremainder = _mm_sub_epi32(vn, _mm_mullo_epi32(_mm_div_epi32(vn, vdivisor), vdivisor);\n      |                                                                ^~~~~~~~~~~~~\n      |                                                                _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpn2hxhaxq.cpp:62:102: error: expected ')'\n   62 |         __m128i vremainder = _mm_sub_epi32(vn, _mm_mullo_epi32(_mm_div_epi32(vn, vdivisor), vdivisor);\n      |                                                                                                      ^\n[REDACTED]/tmpn2hxhaxq.cpp:62:43: note: to match this '('\n   62 |         __m128i vremainder = _mm_sub_epi32(vn, _mm_mullo_epi32(_mm_div_epi32(vn, vdivisor), vdivisor);\n      |                                           ^\n[REDACTED]/tmpn2hxhaxq.cpp:67:31: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |                 int divisor = _mm_extract_epi32(vdivisor, i);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5f4yxh2r.cpp:43:58: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   43 |         __m128i rem = _mm_sub_epi64(n_vec, _mm_mul_epu32(_mm_div_epi64(n_vec, divisors), divisors));\n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp49vjtpqv.cpp:43:58: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   43 |         __m128i rem = _mm_sub_epi64(n_vec, _mm_mul_epu32(_mm_div_epu32(n_vec, divisors), divisors));\n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw3mgcwrh.cpp:43:65: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i remainders = _mm_sub_epi64(n_vec, _mm_mul_epu32(_mm_div_epi32(n_vec, divisors), divisors));\n      |                                                                 ^~~~~~~~~~~~~\n      |                                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcywz9rxl.cpp:42:30: error: use of undeclared identifier '_mm_rem_epu32'\n   42 |         __m128i remainders = _mm_rem_epu32(n_vec, current);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbrt0nc51.cpp:42:29: error: use of undeclared identifier '_mm_rem_epu32'\n   42 |         __m128i remainder = _mm_rem_epu32(n_vec, current);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppccxkc33.cpp:72:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   72 |         if (!_mm_testz_si128(is_letter, is_letter)) {\n      |              ^\n[REDACTED]/tmppccxkc33.cpp:75:37: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   75 |             __m128i masked_toggle = _mm_blendv_epi8(chunk, toggled, is_letter);\n      |                                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvyhs6md8.cpp:64:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   64 |         if (!_mm_testz_si128(is_letter, is_letter)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu6lhkk42.cpp:73:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   73 |         if (!_mm_testz_si128(letter_mask, letter_mask)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2xxo5hh3.cpp:50:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |         __m128i rem11 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, elevens), elevens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp2xxo5hh3.cpp:51:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i rem13 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, thirteens), thirteens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp2xxo5hh3.cpp:58:65: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i digit = _mm_sub_epi32(temp, _mm_mullo_epi32(_mm_div_epi32(temp, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                 ^~~~~~~~~~~~~\n      |                                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp2xxo5hh3.cpp:60:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   60 |             temp = _mm_div_epi32(temp, _mm_set1_epi32(10));\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1102zujm.cpp:51:65: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i v_rem11 = _mm_sub_epi32(v_nums, _mm_mullo_epi32(_mm_div_epi32(v_nums, v_eleven), v_eleven));\n      |                                                                 ^~~~~~~~~~~~~\n      |                                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1102zujm.cpp:52:65: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |         __m128i v_rem13 = _mm_sub_epi32(v_nums, _mm_mullo_epi32(_mm_div_epi32(v_nums, v_thirteen), v_thirteen));\n      |                                                                 ^~~~~~~~~~~~~\n      |                                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1102zujm.cpp:62:72: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |             __m128i v_digit = _mm_sub_epi32(v_current, _mm_mullo_epi32(_mm_div_epi32(v_current, v_ten), v_ten));\n      |                                                                        ^~~~~~~~~~~~~\n      |                                                                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1102zujm.cpp:66:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   66 |             v_current = _mm_div_epi32(v_current, v_ten);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptvgwx4ou.cpp:50:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |         __m128i rem11 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, elevens), elevens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmptvgwx4ou.cpp:51:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i rem13 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, thirteens), thirteens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmptvgwx4ou.cpp:59:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   59 |             __m128i digits = _mm_sub_epi32(temp, _mm_mullo_epi32(_mm_div_epi32(temp, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmptvgwx4ou.cpp:61:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             temp = _mm_div_epi32(temp, _mm_set1_epi32(10));\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw3g_pcnp.cpp:51:59: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i rem11 = _mm_sub_epi32(vi, _mm_mullo_epi32(_mm_div_epi32(vi, v11), v11));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpw3g_pcnp.cpp:52:59: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |         __m128i rem13 = _mm_sub_epi32(vi, _mm_mullo_epi32(_mm_div_epi32(vi, v13), v13));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpw3g_pcnp.cpp:59:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   59 |             int num = _mm_extract_epi32(vi, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpw3g_pcnp.cpp:62:17: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   62 |             if (_mm_extract_epi32(div, j)) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxu0e4wpz.cpp:50:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |         __m128i rem11 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, elevens), elevens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpxu0e4wpz.cpp:51:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   51 |         __m128i rem13 = _mm_sub_epi32(nums, _mm_mullo_epi32(_mm_div_epi32(nums, thirteens), thirteens));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpxu0e4wpz.cpp:60:64: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   60 |             __m128i digit = _mm_sub_epi32(num, _mm_mullo_epi32(_mm_div_epi32(num, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                                                ^~~~~~~~~~~~~\n      |                                                                _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpxu0e4wpz.cpp:60:123: error: expected ')'\n   60 |             __m128i digit = _mm_sub_epi32(num, _mm_mullo_epi32(_mm_div_epi32(num, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                                                                                                           ^\n[REDACTED]/tmpxu0e4wpz.cpp:60:42: note: to match this '('\n   60 |             __m128i digit = _mm_sub_epi32(num, _mm_mullo_epi32(_mm_div_epi32(num, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                          ^\n[REDACTED]/tmpxu0e4wpz.cpp:62:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |             num = _mm_div_epi32(num, _mm_set1_epi32(10));\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n5 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe78w7cki.cpp:44:17: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   44 |         right = _mm_shuffle_epi8(right, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp54qjni6f.cpp:43:17: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   43 |         right = _mm_shuffle_epi8(right, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7k68f2eb.cpp:43:17: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   43 |         right = _mm_shuffle_epi8(right, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmmyo4wah.cpp:44:34: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i reversed_right = _mm_shuffle_epi8(right, \n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9ueh45bo.cpp:43:17: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   43 |         right = _mm_shuffle_epi8(right, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6jyso0p7.cpp:55:15: error: always_inline function '_mm_min_epi8' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   55 |         min = _mm_min_epi8(min, sum);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnvhcu7jz.cpp:58:34: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   58 |                 balance += (delta.m128i_i8[j] > 0) ? 1 : -1;\n      |                             ~~~~~^~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_90_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_90_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmrf1sg9e.cpp:59:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   59 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7fvvyip5.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7l2iwoqq.cpp:57:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         min_vals = _mm_min_epi32(min_vals, current_min);\n      |                    ^\n[REDACTED]/tmp7l2iwoqq.cpp:58:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   58 |         min_indices = _mm_blendv_epi8(min_indices, indices, cmp);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3olsxsg2.cpp:57:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         min_vals = _mm_min_epi32(min_vals, current_min);\n      |                    ^\n[REDACTED]/tmp3olsxsg2.cpp:58:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   58 |         min_indices = _mm_blendv_epi8(min_indices, indices, cmp);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp57zmvpru.cpp:58:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   58 |         min_vals = _mm_min_epi32(min_vals, current_min);\n      |                    ^\n[REDACTED]/tmp57zmvpru.cpp:59:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   59 |         min_idxs = _mm_blendv_epi8(min_idxs, indices, cmp);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl0eb069q.cpp:55:31: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i current_min = _mm_min_epi32(data, min_vals);\n      |                               ^\n[REDACTED]/tmpl0eb069q.cpp:56:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i new_min_vals = _mm_blendv_epi8(min_vals, current_min, mask);\n      |                                ^\n[REDACTED]/tmpl0eb069q.cpp:57:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i new_min_indices = _mm_blendv_epi8(min_indices, indices, mask);\n      |                                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp71p209l2.cpp:55:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i current_min = _mm_blendv_epi8(_mm_set1_epi32(INT_MAX), data, mask);\n      |                               ^\n[REDACTED]/tmp71p209l2.cpp:56:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i current_idx = _mm_blendv_epi8(_mm_set1_epi32(-1), indices, mask);\n      |                               ^\n[REDACTED]/tmp71p209l2.cpp:59:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   59 |         min_vals = _mm_min_epi32(min_vals, current_min);\n      |                    ^\n[REDACTED]/tmp71p209l2.cpp:60:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   60 |         min_idxs = _mm_blendv_epi8(min_idxs, current_idx, cmp);\n      |                    ^\n4 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6fwihuo2.cpp:74:23: error: use of undeclared identifier '_mm_cmpge_epi32'; did you mean '_mm_cmpgt_epi32'?\n   74 |         __m128i cmp = _mm_cmpge_epi32(freq_vec, key_vec);\n      |                       ^~~~~~~~~~~~~~~\n      |                       _mm_cmpgt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3120:46: note: '_mm_cmpgt_epi32' declared here\n 3120 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_9_8_8ba.cpp:61:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   61 |             (it + 0)->first,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:62:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   62 |             (it + 1)->first,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:63:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   63 |             (it + 2)->first,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:64:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   64 |             (it + 3)->first\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:67:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   67 |             (it + 0)->second,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:68:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   68 |             (it + 1)->second,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:69:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   69 |             (it + 2)->second,\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:70:17: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   70 |             (it + 3)->second\n      |              ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:73:23: error: use of undeclared identifier '_mm_cmpge_epi32'; did you mean '_mm_cmpgt_epi32'?\n   73 |         __m128i cmp = _mm_cmpge_epi32(freqs, keys);\n      |                       ^~~~~~~~~~~~~~~\n      |                       _mm_cmpgt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3120:46: note: '_mm_cmpgt_epi32' declared here\n 3120 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi32(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp_9_8_8ba.cpp:78:39: error: invalid operands to binary expression ('iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>') and 'int')\n   78 |                 int current_key = (it + j)->first;\n      |                                    ~~ ^ ~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:634:5: note: candidate template ignored: could not match 'reverse_iterator<_Iterator>' against 'int'\n  634 |     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1808:5: note: candidate template ignored: could not match 'move_iterator<_Iterator>' against 'int'\n 1808 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3553:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3553 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3571 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3590:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3590 |     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3607:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3607 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3625:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3625 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3644:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3644 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: candidate template ignored: could not match 'const _CharT *' against 'iterator' (aka '_Node_iterator<std::pair<const int, int>, __constant_iterators::value, __hash_cached::value>')\n 3674 |     operator+(const _CharT* __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3681:5: note: candidate template ignored: could not match 'basic_string<_CharT, _Traits, _Alloc>' against 'int'\n 3681 |     operator+(_CharT __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3695:5: note: candidate template ignored: could not match 'basic_string' against '_Node_iterator'\n 3695 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |     ^\n[REDACTED]/tmp_9_8_8ba.cpp:85:12: error: no viable overloaded '+='\n   85 |         it += 4;\n      |         ~~ ^  ~\n11 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4vmxec1x.cpp:45:24: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i vcmp = _mm_cmpeq_epi64(vres, vx);\n      |                        ^\n[REDACTED]/tmp4vmxec1x.cpp:50:31: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   50 |         if (_mm_movemask_epi8(_mm_cmpgt_epi64(vmul, vx))) {\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb9u6g5ts.cpp:51:31: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   51 |         if (_mm_movemask_epi8(_mm_cmplt_epi64(vresult, vmul)) {\n      |                               ^~~~~~~~~~~~~~~\n      |                               _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpb9u6g5ts.cpp:51:63: error: expected ')'\n   51 |         if (_mm_movemask_epi8(_mm_cmplt_epi64(vresult, vmul)) {\n      |                                                               ^\n[REDACTED]/tmpb9u6g5ts.cpp:51:12: note: to match this '('\n   51 |         if (_mm_movemask_epi8(_mm_cmplt_epi64(vresult, vmul)) {\n      |            ^\n[REDACTED]/tmpb9u6g5ts.cpp:56:5: error: expected statement\n   56 |     }\n      |     ^\n3 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppm445c42.cpp:44:24: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i vcmp = _mm_cmpeq_epi64(vres, vx);\n      |                        ^\n[REDACTED]/tmppm445c42.cpp:48:31: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   48 |         if (_mm_movemask_epi8(_mm_cmpgt_epi64(vres, vmul))) return false;\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7jasks3c.cpp:48:31: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   48 |         if (_mm_movemask_epi8(_mm_cmplt_epi64(vres, vmul)) == 0) break;\n      |                               ^~~~~~~~~~~~~~~\n      |                               _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplhdn2151.cpp:65:36: error: member reference base type 'const __m128i' (vector of 2 'long long' values) is not a structure or union\n   65 |         if (val < 16 && (prime_mask.m128i_u8[val] & 1)) {\n      |                          ~~~~~~~~~~^~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpej0nqq21.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm91mnxbg.cpp:52:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'hex_key_simd' that is compiled without support for 'sse4.1'\n   52 |         digits = _mm_blendv_epi8(digits, letter_digits, is_letter);\n      |                  ^\n[REDACTED]/tmpm91mnxbg.cpp:58:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   58 |         count += _mm_popcnt_u32(_mm_movemask_epi8(is_prime));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphkhou0zz.cpp:50:23: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   50 |         __m128i leF = _mm_cmple_epi8(chunk, F);\n      |                       ^~~~~~~~~~~~~~\n      |                       _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw4if72wg.cpp:55:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'hex_key_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i val = _mm_blendv_epi8(digit_val, letter_val, is_letter);\n      |                       ^\n[REDACTED]/tmpw4if72wg.cpp:63:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   63 |         count += _mm_popcnt_u32(_mm_movemask_epi8(is_prime));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0_ut9e8w.cpp:44:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   44 |         if (!_mm_testz_si128(or_result, or_result)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpazdzc4ua.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_testz_si128(res2, res2)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphonin24a.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_testz_si128(res, res)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmf8wgp4m.cpp:37:28: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   37 |         __m128i shifted1 = _mm_alignr_epi8(chunk, chunk, 1);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpmf8wgp4m.cpp:38:28: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   38 |         __m128i shifted2 = _mm_alignr_epi8(chunk, chunk, 2);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp278k6skh.cpp:50:29: error: use of undeclared identifier '_mm_rem_epu32'\n   50 |         __m128i remainder = _mm_rem_epu32(len_vec, current_div);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv48ardkd.cpp:51:30: error: use of undeclared identifier '_mm_rem_epu32'\n   51 |         __m128i remainders = _mm_rem_epu32(len_vec, current_divisors);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2ay3sn4u.cpp:51:30: error: use of undeclared identifier '_mm_rem_epu32'\n   51 |         __m128i remainders = _mm_rem_epu32(len_vec, current_divisors);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpep8hs7yr.cpp:52:30: error: use of undeclared identifier '_mm_rem_epu32'\n   52 |         __m128i remainders = _mm_rem_epu32(len_vec, current_divisors);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa5rao3g_.cpp:51:30: error: use of undeclared identifier '_mm_rem_epu32'\n   51 |         __m128i remainders = _mm_rem_epu32(len_vec, current);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwp7z7iw6.cpp:47:28: error: '__builtin_ia32_gatherd_d' needs target feature avx2\n   47 |         __m128i elements = _mm_i32gather_epi32(lst.data(), indices, 4);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:5046:13: note: expanded from macro '_mm_i32gather_epi32'\n 5046 |   ((__m128i)__builtin_ia32_gatherd_d((__v4si)_mm_undefined_si128(), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9yr2g6l2.cpp:48:28: error: '__builtin_ia32_gatherd_d' needs target feature avx2\n   48 |         __m128i elements = _mm_i32gather_epi32(lst.data(), indices, 4);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:5046:13: note: expanded from macro '_mm_i32gather_epi32'\n 5046 |   ((__m128i)__builtin_ia32_gatherd_d((__v4si)_mm_undefined_si128(), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa56rymne.cpp:89:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   89 |         __m128i encoded = _mm_blendv_epi8(chunk, shifted_vowels, vowels);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppp5z9snp.cpp:72:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   72 |         __m128i lower_vowel = _mm_cmpeq_epi8(_mm_shuffle_epi8(vowels_lower, chunk), chunk);\n      |                                              ^\n[REDACTED]/tmppp5z9snp.cpp:73:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   73 |         __m128i upper_vowel = _mm_cmpeq_epi8(_mm_shuffle_epi8(vowels_upper, chunk), chunk);\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2uo8iidw.cpp:58:43: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   58 |             __m128i vowel = _mm_set1_epi8(_mm_extract_epi8(vowels, j));\n      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphptqi_xk.cpp:66:125: error: expected ')'\n   66 |         __m128i is_vowel = _mm_or_si128(_mm_or_si128(_mm_or_si128(_mm_or_si128(is_a, is_e), is_i), _mm_or_si128(is_o, is_u));\n      |                                                                                                                             ^\n[REDACTED]/tmphptqi_xk.cpp:66:40: note: to match this '('\n   66 |         __m128i is_vowel = _mm_or_si128(_mm_or_si128(_mm_or_si128(_mm_or_si128(is_a, is_e), is_i), _mm_or_si128(is_o, is_u));\n      |                                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_el32p11.cpp:78:18: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   78 |             if (!_mm_test_all_ones(_mm_or_si128(valid_lower, valid_upper))) {\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n[REDACTED]/tmp_el32p11.cpp:82:26: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   82 |             all_lower &= _mm_test_all_ones(valid_lower);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n[REDACTED]/tmp_el32p11.cpp:83:26: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   83 |             all_upper &= _mm_test_all_ones(valid_upper);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppc7slhe7.cpp:65:33: error: use of undeclared identifier '_mm_rem_epu32'\n   65 |             __m128i remainder = _mm_rem_epu32(vi, vprimes);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwstxg6o2.cpp:64:27: error: use of undeclared identifier '_mm_rem_epu32'\n   64 |             __m128i rem = _mm_rem_epu32(i_vec, prime_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptej5b6fh.cpp:64:33: error: use of undeclared identifier '_mm_rem_epu32'\n   64 |             __m128i remainder = _mm_rem_epu32(vi, vprimes);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpss744zpq.cpp:63:30: error: use of undeclared identifier '_mm_rem_epu32'\n   63 |         __m128i remainders = _mm_rem_epu32(current, divisors);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcvjtl6dq.cpp:64:33: error: use of undeclared identifier '_mm_rem_epu32'\n   64 |             __m128i remainder = _mm_rem_epu32(vi, vprimes);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr3xvccng.cpp:37:88: warning: shift count >= width of type [-Wshift-count-overflow]\n   37 |     __m128i vowels = _mm_set1_epi8('A' | ('E' << 8) | ('I' << 16) | ('O' << 24) | ('U' << 32));\n      |                                                                                        ^  ~~\n[REDACTED]/tmpr3xvccng.cpp:37:81: warning: implicit conversion from 'int' to 'char' changes value from -817281727 to 65 [-Wconstant-conversion]\n   37 |     __m128i vowels = _mm_set1_epi8('A' | ('E' << 8) | ('I' << 16) | ('O' << 24) | ('U' << 32));\n      |                      ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~\n[REDACTED]/tmpr3xvccng.cpp:57:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   57 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n2 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpps7w7_jf.cpp:67:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   67 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn_y22o67.cpp:58:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   58 |         count += _mm_popcnt_u32(_mm_movemask_epi8(even_pos));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvndb7irk.cpp:48:47: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i current = _mm_add_epi32(base, _mm_mullo_epi32(indices, increment));\n      |                                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1gyh6efi.cpp:67:42: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   67 |             fact = _mm_mullo_epi32(fact, _mm_blendv_epi8(_mm_set1_epi32(1), j_vec, update_mask));\n      |                                          ^\n[REDACTED]/tmp1gyh6efi.cpp:67:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   67 |             fact = _mm_mullo_epi32(fact, _mm_blendv_epi8(_mm_set1_epi32(1), j_vec, update_mask));\n      |                    ^\n[REDACTED]/tmp1gyh6efi.cpp:80:38: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   80 |             sum = _mm_add_epi32(sum, _mm_blendv_epi8(_mm_set1_epi32(0), j_vec, update_mask));\n      |                                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw3196d4q.cpp:68:17: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   68 |             if (_mm_test_all_zeros(not_finished, not_finished)) break;\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n[REDACTED]/tmpw3196d4q.cpp:70:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   70 |             fact = _mm_mullo_epi32(fact, current);\n      |                    ^\n[REDACTED]/tmpw3196d4q.cpp:77:23: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   77 |         __m128i sum = _mm_mullo_epi32(idx, _mm_add_epi32(idx, one));\n      |                       ^\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp19hpxgr5.cpp:68:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   68 |             fact = _mm_mullo_epi32(fact, _mm_and_si128(fact_mask, counter));\n      |                    ^\n[REDACTED]/tmp19hpxgr5.cpp:75:23: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   75 |         __m128i sum = _mm_mullo_epi32(indices, _mm_add_epi32(indices, ones));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp92u72h2w.cpp:66:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   66 |         current_fact = _mm_mullo_epi32(current_fact, fact_vec);\n      |                        ^\n[REDACTED]/tmp92u72h2w.cpp:71:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   71 |         __m128i sum_result = _mm_mullo_epi32(sum_vec, _mm_add_epi32(sum_vec, one));\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmt1170om.cpp:65:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   65 |         current_fact = _mm_mullo_epi32(current_fact, fact_incr);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpco_l70oy.cpp:45:16: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'sse4.1'\n   45 |         nums = _mm_min_epi32(nums, max_val);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp85v9bco.cpp:48:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   48 |             int num = _mm_extract_epi32(temp, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpp85v9bco.cpp:54:24: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   54 |             reversed = _mm_insert_epi32(reversed, rev, j);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmfpzx2qo.cpp:54:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'sse4.1'\n   54 |             reversed = _mm_add_epi32(_mm_mullo_epi32(reversed, _mm_set1_epi32(10)), digit);\n      |                                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp500wrn_2.cpp:58:40: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   58 |         __m128i is_odd = _mm_and_si128(_mm_cmpneq_epi32(_mm_and_si128(nums, one), zero), is_palindrome);\n      |                                        ^~~~~~~~~~~~~~~~\n      |                                        _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpry5kwzec.cpp:53:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'sse4.1'\n   53 |             reversed = _mm_add_epi32(_mm_mullo_epi32(reversed, _mm_set1_epi32(10)), digit);\n      |                                      ^\n[REDACTED]/tmpry5kwzec.cpp:72:58: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'even_odd_palindrome_simd' that is compiled without support for 'ssse3'\n   72 |         even_odd_counts = _mm_add_epi32(even_odd_counts, _mm_hadd_epi32(even_pals, odd_pals));\n      |                                                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfhb3va14.cpp:59:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   59 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpneo5vixh.cpp:71:111: error: expected ')'\n   71 |         __m128i signed_sum = _mm_sub_epi32(sum, _mm_slli_epi32(_mm_and_si128(sign_mask, _mm_set1_epi32(1)), 1);\n      |                                                                                                               ^\n[REDACTED]/tmpneo5vixh.cpp:71:43: note: to match this '('\n   71 |         __m128i signed_sum = _mm_sub_epi32(sum, _mm_slli_epi32(_mm_and_si128(sign_mask, _mm_set1_epi32(1)), 1);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphudbui4q.cpp:60:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   60 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplmc1g52o.cpp:60:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   60 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpulzzih1p.cpp:63:65: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   63 |             __m128i mod = _mm_sub_epi32(digits, _mm_mullo_epi32(_mm_div_epi32(digits, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                 ^~~~~~~~~~~~~\n      |                                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpulzzih1p.cpp:65:22: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   65 |             digits = _mm_div_epi32(digits, _mm_set1_epi32(10));\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpulzzih1p.cpp:70:31: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   70 |         __m128i first_digit = _mm_div_epi32(abs_v, _mm_set1_epi32(10));\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpulzzih1p.cpp:71:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   71 |         first_digit = _mm_div_epi32(first_digit, _mm_set1_epi32(10));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_115_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqvx03qcp.cpp:54:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   54 |             odd_in_lst1 += _mm_popcnt_u32(_mm_movemask_epi8(cmp1)) / 4;\n      |                            ^\n[REDACTED]/tmpqvx03qcp.cpp:55:29: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   55 |             even_in_lst2 += _mm_popcnt_u32(_mm_movemask_epi8(cmp2)) / 4;\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk2ichgrj.cpp:49:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   49 |         count_odd1 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(mask1)));\n      |                       ^\n[REDACTED]/tmpk2ichgrj.cpp:54:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   54 |         count_even2 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(mask2)));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoo0r8w64.cpp:53:31: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   53 |         __m128i new_current = _mm_min_epi64(sum_candidate, nums_vec);\n      |                               ^\n[REDACTED]/tmpoo0r8w64.cpp:56:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   56 |         min_vec = _mm_min_epi64(min_vec, new_current);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuyc3nykp.cpp:52:23: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   52 |         current_vec = _mm_min_epi64(current_vec, nums_vec);\n      |                       ^\n[REDACTED]/tmpuyc3nykp.cpp:55:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   55 |         min_vec = _mm_min_epi64(min_vec, current_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw2bz3oa3.cpp:46:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'solution_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i sum_low = _mm_cvtepi16_epi32(masked);\n      |                           ^\n[REDACTED]/tmpw2bz3oa3.cpp:47:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'solution_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(masked, 8));\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2u5830g1.cpp:44:32: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   44 |         __m128i shifted_prev = _mm_alignr_epi8(current, prev, 12);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx6sd5adt.cpp:52:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_sign = _mm_mullo_epi32(prod_sign, sign);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqe4ceih_.cpp:57:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         prod_sign = _mm_mullo_epi32(prod_sign, sign);\n      |                     ^\n[REDACTED]/tmpqe4ceih_.cpp:69:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   69 |     prod_sign = _mm_mullo_epi32(prod_sign, prod_shuf);\n      |                 ^\n[REDACTED]/tmpqe4ceih_.cpp:71:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   71 |     prod_sign = _mm_mullo_epi32(prod_sign, prod_shuf);\n      |                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwu5vsywe.cpp:60:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   60 |         prod_sign = _mm_mullo_epi32(prod_sign, sign_extracted);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv55914v2.cpp:60:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   60 |         sign_val = _mm_blendv_epi8(sign_val, zero, is_zero);\n      |                    ^\n[REDACTED]/tmpv55914v2.cpp:61:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   61 |         prod_sign = _mm_mullo_epi32(prod_sign, sign_val);\n      |                     ^\n[REDACTED]/tmpv55914v2.cpp:73:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   73 |     prod_sign = _mm_mullo_epi32(prod_sign, prod_shuf);\n      |                 ^\n[REDACTED]/tmpv55914v2.cpp:75:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   75 |     prod_sign = _mm_mullo_epi32(prod_sign, prod_shuf);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo4sn9h41.cpp:62:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   62 |         prod_sign = _mm_mullo_epi32(prod_sign, sign);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp810l5elv.cpp:101:18: error: no member named 'function' in namespace 'std'\n  101 |             std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |             ~~~~~^\n[REDACTED]/tmp810l5elv.cpp:101:35: error: expected '(' for function-style cast or type construction\n  101 |             std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                ~~~^\n[REDACTED]/tmp810l5elv.cpp:101:40: error: expected '(' for function-style cast or type construction\n  101 |             std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                     ~~~^\n[REDACTED]/tmp810l5elv.cpp:101:45: error: expected '(' for function-style cast or type construction\n  101 |             std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                          ~~~^\n[REDACTED]/tmp810l5elv.cpp:101:48: error: use of undeclared identifier 'dfs'\n  101 |             std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                                ^\n[REDACTED]/tmp810l5elv.cpp:137:29: error: use of undeclared identifier 'dfs'\n  137 |                             dfs(nx, ny, step + 1);\n      |                             ^\n[REDACTED]/tmp810l5elv.cpp:145:13: error: use of undeclared identifier 'dfs'\n  145 |             dfs(i, j, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv1lvp_t5.cpp:102:35: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n  102 |                     if (vals[l] < _mm_extract_epi32(min_vec, l)) {\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpv1lvp_t5.cpp:103:35: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n  103 |                         min_vec = _mm_insert_epi32(min_vec, vals[l], l);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqnuqt_gn.cpp:58:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   58 |         product = _mm_mullo_epi32(product, masked_digit);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuo5lr588.cpp:59:35: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i new_product_low = _mm_mullo_epi32(product_low, _mm_add_epi32(digit_low, _mm_andnot_si128(is_odd, one)));\n      |                                   ^\n[REDACTED]/tmpuo5lr588.cpp:61:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   61 |         product = _mm_blendv_epi8(product, new_product_low, is_odd);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi1np2at8.cpp:55:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i product_mask = _mm_blendv_epi8(one, vdigit, is_odd);\n      |                                ^\n[REDACTED]/tmpi1np2at8.cpp:56:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   56 |         product = _mm_mullo_epi32(product, product_mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqarsxksp.cpp:57:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i product_part = _mm_blendv_epi8(one, vdigit, is_odd);\n      |                                ^\n[REDACTED]/tmpqarsxksp.cpp:58:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   58 |         product = _mm_mullo_epi32(product, product_part);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7it0tzbw.cpp:60:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   60 |         product = _mm_mullo_epi32(product, default_one);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxiai8pku.cpp:38:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpxiai8pku.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxiai8pku.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxiai8pku.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk5qoxd4v.cpp:36:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpk5qoxd4v.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpk5qoxd4v.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpk5qoxd4v.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzewni8ja.cpp:37:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   37 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpzewni8ja.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzewni8ja.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzewni8ja.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7rkum91c.cpp:35:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7rkum91c.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7rkum91c.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7rkum91c.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpztbzox65.cpp:38:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpztbzox65.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpztbzox65.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpztbzox65.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcvtibup_.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmpcvtibup_.cpp:58:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu4frze5o.cpp:57:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         max_neg_vec = _mm_max_epi32(max_neg_vec, neg_values);\n      |                       ^\n[REDACTED]/tmpu4frze5o.cpp:58:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         min_pos_vec = _mm_min_epi32(min_pos_vec, _mm_or_si128(pos_values, _mm_andnot_si128(pos_mask, _mm_set1_epi32(INT_MAX))));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3kjgcmnk.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmp3kjgcmnk.cpp:58:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfm03knn2.cpp:48:21: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   48 |         v_max_neg = _mm_max_epi32(v_max_neg, neg);\n      |                     ^\n[REDACTED]/tmpfm03knn2.cpp:52:21: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         v_min_pos = _mm_min_epi32(v_min_pos, pos);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9v4_4611.cpp:57:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         max_neg = _mm_max_epi32(max_neg, neg_max_candidate);\n      |                   ^\n[REDACTED]/tmp9v4_4611.cpp:58:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         min_pos = _mm_min_epi32(min_pos, pos_min_candidate);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpglgpjis2.cpp:54:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i square = _mm_mullo_epi32(vec, vec);\n      |                          ^\n[REDACTED]/tmpglgpjis2.cpp:55:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i cube = _mm_mullo_epi32(square, vec);\n      |                        ^\n[REDACTED]/tmpglgpjis2.cpp:58:13: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |             _mm_blendv_epi8(vec, cube, mask4),\n      |             ^\n[REDACTED]/tmpglgpjis2.cpp:57:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i res = _mm_blendv_epi8(\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1uvnsai1.cpp:54:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i square = _mm_mullo_epi32(vec, vec);\n      |                          ^\n[REDACTED]/tmp1uvnsai1.cpp:55:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i cube = _mm_mullo_epi32(square, vec);\n      |                        ^\n[REDACTED]/tmp1uvnsai1.cpp:58:13: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |             _mm_blendv_epi8(vec, cube, mask4),\n      |             ^\n[REDACTED]/tmp1uvnsai1.cpp:57:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i res = _mm_blendv_epi8(\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplifh32si.cpp:56:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i square = _mm_mullo_epi32(vec, vec);\n      |                          ^\n[REDACTED]/tmplifh32si.cpp:57:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i cube = _mm_mullo_epi32(square, vec);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvs2ybdlf.cpp:54:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i square = _mm_mullo_epi32(vec, vec);\n      |                          ^\n[REDACTED]/tmpvs2ybdlf.cpp:55:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i cube = _mm_mullo_epi32(square, vec);\n      |                        ^\n[REDACTED]/tmpvs2ybdlf.cpp:58:13: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |             _mm_blendv_epi8(vec, cube, mask4),\n      |             ^\n[REDACTED]/tmpvs2ybdlf.cpp:57:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i res = _mm_blendv_epi8(\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9v_k30fq.cpp:56:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i square = _mm_mullo_epi32(vec, vec);\n      |                          ^\n[REDACTED]/tmp9v_k30fq.cpp:57:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i cube = _mm_mullo_epi32(square, vec);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd8svwwcb.cpp:56:69: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   56 |         __m128i v_last_digit = _mm_sub_epi32(v_abs, _mm_mullo_epi32(_mm_div_epi32(v_abs, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                     ^~~~~~~~~~~~~\n      |                                                                     _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpd8svwwcb.cpp:66:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   66 |             __m128i v_next = _mm_div_epi32(v_first, v_divisor);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpd8svwwcb.cpp:71:72: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   71 |         __m128i v_first_digit = _mm_sub_epi32(v_first, _mm_mullo_epi32(_mm_div_epi32(v_first, v_divisor), v_divisor));\n      |                                                                        ^~~~~~~~~~~~~\n      |                                                                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgv2251a3.cpp:54:69: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i v_last_digit = _mm_sub_epi32(v_abs, _mm_mullo_epi32(_mm_div_epi32(v_abs, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                     ^~~~~~~~~~~~~\n      |                                                                     _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpgv2251a3.cpp:62:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |             __m128i v_next = _mm_div_epi32(v_first, v_divisor);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe9vpcymm.cpp:55:69: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i v_last_digit = _mm_sub_epi32(v_abs, _mm_mullo_epi32(_mm_div_epi32(v_abs, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                     ^~~~~~~~~~~~~\n      |                                                                     _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpe9vpcymm.cpp:65:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   65 |             __m128i v_next = _mm_div_epi32(v_first, v_div);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpe9vpcymm.cpp:70:72: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   70 |         __m128i v_first_digit = _mm_sub_epi32(v_first, _mm_mullo_epi32(_mm_div_epi32(v_first, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                                                        ^~~~~~~~~~~~~\n      |                                                                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpe9vpcymm.cpp:70:135: error: expected ')'\n   70 |         __m128i v_first_digit = _mm_sub_epi32(v_first, _mm_mullo_epi32(_mm_div_epi32(v_first, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                                                                                                                       ^\n[REDACTED]/tmpe9vpcymm.cpp:70:46: note: to match this '('\n   70 |         __m128i v_first_digit = _mm_sub_epi32(v_first, _mm_mullo_epi32(_mm_div_epi32(v_first, _mm_set1_epi32(10)), _mm_set1_epi32(10));\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb4ho7l43.cpp:54:69: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i v_last_digit = _mm_sub_epi32(v_abs, _mm_mullo_epi32(_mm_div_epi32(v_abs, _mm_set1_epi32(10)), _mm_set1_epi32(10)));\n      |                                                                     ^~~~~~~~~~~~~\n      |                                                                     _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpb4ho7l43.cpp:62:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |             __m128i v_div = _mm_div_epi32(v_tmp, _mm_set1_epi32(10));\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpth0ca0fd.cpp:60:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   60 |             v_first_digit = _mm_div_epi32(v_first_digit, v_div);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpven14jmc.cpp:82:17: error: use of undeclared identifier '_mm_rem_epu32'\n   82 |         v_mod = _mm_rem_epu32(v_res, v_three);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi42vrtkf.cpp:82:17: error: use of undeclared identifier '_mm_rem_epu32'\n   82 |         v_mod = _mm_rem_epu32(v_res, v_three);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpek4bz92i.cpp:82:17: error: use of undeclared identifier '_mm_rem_epu32'\n   82 |         v_mod = _mm_rem_epu32(v_res, v_three);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt5iqp16c.cpp:82:17: error: use of undeclared identifier '_mm_rem_epu32'\n   82 |         v_mod = _mm_rem_epu32(v_res, v_three);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmro4eqpw.cpp:82:17: error: use of undeclared identifier '_mm_rem_epu32'\n   82 |         v_mod = _mm_rem_epu32(v_res, v_three);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd8idw_hd.cpp:45:26: error: use of undeclared identifier '_mm_rem_epu32'\n   45 |     __m128i remainders = _mm_rem_epu32(n_vec, divisors);\n      |                          ^\n[REDACTED]/tmpd8idw_hd.cpp:57:23: error: use of undeclared identifier '_mm_rem_epu32'\n   57 |         __m128i rem = _mm_rem_epu32(n_vec, inc);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplpck37gt.cpp:49:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   49 |         __m128i rem = _mm_rem_epi32(n_vec, i_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmplpck37gt.cpp:57:15: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |         rem = _mm_rem_epi32(n_vec, i_vec);\n      |               ^~~~~~~~~~~~~\n      |               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoyu1dz8g.cpp:45:26: error: use of undeclared identifier '_mm_rem_epu32'\n   45 |     __m128i remainders = _mm_rem_epu32(n_vec, divisors);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsdvirjcj.cpp:46:19: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   46 |     __m128i rem = _mm_rem_epi32(n_vec, divisors);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpsdvirjcj.cpp:56:15: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   56 |         rem = _mm_rem_epi32(n_vec, inc);\n      |               ^~~~~~~~~~~~~\n      |               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpsdvirjcj.cpp:64:15: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   64 |         rem = _mm_rem_epi32(n_vec, inc);\n      |               ^~~~~~~~~~~~~\n      |               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoucjd_k7.cpp:45:26: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   45 |     __m128i remainders = _mm_rem_epi32(n_vec, divisors);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpoucjd_k7.cpp:52:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   52 |         __m128i rem1 = _mm_rem_epi32(n_vec, i_vec);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpoucjd_k7.cpp:53:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   53 |         __m128i rem2 = _mm_rem_epi32(n_vec, i_plus_2);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmporlm_qsl.cpp:59:48: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   59 |         sum = _mm_add_epi64(sum, _mm_add_epi64(_mm_cvtepi32_epi64(res_i), _mm_cvtepi32_epi64(_mm_shuffle_epi32(res_i, _MM_SHUFFLE(2, 3, 0, 1)))));\n      |                                                ^\n[REDACTED]/tmporlm_qsl.cpp:59:75: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   59 |         sum = _mm_add_epi64(sum, _mm_add_epi64(_mm_cvtepi32_epi64(res_i), _mm_cvtepi32_epi64(_mm_shuffle_epi32(res_i, _MM_SHUFFLE(2, 3, 0, 1)))));\n      |                                                                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb9rfpqa3.cpp:70:98: error: expected ')'\n   70 |         sum = _mm_add_epi64(sum, _mm_srli_epi64(_mm_mul_epu32(squared_int, _mm_set1_epi32(1)), 0);\n      |                                                                                                  ^\n[REDACTED]/tmpb9rfpqa3.cpp:70:28: note: to match this '('\n   70 |         sum = _mm_add_epi64(sum, _mm_srli_epi64(_mm_mul_epu32(squared_int, _mm_set1_epi32(1)), 0);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5ydo00q2.cpp:57:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i squared = _mm_mullo_epi32(and_result, and_result);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxo6fbcwn.cpp:55:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i squared = _mm_mullo_epi32(ivec, ivec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnkjvo6xl.cpp:51:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i squared = _mm_mullo_epi32(ivec, ivec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzpg8ma97.cpp:42:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpet3shwga.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprb_y_5kf.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbl0md0_z.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvax72231.cpp:39:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}

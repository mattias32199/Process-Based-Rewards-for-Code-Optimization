{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7ew6brig.cpp:48:20: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   48 |         mask_vec = _mm_insert_epi64(mask_vec, (mask[i+1] ? -1LL : 0LL), 1);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmp7ew6brig.cpp:49:20: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   49 |         mask_vec = _mm_insert_epi64(mask_vec, (mask[i] ? -1LL : 0LL), 0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmp7ew6brig.cpp:51:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   51 |         dst_vec = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpufpdhlp2.cpp:53:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i result_vec = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjamuz5jo.cpp:48:20: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   48 |         mask_vec = _mm_insert_epi32(mask_vec, mask_int & 2 ? -1 : 0, 2);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpjamuz5jo.cpp:49:20: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   49 |         mask_vec = _mm_insert_epi32(mask_vec, mask_int & 1 ? -1 : 0, 0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpjamuz5jo.cpp:51:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   51 |         dst_vec = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu6x9evmx.cpp:48:20: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   48 |         mask_vec = _mm_insert_epi32(mask_vec, mask_int & 2 ? -1 : 0, 2);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpu6x9evmx.cpp:49:20: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   49 |         mask_vec = _mm_insert_epi32(mask_vec, mask_int & 1 ? -1 : 0, 0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpu6x9evmx.cpp:51:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   51 |         dst_vec = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp23q38gk3.cpp:50:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i scaled_vec = _mm_mullo_epi32(src_vec, scale_vec);\n      |                              ^\n[REDACTED]/tmp23q38gk3.cpp:55:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i tmp1_tmp2 = _mm_mullo_epi32(tmp1, tmp2);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9tqkymq5.cpp:58:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |         __m128i result_vec = _mm_div_epi32(add_scaled_mul, seven_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1qqm4j2w.cpp:59:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   59 |         __m128i result_vec = _mm_div_epi32(sum_vec, seven_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp02nmrt50.cpp:59:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   59 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr710_qi4.cpp:50:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i scaled_vec = _mm_mullo_epi32(src_vec, scale_vec);\n      |                              ^\n[REDACTED]/tmpr710_qi4.cpp:55:33: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i tmp1_mul_tmp2 = _mm_mullo_epi32(tmp1, tmp2);\n      |                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2bw31u43.cpp:42:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128d result = _mm_blendv_pd(data, scaled_data, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpum16ox62.cpp:42:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128d result = _mm_blendv_pd(data, scaled_data, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_s2hnhbt.cpp:57:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   57 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3uvwwh7v.cpp:57:34: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   57 |             __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0wrr2wej.cpp:42:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128d result = _mm_blendv_pd(data, scaled_data, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkepmsuog.cpp:54:30: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   54 |         __m128i result_vec = _mm_srai_epi64(sum_vec, 1);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa7xdomnk.cpp:54:31: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   54 |         __m128i shifted_vec = _mm_srai_epi64(sum_vec, 1);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk9h7ggb0.cpp:54:31: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   54 |         __m128i shifted_vec = _mm_srai_epi64(sum_vec, 1);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp74uetosh.cpp:54:30: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   54 |         __m128i result_vec = _mm_srai_epi64(sum_vec, 1);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwrbsix98.cpp:54:31: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   54 |         __m128i shifted_vec = _mm_srai_epi64(sum_vec, 1);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7udgebvz.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb6xuj5xx.cpp:37:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   37 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjwjhdj3t.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk8zbaog_.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw1mgzvuw.cpp:38:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   38 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n[REDACTED]/tmpw1mgzvuw.cpp:43:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |             min_val = _mm_min_epi32(min_val, _mm_set1_epi32(src[i]));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpniks5v1k.cpp:54:28: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   54 |         __m128i uint_vec = _mm_cvtepi32_epi32(_mm_loadu_si128((const __m128i*)&src[i]));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9cngnikv.cpp:54:28: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   54 |         __m128i uint_vec = _mm_cvtepi32_epi32(_mm_loadu_si128((const __m128i*)(src + i)));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdg0mv3_9.cpp:54:28: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   54 |         __m128i uint_vec = _mm_cvtepi32_epi32(_mm_loadu_si128((const __m128i*)&src[i])); // Load as int\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1lttpopu.cpp:54:28: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   54 |         __m128i uint_vec = _mm_cvtepi32_epi32(_mm_loadu_si128((const __m128i*)(src + i)));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpae5se10h.cpp:54:28: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   54 |         __m128i uint_vec = _mm_cvtepi32_epi32(_mm_loadu_si128((const __m128i*)(src + i)));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkmn27rut.cpp:61:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   61 |             if (!_mm_testz_si128(cmp_result, cmp_result)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi142rc7i.cpp:60:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   60 |             if (!_mm_testz_si128(cmp_vec, cmp_vec)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnkp490eu.cpp:67:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   67 |         __m128i blended_vec = _mm_blendv_epi8(src2_vec, src1_vec, mask_vec);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9pq1_7c2.cpp:67:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   67 |         __m128i blended_vec = _mm_blendv_epi8(src2_vec, src1_vec, mask_vec);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbeqoqif5.cpp:65:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128i blended = _mm_blendv_epi8(src2_vec, src1_vec, mask_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3q63z44u.cpp:64:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i blended_vec = _mm_blendv_epi8(src2_vec, src1_vec, mask_vec);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw17riniu.cpp:66:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128i blended = _mm_blendv_epi8(src2_vec, src1_vec, mask_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8nmgaij3.cpp:65:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'population_count_simd' that is compiled without support for 'popcnt'\n   65 |         dst[i] = _mm_popcnt_u32(src[i]);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdlei7jxf.cpp:43:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpdlei7jxf.cpp:44:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   44 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaqwswp2t.cpp:48:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwxdvcnt4.cpp:48:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpznm84s79.cpp:48:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0rsrdat2.cpp:48:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpecxjdia7.cpp:48:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe3cjt_6i.cpp:61:58: error: cannot take the address of an rvalue of type 'int'\n   61 |         diff_abs = _mm_and_ps(diff, _mm_set1_ps(*(float*)&(int){0x7fffffff}));\n      |                                                          ^~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpe3cjt_6i.cpp:77:18: error: argument to '__builtin_ia32_roundps' must be a constant integer\n   77 |         result = _mm_round_ps(mul, rounding_mode);\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^                                           ~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_yt1stxd.cpp:72:22: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   72 |             result = _mm_round_ps(mul, _MM_FROUND_CEIL);\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_yt1stxd.cpp:76:35: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   76 |             __m128 final_result = _mm_blendv_ps(neg_one, result, mask);\n      |                                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnu03k8bi.cpp:53:43: error: use of undeclared identifier '_MM_FROUND_UP'\n   53 |         v_result = _mm_round_ps(v_result, _MM_FROUND_UP); // Round up\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpunmey6a6.cpp:47:43: error: use of undeclared identifier '_MM_FROUND_UP'\n   47 |         v_result = _mm_round_ps(v_result, _MM_FROUND_UP); // Round up\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqnf0lme9.cpp:47:43: error: use of undeclared identifier '_MM_FROUND_UP'\n   47 |         v_result = _mm_round_ps(v_result, _MM_FROUND_UP);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7helz3fz.cpp:64:72: error: too many arguments provided to function-like macro invocation\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4764:9: note: macro '_MM_SHUFFLE2' defined here\n 4764 | #define _MM_SHUFFLE2(x, y) (((x) << 1) | (y))\n      |         ^\n[REDACTED]/tmp7helz3fz.cpp:64:53: error: use of undeclared identifier '_MM_SHUFFLE2'\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                     ^\n[REDACTED]/tmp7helz3fz.cpp:70:74: error: too many arguments provided to function-like macro invocation\n   70 |                         a_next = _mm_shuffle_pd(a, a, _MM_SHUFFLE2(1, 1, 1, 1));\n      |                                                                          ^\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4764:9: note: macro '_MM_SHUFFLE2' defined here\n 4764 | #define _MM_SHUFFLE2(x, y) (((x) << 1) | (y))\n      |         ^\n[REDACTED]/tmp7helz3fz.cpp:70:55: error: use of undeclared identifier '_MM_SHUFFLE2'\n   70 |                         a_next = _mm_shuffle_pd(a, a, _MM_SHUFFLE2(1, 1, 1, 1));\n      |                                                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyju9elz8.cpp:64:72: error: too many arguments provided to function-like macro invocation\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4764:9: note: macro '_MM_SHUFFLE2' defined here\n 4764 | #define _MM_SHUFFLE2(x, y) (((x) << 1) | (y))\n      |         ^\n[REDACTED]/tmpyju9elz8.cpp:64:53: error: use of undeclared identifier '_MM_SHUFFLE2'\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiuh3mg2l.cpp:64:72: error: too many arguments provided to function-like macro invocation\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4764:9: note: macro '_MM_SHUFFLE2' defined here\n 4764 | #define _MM_SHUFFLE2(x, y) (((x) << 1) | (y))\n      |         ^\n[REDACTED]/tmpiuh3mg2l.cpp:64:53: error: use of undeclared identifier '_MM_SHUFFLE2'\n   64 |                 __m128d shuf = _mm_shuffle_pd(b, b, _MM_SHUFFLE2(0, 0, 0, 0));\n      |                                                     ^\n[REDACTED]/tmpiuh3mg2l.cpp:68:74: error: too many arguments provided to function-like macro invocation\n   68 |                     __m128d a2 = _mm_shuffle_pd(a, a, _MM_SHUFFLE2(1, 1, 1, 1));\n      |                                                                          ^\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4764:9: note: macro '_MM_SHUFFLE2' defined here\n 4764 | #define _MM_SHUFFLE2(x, y) (((x) << 1) | (y))\n      |         ^\n[REDACTED]/tmpiuh3mg2l.cpp:68:55: error: use of undeclared identifier '_MM_SHUFFLE2'\n   68 |                     __m128d a2 = _mm_shuffle_pd(a, a, _MM_SHUFFLE2(1, 1, 1, 1));\n      |                                                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_25_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_25_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_25_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpedwntdm7.cpp:72:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   72 |             row_values = _mm_round_ps(row_values, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6zexp9od.cpp:64:26: error: use of undeclared identifier '_mm_fabs_ps'; did you mean '_mm_abs_ph'?\n   64 |         __m128 abs_val = _mm_fabs_ps(diff);\n      |                          ^~~~~~~~~~~\n      |                          _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpomou2hve.cpp:65:26: error: use of undeclared identifier '_mm_cvttps_ps'\n   65 |         __m128 rounded = _mm_cvttps_ps(_mm_cvttps_epi32(abs_val)); // Truncate towards zero\n      |                          ^\n[REDACTED]/tmpomou2hve.cpp:64:55: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   64 |         __m128 abs_val = _mm_and_ps(diff, _mm_set1_ps(0x7fffffff)); // Absolute value\n      |                                           ~~~~~~~~~~~ ^~~~~~~~~~\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnpgn2f6d.cpp:66:26: error: use of undeclared identifier '_mm_cvttps_ps'\n   66 |         __m128 rounded = _mm_cvttps_ps(diff); // Truncate towards zero\n      |                          ^\n[REDACTED]/tmpnpgn2f6d.cpp:64:55: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   64 |         __m128 abs_val = _mm_and_ps(diff, _mm_set1_ps(0x7FFFFFFF)); // abs(x)\n      |                                           ~~~~~~~~~~~ ^~~~~~~~~~\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpukffjvw4.cpp:64:26: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   64 |         __m128 abs_val = _mm_abs_ps(sub_result);\n      |                          ^~~~~~~~~~\n      |                          _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg6lyx3z7.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpg6lyx3z7.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6s11n_re.cpp:49:22: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   49 |                 if (!_mm_testz_si128(gt, gt)) {\n      |                      ^\n[REDACTED]/tmp6s11n_re.cpp:54:22: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   54 |                 if (!_mm_testz_si128(lt, lt)) {\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8j190n7s.cpp:49:22: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   49 |                 if (!_mm_testz_si128(gt, gt)) {\n      |                      ^\n[REDACTED]/tmp8j190n7s.cpp:54:22: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   54 |                 if (!_mm_testz_si128(lt, lt)) {\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbltjvwr9.cpp:52:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   52 |         __m128i div_vec = _mm_div_epi16(src_vec, base_signed_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9yclhopr.cpp:52:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   52 |         __m128i div_vec = _mm_div_epi16(src_vec, base_signed);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5xqdy7jq.cpp:52:32: error: use of undeclared identifier '_mm_divhi_epu16'; did you mean '_mm_mulhi_epu16'?\n   52 |         __m128i quotient_vec = _mm_divhi_epu16(abs_src_vec, base_vec);\n      |                                ^~~~~~~~~~~~~~~\n      |                                _mm_mulhi_epu16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2354:46: note: '_mm_mulhi_epu16' declared here\n 2354 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_mulhi_epu16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplfpazpb6.cpp:52:32: error: use of undeclared identifier '_mm_divhi_epu16'; did you mean '_mm_mulhi_epu16'?\n   52 |         __m128i quotient_vec = _mm_divhi_epu16(abs_src_vec, base_vec);\n      |                                ^~~~~~~~~~~~~~~\n      |                                _mm_mulhi_epu16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2354:46: note: '_mm_mulhi_epu16' declared here\n 2354 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_mulhi_epu16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdp9xs2fq.cpp:52:32: error: use of undeclared identifier '_mm_divhi_epi16'; did you mean '_mm_mulhi_epi16'?\n   52 |         __m128i quotient_vec = _mm_divhi_epi16(src_vec, base_vec);\n      |                                ^~~~~~~~~~~~~~~\n      |                                _mm_mulhi_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2335:46: note: '_mm_mulhi_epi16' declared here\n 2335 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_mulhi_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxth389qx.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd0f95tf8.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv6t0bpyl.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4spq4to5.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(equal_mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9todficl.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg0qz9y54.cpp:50:27: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   50 |         __m128i vec_mul = _mm_mullo_epi64(vec_a, vec_x);\n      |                           ^\n[REDACTED]/tmpg0qz9y54.cpp:52:24: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   52 |         __m128i mask = _mm_srai_epi64(vec_mul, 63);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw2hgpk8o.cpp:50:27: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   50 |         __m128i vec_mul = _mm_mullo_epi64(vec_a, vec_x);\n      |                           ^\n[REDACTED]/tmpw2hgpk8o.cpp:52:24: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   52 |         __m128i mask = _mm_srai_epi64(vec_mul, 63);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphkpf3wrm.cpp:50:30: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   50 |         __m128i vec_result = _mm_mullo_epi64(vec_a, vec_x);\n      |                              ^\n[REDACTED]/tmphkpf3wrm.cpp:53:29: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   53 |         __m128i sign_mask = _mm_srai_epi64(vec_result, 63);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc_d2_5qu.cpp:50:30: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   50 |         __m128i vec_result = _mm_mullo_epi64(vec_a, vec_x);\n      |                              ^\n[REDACTED]/tmpc_d2_5qu.cpp:53:29: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   53 |         __m128i sign_mask = _mm_srai_epi64(vec_result, 63);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq8ppu0hl.cpp:50:30: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   50 |         __m128i vec_result = _mm_mullo_epi64(vec_a, vec_x);\n      |                              ^\n[REDACTED]/tmpq8ppu0hl.cpp:53:29: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   53 |         __m128i sign_mask = _mm_srai_epi64(vec_result, 63);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbc4isy_r.cpp:44:1: error: unknown type name 'The'\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      | ^\n[REDACTED]/tmpbc4isy_r.cpp:44:16: error: expected ';' after top level declarator\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      |                ^\n      |                ;\n[REDACTED]/tmpbc4isy_r.cpp:96:31: error: use of undeclared identifier 'min_max_pair_simd'; did you mean 'min_max_pair'?\n   96 |         MinMaxPair res_simd = min_max_pair_simd(src.data(), length);\n      |                               ^~~~~~~~~~~~~~~~~\n      |                               min_max_pair\n[REDACTED]/tmpbc4isy_r.cpp:25:12: note: 'min_max_pair' declared here\n   25 | MinMaxPair min_max_pair(const int16_t* vec, size_t length) {\n      |            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm7__xzgh.cpp:44:1: error: unknown type name 'The'\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      | ^\n[REDACTED]/tmpm7__xzgh.cpp:44:16: error: expected ';' after top level declarator\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      |                ^\n      |                ;\n[REDACTED]/tmpm7__xzgh.cpp:109:31: error: use of undeclared identifier 'min_max_pair_simd'; did you mean 'min_max_pair'?\n  109 |         MinMaxPair res_simd = min_max_pair_simd(src.data(), length);\n      |                               ^~~~~~~~~~~~~~~~~\n      |                               min_max_pair\n[REDACTED]/tmpm7__xzgh.cpp:25:12: note: 'min_max_pair' declared here\n   25 | MinMaxPair min_max_pair(const int16_t* vec, size_t length) {\n      |            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzj8ycndr.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpzj8ycndr.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9wnkpry5.cpp:44:1: error: unknown type name 'The'\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      | ^\n[REDACTED]/tmp9wnkpry5.cpp:44:16: error: expected ';' after top level declarator\n   44 | The requirement is to implement the function with SSE/SSE2 (Streaming SIMD Extensions) intrinsics for parallelism.\n      |                ^\n      |                ;\n[REDACTED]/tmp9wnkpry5.cpp:109:31: error: use of undeclared identifier 'min_max_pair_simd'; did you mean 'min_max_pair'?\n  109 |         MinMaxPair res_simd = min_max_pair_simd(src.data(), length);\n      |                               ^~~~~~~~~~~~~~~~~\n      |                               min_max_pair\n[REDACTED]/tmp9wnkpry5.cpp:25:12: note: 'min_max_pair' declared here\n   25 | MinMaxPair min_max_pair(const int16_t* vec, size_t length) {\n      |            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr4h_f6_a.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpr4h_f6_a.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5l78z85o.cpp:27:27: warning: absolute value function 'fabsf' given an argument of type 'double' but has parameter of type 'float' which may cause truncation of value [-Wabsolute-value]\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^\n[REDACTED]/tmp5l78z85o.cpp:27:27: note: use function 'std::abs' instead\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^~~~~\n      |                           std::abs\n[REDACTED]/tmp5l78z85o.cpp:48:49: error: use of undeclared identifier '_mm_neg_pd'\n   48 |             __m128d abs_diff = _mm_max_pd(diff, _mm_neg_pd(diff));\n      |                                                 ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpumuqgsav.cpp:27:27: warning: absolute value function 'fabsf' given an argument of type 'double' but has parameter of type 'float' which may cause truncation of value [-Wabsolute-value]\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^\n[REDACTED]/tmpumuqgsav.cpp:27:27: note: use function 'std::abs' instead\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^~~~~\n      |                           std::abs\n[REDACTED]/tmpumuqgsav.cpp:56:53: error: use of undeclared identifier '_mm_neg_pd'\n   56 |             __m128d abs_diff_0 = _mm_max_pd(diff_0, _mm_neg_pd(diff_0));\n      |                                                     ^\n[REDACTED]/tmpumuqgsav.cpp:57:53: error: use of undeclared identifier '_mm_neg_pd'\n   57 |             __m128d abs_diff_1 = _mm_max_pd(diff_1, _mm_neg_pd(diff_1));\n      |                                                     ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbqy2zjt1.cpp:40:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d cmp_result = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp41r0_eaj.cpp:40:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d comparison = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnn1i90bk.cpp:61:46: error: use of undeclared identifier '_mm_sad_epu16'\n   61 |         sum_sq_lo = _mm_add_epi32(sum_sq_lo, _mm_sad_epu16(a_sq_lo, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpnn1i90bk.cpp:62:46: error: use of undeclared identifier '_mm_sad_epu16'\n   62 |         sum_sq_hi = _mm_add_epi32(sum_sq_hi, _mm_sad_epu16(a_sq_hi, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpnn1i90bk.cpp:63:50: error: use of undeclared identifier '_mm_sad_epu16'\n   63 |         sum_prod_lo = _mm_add_epi32(sum_prod_lo, _mm_sad_epu16(prod_lo, _mm_setzero_si128()));\n      |                                                  ^\n[REDACTED]/tmpnn1i90bk.cpp:64:50: error: use of undeclared identifier '_mm_sad_epu16'\n   64 |         sum_prod_hi = _mm_add_epi32(sum_prod_hi, _mm_sad_epu16(prod_hi, _mm_setzero_si128()));\n      |                                                  ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfe1q50_n.cpp:61:46: error: use of undeclared identifier '_mm_sad_epu16'\n   61 |         sum_sq_lo = _mm_add_epi32(sum_sq_lo, _mm_sad_epu16(a_sq_lo, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpfe1q50_n.cpp:62:46: error: use of undeclared identifier '_mm_sad_epu16'\n   62 |         sum_sq_hi = _mm_add_epi32(sum_sq_hi, _mm_sad_epu16(a_sq_hi, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpfe1q50_n.cpp:63:50: error: use of undeclared identifier '_mm_sad_epu16'\n   63 |         sum_prod_lo = _mm_add_epi32(sum_prod_lo, _mm_sad_epu16(prod_lo, _mm_setzero_si128()));\n      |                                                  ^\n[REDACTED]/tmpfe1q50_n.cpp:64:50: error: use of undeclared identifier '_mm_sad_epu16'\n   64 |         sum_prod_hi = _mm_add_epi32(sum_prod_hi, _mm_sad_epu16(prod_hi, _mm_setzero_si128()));\n      |                                                  ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp28h0_p1_.cpp:61:46: error: use of undeclared identifier '_mm_sad_epu16'\n   61 |         sum_sq_lo = _mm_add_epi32(sum_sq_lo, _mm_sad_epu16(a_sq_lo, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmp28h0_p1_.cpp:62:46: error: use of undeclared identifier '_mm_sad_epu16'\n   62 |         sum_sq_hi = _mm_add_epi32(sum_sq_hi, _mm_sad_epu16(a_sq_hi, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmp28h0_p1_.cpp:63:50: error: use of undeclared identifier '_mm_sad_epu16'\n   63 |         sum_prod_lo = _mm_add_epi32(sum_prod_lo, _mm_sad_epu16(prod_lo, _mm_setzero_si128()));\n      |                                                  ^\n[REDACTED]/tmp28h0_p1_.cpp:64:50: error: use of undeclared identifier '_mm_sad_epu16'\n   64 |         sum_prod_hi = _mm_add_epi32(sum_prod_hi, _mm_sad_epu16(prod_hi, _mm_setzero_si128()));\n      |                                                  ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpku5ndegx.cpp:61:46: error: use of undeclared identifier '_mm_sad_epu16'\n   61 |         sum_sq_lo = _mm_add_epi32(sum_sq_lo, _mm_sad_epu16(a_sq_lo, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpku5ndegx.cpp:62:46: error: use of undeclared identifier '_mm_sad_epu16'\n   62 |         sum_sq_hi = _mm_add_epi32(sum_sq_hi, _mm_sad_epu16(a_sq_hi, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpku5ndegx.cpp:63:50: error: use of undeclared identifier '_mm_sad_epu16'\n   63 |         sum_prod_lo = _mm_add_epi32(sum_prod_lo, _mm_sad_epu16(prod_lo, _mm_setzero_si128()));\n      |                                                  ^\n[REDACTED]/tmpku5ndegx.cpp:64:50: error: use of undeclared identifier '_mm_sad_epu16'\n   64 |         sum_prod_hi = _mm_add_epi32(sum_prod_hi, _mm_sad_epu16(prod_hi, _mm_setzero_si128()));\n      |                                                  ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpegirg537.cpp:61:46: error: use of undeclared identifier '_mm_sad_epu16'\n   61 |         sum_sq_lo = _mm_add_epi32(sum_sq_lo, _mm_sad_epu16(a_sq_lo, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpegirg537.cpp:62:46: error: use of undeclared identifier '_mm_sad_epu16'\n   62 |         sum_sq_hi = _mm_add_epi32(sum_sq_hi, _mm_sad_epu16(a_sq_hi, _mm_setzero_si128()));\n      |                                              ^\n[REDACTED]/tmpegirg537.cpp:63:50: error: use of undeclared identifier '_mm_sad_epu16'\n   63 |         sum_prod_lo = _mm_add_epi32(sum_prod_lo, _mm_sad_epu16(prod_lo, _mm_setzero_si128()));\n      |                                                  ^\n[REDACTED]/tmpegirg537.cpp:64:50: error: use of undeclared identifier '_mm_sad_epu16'\n   64 |         sum_prod_hi = _mm_add_epi32(sum_prod_hi, _mm_sad_epu16(prod_hi, _mm_setzero_si128()));\n      |                                                  ^\n4 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptdkt6e9y.cpp:71:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   71 |         result = _mm_blendv_epi8(result, one, both_pos);\n      |                  ^\n[REDACTED]/tmptdkt6e9y.cpp:72:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   72 |         result = _mm_blendv_epi8(result, neg_one, both_neg);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoljl1tpx.cpp:71:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   71 |         result = _mm_blendv_epi8(result, pos_val, both_pos_mask);\n      |                  ^\n[REDACTED]/tmpoljl1tpx.cpp:72:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   72 |         result = _mm_blendv_epi8(result, neg_val, both_neg_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx2ma_i3q.cpp:71:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   71 |         result = _mm_blendv_epi8(result, pos_val, both_pos_mask);\n      |                  ^\n[REDACTED]/tmpx2ma_i3q.cpp:72:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   72 |         result = _mm_blendv_epi8(result, neg_val, both_neg_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy02_sm33.cpp:71:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   71 |         result = _mm_blendv_epi8(result, pos_ones, both_pos_mask);\n      |                  ^\n[REDACTED]/tmpy02_sm33.cpp:72:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   72 |         result = _mm_blendv_epi8(result, neg_ones, both_neg_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwxilm4zr.cpp:71:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   71 |         result = _mm_blendv_epi8(result, ones, both_pos_mask);\n      |                  ^\n[REDACTED]/tmpwxilm4zr.cpp:72:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   72 |         result = _mm_blendv_epi8(result, neg_ones, both_neg_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp2hdol28.cpp:76:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   76 |             result = _mm_blendv_ps(result, a, _mm_xor_ps(mask_a, _mm_set1_ps(-0.0f)));\n      |                      ^\n[REDACTED]/tmpp2hdol28.cpp:85:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   85 |             result = _mm_blendv_ps(result, b, _mm_xor_ps(mask_b, _mm_set1_ps(-0.0f)));\n      |                      ^\n[REDACTED]/tmpp2hdol28.cpp:92:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   92 |             result = _mm_blendv_ps(result, c, _mm_xor_ps(mask_c, _mm_set1_ps(-0.0f)));\n      |                      ^\n[REDACTED]/tmpp2hdol28.cpp:99:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   99 |             result = _mm_blendv_ps(result, d, _mm_xor_ps(mask_d, _mm_set1_ps(-0.0f)));\n      |                      ^\n4 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprs5p8hzf.cpp:75:27: error: argument to '__builtin_ia32_blendps' must be a constant integer\n   75 |         __m128 temp_and = _mm_blend_ps(d, a, mask_and);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n  414 |                                   (int)(M)))\n      |                                   ~~~~~~~~\n[REDACTED]/tmprs5p8hzf.cpp:79:31: error: argument to '__builtin_ia32_blendps' must be a constant integer\n   79 |         __m128 temp_and_not = _mm_blend_ps(temp_and, b, mask_and_not);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n  414 |                                   (int)(M)))\n      |                                   ~~~~~~~~\n[REDACTED]/tmprs5p8hzf.cpp:83:31: error: argument to '__builtin_ia32_blendps' must be a constant integer\n   83 |         __m128 temp_not_and = _mm_blend_ps(temp_and_not, c, mask_not_and);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n  414 |                                   (int)(M)))\n      |                                   ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0nx4cfxa.cpp:76:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   76 |             result = _mm_blendv_ps(result, a, mask_a);\n      |                      ^\n[REDACTED]/tmp0nx4cfxa.cpp:84:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   84 |             result = _mm_blendv_ps(result, b, mask_b);\n      |                      ^\n[REDACTED]/tmp0nx4cfxa.cpp:90:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   90 |             result = _mm_blendv_ps(result, c, mask_c);\n      |                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf2w3cacl.cpp:59:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   59 |         counts[0] = _mm_popcnt_u32(_mm_cvtsi128_si32(data));\n      |                     ^\n[REDACTED]/tmpf2w3cacl.cpp:60:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   60 |         counts[1] = _mm_popcnt_u32(_mm_cvtsi128_si32(_mm_srli_si128(data, 4)));\n      |                     ^\n[REDACTED]/tmpf2w3cacl.cpp:61:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   61 |         counts[2] = _mm_popcnt_u32(_mm_cvtsi128_si32(_mm_srli_si128(data, 8)));\n      |                     ^\n[REDACTED]/tmpf2w3cacl.cpp:62:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   62 |         counts[3] = _mm_popcnt_u32(_mm_cvtsi128_si32(_mm_srli_si128(data, 12)));\n      |                     ^\n[REDACTED]/tmpf2w3cacl.cpp:73:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   73 |         out[i] = _mm_popcnt_u32(A[i]);\n      |                  ^\n5 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk4ssk6v3.cpp:58:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i remainder = _mm_sub_epi32(a, _mm_mullo_epi32(_mm_div_epi32(a, divisor), divisor));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgt1kvakr.cpp:58:33: error: use of undeclared identifier '_mm_divrem_epi32'\n   58 |             __m128i quotients = _mm_divrem_epi32(a, divisor).rem;\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_t_b6q9_.cpp:58:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i remainder = _mm_sub_epi32(a, _mm_mullo_epi32(_mm_div_epi32(a, divisor), divisor));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv_1hgk4e.cpp:58:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i remainder = _mm_sub_epi32(a, _mm_mullo_epi32(_mm_div_epi32(a, divisor), divisor));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_sblmt68.cpp:58:66: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i remainder = _mm_sub_epi32(a, _mm_mullo_epi32(_mm_div_epi32(a, divisor), divisor));\n      |                                                                  ^~~~~~~~~~~~~\n      |                                                                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprjhjn38m.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmprjhjn38m.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmprjhjn38m.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmprjhjn38m.cpp:71:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   71 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, condition);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpspur06li.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpspur06li.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpspur06li.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpspur06li.cpp:64:25: error: no matching function for call to '_mm_srli_epi32'\n   64 |         __m128i temp1 = _mm_srli_epi32(src_vec, _mm_cvtsi32_si128(rotate_bits));\n      |                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpspur06li.cpp:65:25: error: no matching function for call to '_mm_slli_epi32'\n   65 |         __m128i temp2 = _mm_slli_epi32(src_vec, _mm_cvtsi32_si128(32 - rotate_bits));\n      |                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphvr7z7gr.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmphvr7z7gr.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmphvr7z7gr.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmphvr7z7gr.cpp:70:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   70 |         __m128i result_vec = _mm_blendv_epi8(not_src_vec, rotated_vec, condition);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgrvwe01c.cpp:66:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128 result = _mm_blendv_ps(zero, one, cmp_gt); // If A - B > abs(epsilon), result = 1\n      |                         ^\n[REDACTED]/tmpgrvwe01c.cpp:67:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   67 |         result = _mm_blendv_ps(result, neg_one, cmp_lt); // If A - B < -abs(epsilon), result = -1\n      |                  ^\n[REDACTED]/tmpgrvwe01c.cpp:68:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   68 |         result = _mm_blendv_ps(result, zero, cmp_eq); // If abs(A - B) <= abs(epsilon), result = 0\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgu05gzxk.cpp:40:52: error: use of undeclared identifier '_mm_neg_ps'\n   40 |         __m128 cmp_lt_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmporky21ua.cpp:38:31: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   38 |         __m128 abs_diff_vec = _mm_abs_ps(diff_vec);\n      |                               ^~~~~~~~~~\n      |                               _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmporky21ua.cpp:41:50: error: use of undeclared identifier '_mm_neg_ps'\n   41 |         __m128 less_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpegvilwd1.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpegvilwd1.cpp:81:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   81 |         if (val > std::numeric_limits<int32_t>::max()) {\n      |                 ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpegvilwd1.cpp:66:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   66 |         float_vector = _mm_blendv_ps(float_vector, max_int, greater_than_max);\n      |                        ^\n[REDACTED]/tmpegvilwd1.cpp:69:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   69 |         float_vector = _mm_blendv_ps(float_vector, min_int, less_than_min);\n      |                        ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgq7x2uno.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpgq7x2uno.cpp:81:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   81 |         if (val > std::numeric_limits<int32_t>::max()) {\n      |                 ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpgq7x2uno.cpp:66:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   66 |         float_vector = _mm_blendv_ps(float_vector, max_int, greater_than_max);\n      |                        ^\n[REDACTED]/tmpgq7x2uno.cpp:69:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   69 |         float_vector = _mm_blendv_ps(float_vector, min_int, less_than_min);\n      |                        ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6niofkqg.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp6niofkqg.cpp:51:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_result = _mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp11mv669m.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp11mv669m.cpp:51:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_result = _mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp19ea2bvs.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp19ea2bvs.cpp:51:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_result = _mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpodo0qw2g.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpodo0qw2g.cpp:51:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_result = _mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxwuszwmg.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpxwuszwmg.cpp:51:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded_result = _mm_round_ps(div_result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy4oyr4r3.cpp:58:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   58 |         b = _mm_blendv_ps(b, max_float, cmp_gt);\n      |             ^\n[REDACTED]/tmpy4oyr4r3.cpp:59:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   59 |         b = _mm_blendv_ps(b, min_float, cmp_lt);\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: malloc(): invalid size (unsorted)\n"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpogb9k03e.cpp:43:23: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i low = _mm_cvtepi16_epi32(a);\n      |                       ^\n[REDACTED]/tmpogb9k03e.cpp:44:24: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i high = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnlit_jvz.cpp:43:23: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i low = _mm_cvtepi16_epi32(a);\n      |                       ^\n[REDACTED]/tmpnlit_jvz.cpp:44:24: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i high = _mm_cvtepi16_epi32(_mm_srli_si128(a, 8));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdh8c3kt3.cpp:69:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   69 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+1], 1);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpdh8c3kt3.cpp:70:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   70 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+2], 2);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpdh8c3kt3.cpp:71:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   71 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+3], 3);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpdh8c3kt3.cpp:81:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   81 |         result_vec = _mm_blendv_ps(result_vec, normalized_vec, cmp_vec);\n      |                      ^\n4 errors generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9txyrhcl.cpp:78:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   78 |         result_vec = _mm_blendv_ps(result_vec, clamped_vec, cmp_vec);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpssel7zep.cpp:80:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   80 |         result_vec = _mm_blendv_ps(result_vec, normalized_vec, mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeyuagdo8.cpp:78:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   78 |         result_vec = _mm_blendv_ps(result_vec, clamped_vec, cmp_vec);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj8ee0e_t.cpp:69:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   69 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+1], 1);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpj8ee0e_t.cpp:70:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   70 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+2], 2);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpj8ee0e_t.cpp:71:27: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   71 |         control_vec_int = _mm_insert_epi32(control_vec_int, control[i+3], 3);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpj8ee0e_t.cpp:83:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   83 |         result_vec = _mm_blendv_ps(result_vec, normalized_vec, cmp_vec);\n      |                      ^\n4 errors generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmwe7kw5x.cpp:55:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i dst_vec1 = _mm_cvtepu32_epi64(src_vec);\n      |                            ^\n[REDACTED]/tmpmwe7kw5x.cpp:57:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i dst_vec2 = _mm_cvtepu32_epi64(src_vec_shifted);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb1n2xj9z.cpp:51:27: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i dst_low = _mm_cvtepu32_epi64(src_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwryq9rld.cpp:56:24: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   56 |             diff_vec = _mm_abs_pd(diff_vec);\n      |                        ^~~~~~~~~~\n      |                        _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_jso4_x5.cpp:56:24: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   56 |             diff_vec = _mm_abs_pd(diff_vec);\n      |                        ^~~~~~~~~~\n      |                        _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3du9niku.cpp:54:24: error: use of undeclared identifier '_mm_fabs_pd'; did you mean '_mm_abs_ph'?\n   54 |             diff_vec = _mm_fabs_pd(diff_vec);\n      |                        ^~~~~~~~~~~\n      |                        _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0l_t_y18.cpp:56:24: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   56 |             diff_vec = _mm_abs_pd(diff_vec);\n      |                        ^~~~~~~~~~\n      |                        _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9mpnuhsi.cpp:57:36: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   57 |             __m128d abs_diff_vec = _mm_abs_pd(diff_vec);\n      |                                    ^~~~~~~~~~\n      |                                    _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_63_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_63_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpncz4_yzc.cpp:50:31: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |             __m128i sum_low = _mm_cvtepi16_epi32(vec);\n      |                               ^\n[REDACTED]/tmpncz4_yzc.cpp:51:32: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |             __m128i sum_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprc8apzb0.cpp:50:30: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   50 |             __m128i vec_lo = _mm_cvtepi16_epi32(vec);\n      |                              ^\n[REDACTED]/tmprc8apzb0.cpp:51:30: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |             __m128i vec_hi = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpna08p6w0.cpp:59:31: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   59 |             __m128i sum_vec = _mm_cvtepi16_epi32(vec);\n      |                               ^\n[REDACTED]/tmpna08p6w0.cpp:60:34: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   60 |             __m128i sum_vec_hi = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk594s777.cpp:60:31: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   60 |             __m128i sum_vec = _mm_cvtepi16_epi32(vec);\n      |                               ^\n[REDACTED]/tmpk594s777.cpp:61:36: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   61 |             __m128i sum_vec_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpso8syojl.cpp:60:31: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   60 |             __m128i sum_vec = _mm_cvtepi16_epi32(vec);\n      |                               ^\n[REDACTED]/tmpso8syojl.cpp:61:36: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   61 |             __m128i sum_vec_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp68nqg9y3.cpp:63:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i result = _mm_blendv_epi8(shift, add_26, cmp_a);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdoexnvpa.cpp:64:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i blend = _mm_blendv_epi8(shifted, add_26, cmp);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv1fkk5nm.cpp:68:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   68 |         __m128i result = _mm_blendv_epi8(temp, add_result, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwlbjv8dk.cpp:55:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   55 |         __m128i mask = _mm_movemask_epi8(cmp);\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjb19olav.cpp:55:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   55 |         __m128i mask = _mm_movemask_epi8(cmp);\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkz2b4xcu.cpp:86:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   86 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfpiykty9.cpp:64:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i swapped_chars = _mm_blendv_epi8(chars, upper_lower, is_letter_mask);\n      |                                 ^\n[REDACTED]/tmpfpiykty9.cpp:78:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   78 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('c'), a_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:79:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   79 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('g'), e_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:80:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   80 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('k'), i_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:81:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   81 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('q'), o_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:82:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   82 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('w'), u_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:83:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   83 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('C'), A_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:84:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   84 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('G'), E_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:85:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   85 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('K'), I_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:86:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   86 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('Q'), O_mask);\n      |                         ^\n[REDACTED]/tmpfpiykty9.cpp:87:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   87 |         swapped_chars = _mm_blendv_epi8(swapped_chars, _mm_set1_epi8('W'), U_mask);\n      |                         ^\n11 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8fba6irn.cpp:67:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   67 |             if (!_mm_testz_si128(not_lower, _mm_set1_epi8(-1))) {\n      |                  ^\n[REDACTED]/tmp8fba6irn.cpp:75:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   75 |             if (!_mm_testz_si128(not_lower, _mm_set1_epi8(-1))) {\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6e4b2vu6.cpp:69:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   69 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu3bszpcl.cpp:69:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   69 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf9498ojj.cpp:69:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   69 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfuv617kt.cpp:67:19: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   67 |             vec = _mm_insert_epi64(vec, i + 1, 1);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmpfuv617kt.cpp:68:19: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   68 |             vec = _mm_insert_epi64(vec, i, 0);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpslsvyszb.cpp:80:44: error: use of undeclared identifier '_mm_rem_epu32'\n   80 |                 __m128i modded_factorial = _mm_rem_epu32(temp_factorial, mod_val);\n      |                                            ^\n[REDACTED]/tmpslsvyszb.cpp:110:24: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n  110 |     __m128i quotient = _mm_div_epu32(dividend, divisor);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqd8er73t.cpp:90:32: error: use of undeclared identifier '_mm_rem_epu32'\n   90 |             factorial_values = _mm_rem_epu32(factorial_values, mod_value);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgftzfx89.cpp:96:21: error: use of undeclared identifier '_mm_mod_epu32'\n   96 |         factorial = _mm_mod_epu32(factorial, mod_val);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpern0k50x.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpftqsivuy.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprgbh7z1t.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpavki1uwd.cpp:97:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   97 |             __m128i sub = _mm_min_epi32(water, bucket);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp40zovow2.cpp:53:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_v = _mm_abs_epi32(v); // Use absolute value to handle negative numbers correctly\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_123_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7vwlw1a7.cpp:70:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   70 |             current_signs = _mm_blendv_epi8(current_signs, _mm_set1_epi32(-1), neg_signs);\n      |                             ^\n[REDACTED]/tmp7vwlw1a7.cpp:71:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   71 |             current_signs = _mm_blendv_epi8(current_signs, _mm_set1_epi32(0), zero_signs);\n      |                             ^\n[REDACTED]/tmp7vwlw1a7.cpp:83:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   83 |             __m128i abs_data = _mm_abs_epi32(data);\n      |                                ^\n3 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwvet1542.cpp:73:37: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   73 |             __m128i current_signs = _mm_blendv_epi8(zeros, ones, signs);\n      |                                     ^\n[REDACTED]/tmpwvet1542.cpp:74:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   74 |             current_signs = _mm_blendv_epi8(current_signs, minus_ones, neg_signs);\n      |                             ^\n[REDACTED]/tmpwvet1542.cpp:76:34: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   76 |             __m128i abs_values = _mm_abs_epi32(data);\n      |                                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvqs_s651.cpp:63:25: error: always_inline function '_mm_sign_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   63 |         __m128i signs = _mm_sign_epi32(\n      |                         ^\n[REDACTED]/tmpvqs_s651.cpp:69:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   69 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6mfd47aw.cpp:70:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   70 |             current_signs = _mm_blendv_epi8(current_signs, _mm_set1_epi32(-1), neg_signs);\n      |                             ^\n[REDACTED]/tmp6mfd47aw.cpp:71:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   71 |             current_signs = _mm_blendv_epi8(current_signs, _mm_set1_epi32(0), zero_signs);\n      |                             ^\n[REDACTED]/tmp6mfd47aw.cpp:73:34: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   73 |             __m128i abs_values = _mm_abs_epi32(data);\n      |                                  ^\n[REDACTED]/tmp6mfd47aw.cpp:76:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   76 |             __m128i prod1 = _mm_mullo_epi32(sign_prod_vec, current_signs);\n      |                             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg_n4kz5w.cpp:72:10: error: no member named 'function' in namespace 'std'\n   72 |     std::function<void(int, int, std::vector<int>)> solve = \n      |     ~~~~~^\n[REDACTED]/tmpg_n4kz5w.cpp:72:27: error: expected '(' for function-style cast or type construction\n   72 |     std::function<void(int, int, std::vector<int>)> solve = \n      |                        ~~~^\n[REDACTED]/tmpg_n4kz5w.cpp:72:32: error: expected '(' for function-style cast or type construction\n   72 |     std::function<void(int, int, std::vector<int>)> solve = \n      |                             ~~~^\n[REDACTED]/tmpg_n4kz5w.cpp:72:50: error: expected '(' for function-style cast or type construction\n   72 |     std::function<void(int, int, std::vector<int>)> solve = \n      |                                  ~~~~~~~~~~~~~~~~^\n[REDACTED]/tmpg_n4kz5w.cpp:72:53: error: use of undeclared identifier 'solve'\n   72 |     std::function<void(int, int, std::vector<int>)> solve = \n      |                                                     ^\n[REDACTED]/tmpg_n4kz5w.cpp:93:17: error: use of undeclared identifier 'solve'\n   93 |                 solve(new_row, new_col, current_path);\n      |                 ^\n[REDACTED]/tmpg_n4kz5w.cpp:101:13: error: use of undeclared identifier 'solve'\n  101 |             solve(i, j, current_path);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmtywkmzn.cpp:73:10: error: no member named 'function' in namespace 'std'\n   73 |     std::function<void(int, int)> solve = \n      |     ~~~~~^\n[REDACTED]/tmpmtywkmzn.cpp:73:27: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                        ~~~^\n[REDACTED]/tmpmtywkmzn.cpp:73:32: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                             ~~~^\n[REDACTED]/tmpmtywkmzn.cpp:73:35: error: use of undeclared identifier 'solve'\n   73 |     std::function<void(int, int)> solve = \n      |                                   ^\n[REDACTED]/tmpmtywkmzn.cpp:91:21: error: use of undeclared identifier 'solve'\n   91 |                     solve(new_row, new_col);\n      |                     ^\n[REDACTED]/tmpmtywkmzn.cpp:101:13: error: use of undeclared identifier 'solve'\n  101 |             solve(i, j);\n      |             ^\n6 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp367hksju.cpp:73:10: error: no member named 'function' in namespace 'std'\n   73 |     std::function<void(int, int)> solve = \n      |     ~~~~~^\n[REDACTED]/tmp367hksju.cpp:73:27: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                        ~~~^\n[REDACTED]/tmp367hksju.cpp:73:32: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                             ~~~^\n[REDACTED]/tmp367hksju.cpp:73:35: error: use of undeclared identifier 'solve'\n   73 |     std::function<void(int, int)> solve = \n      |                                   ^\n[REDACTED]/tmp367hksju.cpp:91:21: error: use of undeclared identifier 'solve'\n   91 |                     solve(new_row, new_col);\n      |                     ^\n[REDACTED]/tmp367hksju.cpp:101:13: error: use of undeclared identifier 'solve'\n  101 |             solve(i, j);\n      |             ^\n6 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu4l7ze9l.cpp:73:10: error: no member named 'function' in namespace 'std'\n   73 |     std::function<void(int, int)> solve = \n      |     ~~~~~^\n[REDACTED]/tmpu4l7ze9l.cpp:73:27: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                        ~~~^\n[REDACTED]/tmpu4l7ze9l.cpp:73:32: error: expected '(' for function-style cast or type construction\n   73 |     std::function<void(int, int)> solve = \n      |                             ~~~^\n[REDACTED]/tmpu4l7ze9l.cpp:73:35: error: use of undeclared identifier 'solve'\n   73 |     std::function<void(int, int)> solve = \n      |                                   ^\n[REDACTED]/tmpu4l7ze9l.cpp:91:21: error: use of undeclared identifier 'solve'\n   91 |                     solve(new_row, new_col);\n      |                     ^\n[REDACTED]/tmpu4l7ze9l.cpp:102:13: error: use of undeclared identifier 'solve'\n  102 |             solve(i, j);\n      |             ^\n6 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp81dj1ab1.cpp:66:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   66 |         product = _mm_mullo_epi8(product, odd_digits);\n      |                   ^\n[REDACTED]/tmp81dj1ab1.cpp:74:26: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   74 |         final_product *= _mm_extract_epi8(product, i);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd108cqfy.cpp:53:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         __m128 rounded = _mm_ceil_ps(v);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpd108cqfy.cpp:59:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i squared = _mm_mullo_epi32(integers, integers);\n      |                           ^\n[REDACTED]/tmpd108cqfy.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:83:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:83:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:84:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:84:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:85:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:85:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:86:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:86:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpd108cqfy.cpp:87:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpd108cqfy.cpp:87:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw2u_23tn.cpp:51:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |         __m128 rounded = _mm_ceil_ps(x);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpw2u_23tn.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw2u_23tn.cpp:83:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   83 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw2u_23tn.cpp:83:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   83 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_fqilhxx.cpp:52:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |         __m128 rounded = _mm_ceil_ps(v);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_fqilhxx.cpp:58:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i squared = _mm_mullo_epi32(integers, integers);\n      |                           ^\n[REDACTED]/tmp_fqilhxx.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:83:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:83:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:84:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:84:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:85:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:85:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:86:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:86:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_fqilhxx.cpp:87:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_fqilhxx.cpp:87:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_cmtiwsl.cpp:53:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         __m128 rounded = _mm_ceil_ps(v);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_cmtiwsl.cpp:59:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i squared = _mm_mullo_epi32(integers, integers);\n      |                           ^\n[REDACTED]/tmp_cmtiwsl.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:83:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   83 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:83:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   83 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:84:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:84:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:85:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   85 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:85:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   85 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:86:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   86 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:86:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   86 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:87:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   87 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:87:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   87 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_cmtiwsl.cpp:88:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   88 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_cmtiwsl.cpp:88:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   88 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi26txca6.cpp:52:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |         __m128 rounded = _mm_ceil_ps(v);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpi26txca6.cpp:58:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i squared = _mm_mullo_epi32(integers, integers);\n      |                           ^\n[REDACTED]/tmpi26txca6.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:83:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:83:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   83 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:84:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:84:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   84 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:85:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:85:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   85 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:86:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:86:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   86 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpi26txca6.cpp:87:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpi26txca6.cpp:87:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   87 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc89khooh.cpp:72:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |             largest_neg_vec = _mm_max_epi32(largest_neg_vec, masked_neg);\n      |                               ^\n[REDACTED]/tmpc89khooh.cpp:73:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   73 |             smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, masked_pos);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc1gwo3zc.cpp:72:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |             largest_neg_vec = _mm_max_epi32(largest_neg_vec, masked_neg);\n      |                               ^\n[REDACTED]/tmpc1gwo3zc.cpp:73:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   73 |             smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, masked_pos);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzsre3ni_.cpp:68:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   68 |             largest_neg_vec = _mm_max_epi32(largest_neg_vec, negative_values);\n      |                               ^\n[REDACTED]/tmpzsre3ni_.cpp:72:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |             smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, positive_values);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3qvg05zt.cpp:72:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |             largest_neg_vec = _mm_max_epi32(largest_neg_vec, masked_neg);\n      |                               ^\n[REDACTED]/tmp3qvg05zt.cpp:73:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   73 |             smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, masked_pos);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0fp45xuf.cpp:72:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   72 |             largest_neg_vec = _mm_max_epi32(largest_neg_vec, masked_neg);\n      |                               ^\n[REDACTED]/tmp0fp45xuf.cpp:73:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   73 |             smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, masked_pos);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbbnrktrt.cpp:59:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i i_sqr_vec = _mm_mullo_epi32(i_vec, i_vec);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3w38xcqi.cpp:58:59: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |         __m128i rem1 = _mm_sub_epi32(num, _mm_mullo_epi32(_mm_div_epi32(num, i_vec), i_vec));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp3w38xcqi.cpp:64:59: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   64 |         __m128i rem2 = _mm_sub_epi32(num, _mm_mullo_epi32(_mm_div_epi32(num, i_plus_2), i_plus_2));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprszqf42j.cpp:53:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         __m128 floor_vec = _mm_floor_ps(abs_vec);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp0rilihj.cpp:52:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |         __m128 rounded = _mm_round_ps(vec, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfc_xhh1d.cpp:53:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         __m128 floor_vec = _mm_floor_ps(vec);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvizkihlv.cpp:53:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_vec = _mm_abs_epi32(diff_vec);\n      |                           ^\n[REDACTED]/tmpvizkihlv.cpp:54:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i res_vec = _mm_blendv_epi8(abs_vec, _mm_setzero_si128(), cmp_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdwmmtsi0.cpp:40:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_vec = _mm_abs_epi32(diff_vec);\n      |                           ^\n[REDACTED]/tmpdwmmtsi0.cpp:41:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i res_vec = _mm_blendv_epi8(abs_vec, _mm_setzero_si128(), cmp_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpav1auwku.cpp:44:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i res_vec = _mm_blendv_epi8(diff_vec, _mm_setzero_si128(), cmp_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjvv141lj.cpp:40:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n[REDACTED]/tmpjvv141lj.cpp:41:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i res_vec = _mm_blendv_epi8(abs_diff, _mm_setzero_si128(), cmp_eq);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm_c27sca.cpp:53:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_vec = _mm_abs_epi32(diff_vec);\n      |                           ^\n[REDACTED]/tmpm_c27sca.cpp:54:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i res_vec = _mm_blendv_epi8(abs_vec, _mm_setzero_si128(), cmp_vec);\n      |                           ^\n2 errors generated.\n"}

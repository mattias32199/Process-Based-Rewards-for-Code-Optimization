{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp013zzehj.cpp:35:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i tmp1 = _mm_sra_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_right);\n      |                                      ^\n[REDACTED]/tmp013zzehj.cpp:36:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i tmp2 = _mm_sll_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_left);\n      |                                      ^\n[REDACTED]/tmp013zzehj.cpp:38:83: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                   ^\n[REDACTED]/tmp013zzehj.cpp:38:120: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                                                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_wsyo4t5.cpp:36:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i tmp1 = _mm_sra_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_right);\n      |                                      ^\n[REDACTED]/tmp_wsyo4t5.cpp:37:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i tmp2 = _mm_sll_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_left);\n      |                                      ^\n[REDACTED]/tmp_wsyo4t5.cpp:39:83: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_cvtepi32_ps(div_by_7)));\n      |                                                                                   ^\n[REDACTED]/tmp_wsyo4t5.cpp:39:120: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_cvtepi32_ps(div_by_7)));\n      |                                                                                                                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvwof0mut.cpp:36:24: error: no matching function for call to '_mm_srai_epi32'\n   36 |         __m128i tmp1 = _mm_srai_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_right);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2853:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2853 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srai_epi32(__m128i __a,\n      |                                              ^\n 2854 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpvwof0mut.cpp:37:24: error: no matching function for call to '_mm_slli_epi32'\n   37 |         __m128i tmp2 = _mm_slli_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_left);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2_liqda5.cpp:35:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i tmp1 = _mm_sra_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_right);\n      |                                      ^\n[REDACTED]/tmp2_liqda5.cpp:36:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i tmp2 = _mm_sll_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_left);\n      |                                      ^\n[REDACTED]/tmp2_liqda5.cpp:38:83: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                   ^\n[REDACTED]/tmp2_liqda5.cpp:38:120: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                                                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpitz3wgn2.cpp:35:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i tmp1 = _mm_sra_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_right);\n      |                                      ^\n[REDACTED]/tmpitz3wgn2.cpp:36:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   36 |         __m128i tmp2 = _mm_sll_epi32(_mm_mullo_epi32(src_vec, scale_vec), shift_left);\n      |                                      ^\n[REDACTED]/tmpitz3wgn2.cpp:38:83: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                   ^\n[REDACTED]/tmpitz3wgn2.cpp:38:120: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_cvtps_epi32(_mm_div_ps(_mm_cvtepi32_ps(_mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2))), _mm_set1_ps(7.0f)));\n      |                                                                                                                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo5puc23c.cpp:31:25: error: '__builtin_ia32_gatherd_ps' needs target feature avx2\n   31 |         __m128 values = _mm_i32gather_ps(src, index, 4);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4903:12: note: expanded from macro '_mm_i32gather_ps'\n 4903 |   ((__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp99cdu9i6.cpp:31:29: error: '__builtin_ia32_gatherd_ps' needs target feature avx2\n   31 |         __m128 src_values = _mm_i32gather_ps(src, index, 4);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4903:12: note: expanded from macro '_mm_i32gather_ps'\n 4903 |   ((__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbo70r5sp.cpp:31:29: error: '__builtin_ia32_gatherd_ps' needs target feature avx2\n   31 |         __m128 src_values = _mm_i32gather_ps(src, index, 4);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4903:12: note: expanded from macro '_mm_i32gather_ps'\n 4903 |   ((__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvb6ig8mb.cpp:31:29: error: '__builtin_ia32_gatherd_ps' needs target feature avx2\n   31 |         __m128 src_values = _mm_i32gather_ps(src, index, 4);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4903:12: note: expanded from macro '_mm_i32gather_ps'\n 4903 |   ((__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \\\n      |            ^\n[REDACTED]/tmpvb6ig8mb.cpp:36:9: error: '__builtin_ia32_scattersiv4sf' needs target feature avx512vl\n   36 |         _mm_i32scatter_ps(dst, scatter_index, scatter_values, 4);\n      |         ^\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3599:5: note: expanded from macro '_mm_i32scatter_ps'\n 3599 |     __builtin_ia32_scattersiv4sf((void *)(addr), (__mmask8)-1, \\\n      |     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvmbdxrw8.cpp:31:29: error: '__builtin_ia32_gatherd_ps' needs target feature avx2\n   31 |         __m128 src_values = _mm_i32gather_ps(src, index, 4);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4903:12: note: expanded from macro '_mm_i32gather_ps'\n 4903 |   ((__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqndnwtv4.cpp:35:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128d result = _mm_blendv_pd(src_vec, _mm_mul_pd(src_vec, scale_vec), mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppfqt2i1r.cpp:35:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128d result = _mm_blendv_pd(src_vec, _mm_mul_pd(src_vec, scale_vec), mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0my0il70.cpp:35:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128d result = _mm_blendv_pd(src_vec, _mm_mul_pd(src_vec, scale_vec), mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpujc405x4.cpp:35:53: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128d scaled_values = _mm_mul_pd(src_vec, _mm_blendv_pd(_mm_set1_pd(1.0), scale_vec, cmp_result));\n      |                                                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnqnsdhqq.cpp:35:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128d result = _mm_blendv_pd(src_vec, _mm_mul_pd(src_vec, scale_vec), mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqfafu3r0.cpp:33:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpad86uque.cpp:33:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6qemn9u1.cpp:33:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0yeu9r1o.cpp:33:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppf4oz79a.cpp:38:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoeysgbvh.cpp:39:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_values = _mm_min_epi32(min_values, even_values);\n      |                      ^\n[REDACTED]/tmpoeysgbvh.cpp:43:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |     __m128i final_min_values = _mm_min_epi32(min_values, min_values_shuffled);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_e2m0pge.cpp:39:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_values = _mm_min_epi32(min_values, even_values);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfzfmjnmy.cpp:39:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_values = _mm_min_epi32(min_values, even_values);\n      |                      ^\n[REDACTED]/tmpfzfmjnmy.cpp:43:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |     __m128i final_min_values = _mm_min_epi32(min_values, min_values_permuted);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpikk_b9_y.cpp:39:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_values = _mm_min_epi32(min_values, even_values);\n      |                      ^\n[REDACTED]/tmpikk_b9_y.cpp:43:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |     __m128i final_min_values = _mm_min_epi32(min_values, min_values_permuted);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppp88lx1h.cpp:39:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_values = _mm_min_epi32(min_values, even_values);\n      |                      ^\n[REDACTED]/tmppp88lx1h.cpp:43:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |     __m128i final_min_values = _mm_min_epi32(min_values, min_values_shuffled);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmw0uz1fl.cpp:39:22: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   39 |         max_values = _mm_max_epi8(data, max_values);\n      |                      ^\n[REDACTED]/tmpmw0uz1fl.cpp:40:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_indices = _mm_blendv_epi8(max_indices, _mm_set1_epi32(i), cmp_mask);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9_2knmm3.cpp:40:22: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_values = _mm_max_epi8(max_values, current_values);\n      |                      ^\n[REDACTED]/tmp9_2knmm3.cpp:41:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         max_indices = _mm_blendv_epi8(max_indices, _mm_set1_epi8(i), cmp_mask);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7j1jtn0f.cpp:39:22: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   39 |         max_values = _mm_max_epi8(data, max_values);\n      |                      ^\n[REDACTED]/tmp7j1jtn0f.cpp:40:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_indices = _mm_blendv_epi8(max_indices, _mm_set1_epi32(i), cmp_mask);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpber5d8l7.cpp:40:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_val = _mm_max_epi8(chunk, max_val);\n      |                   ^\n[REDACTED]/tmpber5d8l7.cpp:41:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         max_idx = _mm_blendv_epi8(max_idx, _mm_set1_epi8(i), cmp_mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppwska5mo.cpp:40:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_val = _mm_max_epi8(chunk, max_val);\n      |                   ^\n[REDACTED]/tmppwska5mo.cpp:41:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         max_idx = _mm_blendv_epi8(max_idx, _mm_set1_epi8(i), cmp);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaohmaypg.cpp:40:34: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i blended_values = _mm_blendv_epi8(src2_values, src1_values, blend_mask);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptrrfoe3y.cpp:41:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i blend_result = _mm_blendv_epi8(src2_val, src1_val, cmp_result);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ugiu1z8.cpp:30:21: error: no matching function for call to '_mm_setr_epi32'\n   30 |         xmm_index = _mm_setr_epi32(i, i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7);\n      |                     ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptoywat1q.cpp:34:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i xmm_dst = _mm_blendv_epi8(xmm_src2, xmm_src1, _mm_cmpeq_epi16(xmm_result, _mm_setzero_si128()));\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph5fdyyxn.cpp:28:29: error: no matching function for call to '_mm_setr_epi32'\n   28 |         __m128i index_vec = _mm_setr_epi32(i, i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7);\n      |                             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpya4sztlq.cpp:30:30: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   30 |     xmm_max = _mm_set1_epi16(UINT16_MAX);\n      |               ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpya4sztlq.cpp:37:22: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   37 |         xmm_result = _mm_min_epu16(xmm_result, xmm_max);\n      |                      ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpszgph4fd.cpp:30:30: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   30 |     xmm_max = _mm_set1_epi16(UINT16_MAX);\n      |               ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpszgph4fd.cpp:37:22: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   37 |         xmm_result = _mm_min_epu16(xmm_result, xmm_max);\n      |                      ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuzfvutqd.cpp:30:30: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   30 |     xmm_max = _mm_set1_epi16(UINT16_MAX);\n      |               ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpuzfvutqd.cpp:37:23: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   37 |         xmm_clamped = _mm_min_epu16(xmm_result, xmm_max);\n      |                       ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk2i7878d.cpp:30:22: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         xmm_result = _mm_round_ps(xmm_result, _MM_FROUND_TO_NEAREST_INT);\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8rg7910d.cpp:30:22: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         xmm_result = _mm_round_ps(xmm_result, _MM_FROUND_TO_NEAREST_INT);\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ykazwyz.cpp:31:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   31 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9j6cnici.cpp:31:22: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   31 |         xmm_result = _mm_round_ps(xmm_result, _MM_FROUND_TO_NEAREST_INT);\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmb111ux4.cpp:30:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj4bthf9a.cpp:44:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i final_result = _mm_blendv_epi8(negative_ones, result_int, final_mask);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwj8mmsak.cpp:46:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 result = _mm_round_ps(_mm_mul_ps(a, b), _MM_FROUND_TO_POS_INF);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpwj8mmsak.cpp:48:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128 final_result = _mm_blendv_ps(minus_one, result, result_mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj9ebwhkz.cpp:46:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |         __m128 result = _mm_round_ps(_mm_mul_ps(a, b), _MM_FROUND_TO_POS_INF);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpj9ebwhkz.cpp:48:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128 final_result = _mm_blendv_ps(_mm_set1_ps(-1.0f), result, mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsjm01_cv.cpp:50:63: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |         __m128i result = _mm_blendv_epi8(one, _mm_cvtps_epi32(_mm_ceil_ps(_mm_mul_ps(a, b))), final_mask);\n      |                                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpsjm01_cv.cpp:50:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i result = _mm_blendv_epi8(one, _mm_cvtps_epi32(_mm_ceil_ps(_mm_mul_ps(a, b))), final_mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl2vbky72.cpp:43:63: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   43 |         __m128i result = _mm_blendv_epi8(one, _mm_cvtps_epi32(_mm_ceil_ps(_mm_mul_ps(a, b))), final_mask);\n      |                                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpl2vbky72.cpp:43:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i result = _mm_blendv_epi8(one, _mm_cvtps_epi32(_mm_ceil_ps(_mm_mul_ps(a, b))), final_mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpggwtcial.cpp:41:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   41 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpggwtcial.cpp:42:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   42 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwi7sflia.cpp:41:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   41 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpwi7sflia.cpp:42:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   42 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz3vfl3cf.cpp:40:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   40 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7fq736rp.cpp:40:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   40 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0tnace64.cpp:40:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   40 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyu9vw_2z.cpp:40:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   40 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp345ws5td.cpp:44:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   44 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7lnme97e.cpp:46:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             c0 = _mm_round_ps(c0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7lnme97e.cpp:47:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             c1 = _mm_round_ps(c1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7lnme97e.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             c2 = _mm_round_ps(c2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7lnme97e.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             c3 = _mm_round_ps(c3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp472526q2.cpp:46:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             row0 = _mm_round_ps(_mm_mul_ps(row0, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp472526q2.cpp:47:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             row1 = _mm_round_ps(_mm_mul_ps(row1, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp472526q2.cpp:48:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             row2 = _mm_round_ps(_mm_mul_ps(row2, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp472526q2.cpp:49:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row3 = _mm_round_ps(_mm_mul_ps(row3, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg702qs5_.cpp:46:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             c0 = _mm_round_ps(c0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpg702qs5_.cpp:47:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             c1 = _mm_round_ps(c1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpg702qs5_.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             c2 = _mm_round_ps(c2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpg702qs5_.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             c3 = _mm_round_ps(c3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn06166pi.cpp:46:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             c0 = _mm_round_ps(_mm_mul_ps(c0, _mm_castsi128_ps(quarter)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn06166pi.cpp:47:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             c1 = _mm_round_ps(_mm_mul_ps(c1, _mm_castsi128_ps(quarter)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn06166pi.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             c2 = _mm_round_ps(_mm_mul_ps(c2, _mm_castsi128_ps(quarter)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn06166pi.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             c3 = _mm_round_ps(_mm_mul_ps(c3, _mm_castsi128_ps(quarter)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn864xpta.cpp:46:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             row0 = _mm_round_ps(_mm_mul_ps(row0, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn864xpta.cpp:47:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             row1 = _mm_round_ps(_mm_mul_ps(row1, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn864xpta.cpp:48:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             row2 = _mm_round_ps(_mm_mul_ps(row2, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpn864xpta.cpp:49:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row3 = _mm_round_ps(_mm_mul_ps(row3, quarter), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3q53r5di.cpp:39:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor3d_sub_round_zero_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128 final_result = _mm_blendv_ps(rounded, rounded_neg, sign);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjn71um5l.cpp:38:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor3d_sub_round_zero_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128 final_result = _mm_blendv_ps(_mm_sub_ps(rounded, _mm_set1_ps(1.0f)), rounded, sign);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwjwjb3y2.cpp:38:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor3d_sub_round_zero_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128 final_result = _mm_blendv_ps(_mm_sub_ps(rounded, _mm_set1_ps(1.0f)), rounded, mask);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmgfm9u75.cpp:35:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   35 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpea1ls70r.cpp:34:23: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div = _mm_div_epi16(src_v, base_v);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpva9v_jin.cpp:34:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmponz0y13w.cpp:33:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   33 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_wd92ihi.cpp:34:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiijunnsx.cpp:42:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   42 |         equalCount += _mm_popcnt_u32(_mm_movemask_epi8(cmpResult));\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjc25j1om.cpp:40:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         equal_count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdodbcqax.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpks23f2n7.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(equal));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7amr3c0h.cpp:41:34: error: always_inline function '_mm_abs_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i cmp_packed_abs = _mm_abs_epi8(cmp_packed);\n      |                                  ^\n[REDACTED]/tmp7amr3c0h.cpp:44:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   44 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ujgswza.cpp:29:58: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i vec_result = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(scalar, vec_x), vec_x));\n      |                                                          ^\n[REDACTED]/tmp0ujgswza.cpp:29:30: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   29 |         __m128i vec_result = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(scalar, vec_x), vec_x));\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp55ub7m0y.cpp:29:30: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   29 |         __m128i vec_result = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epu32(vec_a, vec_x), _mm_setzero_si128()));\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp72a99foa.cpp:29:53: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i vec_y = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(scalar_a, vec_x), vec_x));\n      |                                                     ^\n[REDACTED]/tmp72a99foa.cpp:29:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   29 |         __m128i vec_y = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(scalar_a, vec_x), vec_x));\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpafr5qsh9.cpp:29:58: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i vec_result = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(vec_a, vec_x), vec_x));\n      |                                                          ^\n[REDACTED]/tmpafr5qsh9.cpp:29:30: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   29 |         __m128i vec_result = _mm_abs_epi64(_mm_sub_epi64(_mm_mul_epi32(vec_a, vec_x), vec_x));\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjq9ubpkp.cpp:29:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   29 |         __m128i vec_abs = _mm_abs_epi64(vec_x);\n      |                           ^\n[REDACTED]/tmpjq9ubpkp.cpp:30:40: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   30 |         __m128i result = _mm_sub_epi64(_mm_mullo_epi64(scalar_a, vec_x), vec_abs);\n      |                                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4d995ggt.cpp:47:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   47 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmp4d995ggt.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc7m0fwth.cpp:47:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   47 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpc7m0fwth.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqb057ieg.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpqb057ieg.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv2fit5jn.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpv2fit5jn.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps_o768ss.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmps_o768ss.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkjrt6hrf.cpp:57:18: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   57 |             if (!_mm_test_all_ones(_mm_cmpeq_epi32(first_block, block))) {\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp86bfxf4_.cpp:54:14: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   54 |         if (!_mm_test_all_ones(_mm_cmpeq_epi32(first_block, current_block))) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprpxzeu6j.cpp:47:19: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   47 |         result += _mm_extract_epi16(sum_squares, i);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmprpxzeu6j.cpp:48:19: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   48 |         result -= _mm_extract_epi16(sum_products, i);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp3lgn1ai.cpp:42:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i result = _mm_blendv_epi8(_mm_set1_epi8(0), _mm_set1_epi8(1), both_positive_mask);\n      |                          ^\n[REDACTED]/tmpp3lgn1ai.cpp:43:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   43 |         result = _mm_blendv_epi8(result, _mm_set1_epi8(-1), both_negative_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbuzidfpf.cpp:47:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i result = _mm_blendv_epi8(_mm_set1_epi8(0), _mm_set1_epi8(1), both_positive_mask);\n      |                          ^\n[REDACTED]/tmpbuzidfpf.cpp:48:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   48 |         result = _mm_blendv_epi8(result, _mm_set1_epi8(-1), both_negative_mask);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2dlje571.cpp:44:39: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d, c, _mm_castsi128_ps(mask2)), _mm_blendv_ps(b, a, _mm_castsi128_ps(mask2)), _mm_castsi128_ps(mask1));\n      |                                       ^\n[REDACTED]/tmp2dlje571.cpp:44:85: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d, c, _mm_castsi128_ps(mask2)), _mm_blendv_ps(b, a, _mm_castsi128_ps(mask2)), _mm_castsi128_ps(mask1));\n      |                                                                                     ^\n[REDACTED]/tmp2dlje571.cpp:44:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d, c, _mm_castsi128_ps(mask2)), _mm_blendv_ps(b, a, _mm_castsi128_ps(mask2)), _mm_castsi128_ps(mask1));\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_zczcj4z.cpp:47:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(d_val, c_val, mask2);\n      |                         ^\n[REDACTED]/tmp_zczcj4z.cpp:48:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   48 |         result = _mm_blendv_ps(result, b_val, mask1);\n      |                  ^\n[REDACTED]/tmp_zczcj4z.cpp:49:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   49 |         result = _mm_blendv_ps(result, a_val, mask1);\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl0gynk1x.cpp:46:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128 result = _mm_blendv_ps(d, c, mask2);\n      |                         ^\n[REDACTED]/tmpl0gynk1x.cpp:47:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         result = _mm_blendv_ps(result, b, mask1);\n      |                  ^\n[REDACTED]/tmpl0gynk1x.cpp:48:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   48 |         result = _mm_blendv_ps(result, a, _mm_and_ps(mask1, mask2));\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsmjoecxz.cpp:47:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(d_val, c_val, mask2);\n      |                         ^\n[REDACTED]/tmpsmjoecxz.cpp:48:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   48 |         result = _mm_blendv_ps(result, b_val, mask1);\n      |                  ^\n[REDACTED]/tmpsmjoecxz.cpp:49:18: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   49 |         result = _mm_blendv_ps(result, a_val, mask1);\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpduip2gxo.cpp:47:39: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d_vals, c_vals, mask2), _mm_blendv_ps(b_vals, a_vals, mask2), mask1);\n      |                                       ^\n[REDACTED]/tmpduip2gxo.cpp:47:77: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d_vals, c_vals, mask2), _mm_blendv_ps(b_vals, a_vals, mask2), mask1);\n      |                                                                             ^\n[REDACTED]/tmpduip2gxo.cpp:47:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(_mm_blendv_ps(d_vals, c_vals, mask2), _mm_blendv_ps(b_vals, a_vals, mask2), mask1);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6jbavhul.cpp:35:13: error: no matching function for call to '_mm_popcnt_u32'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n[REDACTED]/tmp6jbavhul.cpp:35:13: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwdvim1cc.cpp:35:13: error: no matching function for call to '_mm_popcnt_u32'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpwdvim1cc.cpp:35:13: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmj8xoykg.cpp:35:13: error: no matching function for call to '_mm_popcnt_u32'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpmj8xoykg.cpp:35:13: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgido6e1s.cpp:35:13: error: no matching function for call to '_mm_popcnt_u32'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpgido6e1s.cpp:35:13: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   35 |         v = _mm_popcnt_u32(v);\n      |             ^~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp_jenf2t.cpp:31:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   31 |         __m128i abs_a = _mm_abs_epi32(a);\n      |                         ^\n[REDACTED]/tmpp_jenf2t.cpp:32:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i result = _mm_blendv_epi8(a, abs_a, mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyud4hyq8.cpp:31:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   31 |         __m128i abs_a = _mm_abs_epi32(a);\n      |                         ^\n[REDACTED]/tmpyud4hyq8.cpp:32:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i result = _mm_blendv_epi8(a, abs_a, mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7osxd14d.cpp:33:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   33 |         __m128i abs_a = _mm_abs_epi32(a);\n      |                         ^\n[REDACTED]/tmp7osxd14d.cpp:34:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i result = _mm_blendv_epi8(a, abs_a, cmp);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxmko2z93.cpp:31:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   31 |         __m128i abs_a = _mm_abs_epi32(a);\n      |                         ^\n[REDACTED]/tmpxmko2z93.cpp:32:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i result = _mm_blendv_epi8(a, abs_a, mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl_asptid.cpp:33:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   33 |         __m128i abs_a = _mm_abs_epi32(a);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpceq83ljw.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpceq83ljw.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpceq83ljw.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpceq83ljw.cpp:44:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i result = _mm_blendv_epi8(negated, rotated, condition);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdys7vjcg.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpdys7vjcg.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpdys7vjcg.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpdys7vjcg.cpp:44:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, condition_mask);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqqbiyyvt.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpqqbiyyvt.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpqqbiyyvt.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpqqbiyyvt.cpp:44:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i result = _mm_blendv_epi8(negated, rotated, cmp_result);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3gijr_i6.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp3gijr_i6.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp3gijr_i6.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp3gijr_i6.cpp:43:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i result = _mm_blendv_epi8(negated, rotated, mask);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqkfs0mob.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpqkfs0mob.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpqkfs0mob.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpqkfs0mob.cpp:44:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i result_vec = _mm_blendv_epi8(negated_vec, rotated_vec, condition_mask);\n      |                              ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6k2p4k7r.cpp:44:45: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(zero, _mm_blendv_ps(_mm_set1_ps(1.0f), _mm_set1_ps(-1.0f), mask_lt_neg_eps), mask_gt_eps);\n      |                                             ^\n[REDACTED]/tmp6k2p4k7r.cpp:44:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(zero, _mm_blendv_ps(_mm_set1_ps(1.0f), _mm_set1_ps(-1.0f), mask_lt_neg_eps), mask_gt_eps);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpog2c6y8h.cpp:46:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i result = _mm_blendv_epi8(one, neg_one, _mm_castps_si128(mask_lt_neg_eps));\n      |                          ^\n[REDACTED]/tmpog2c6y8h.cpp:47:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   47 |         result = _mm_blendv_epi8(result, zero, _mm_castps_si128(mask_gt_eps));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzrsgr2i0.cpp:44:45: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(zero, _mm_blendv_ps(_mm_set1_ps(1.0f), _mm_set1_ps(-1.0f), mask_lt_neg_eps), mask_gt_eps);\n      |                                             ^\n[REDACTED]/tmpzrsgr2i0.cpp:44:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result = _mm_blendv_ps(zero, _mm_blendv_ps(_mm_set1_ps(1.0f), _mm_set1_ps(-1.0f), mask_lt_neg_eps), mask_gt_eps);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp18dut4wy.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp18dut4wy.cpp:36:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   36 |         int_values = _mm_max_epi32(int_values, int32_min);\n      |                      ^\n[REDACTED]/tmp18dut4wy.cpp:37:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   37 |         int_values = _mm_min_epi32(int_values, int32_max);\n      |                      ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8e1kzg_m.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp8e1kzg_m.cpp:39:36: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i saturated_values = _mm_blendv_epi8(int_values, int32_max, greater_than_max);\n      |                                    ^\n[REDACTED]/tmp8e1kzg_m.cpp:40:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   40 |         saturated_values = _mm_blendv_epi8(saturated_values, int32_min, less_than_min);\n      |                            ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp68f1f0qp.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp68f1f0qp.cpp:36:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   36 |         int_values = _mm_max_epi32(int_values, int32_min);\n      |                      ^\n[REDACTED]/tmp68f1f0qp.cpp:37:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   37 |         int_values = _mm_min_epi32(int_values, int32_max);\n      |                      ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpypgfe2tb.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpypgfe2tb.cpp:39:36: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i saturated_values = _mm_blendv_epi8(int_values, int32_max, greater_than_max);\n      |                                    ^\n[REDACTED]/tmpypgfe2tb.cpp:40:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   40 |         saturated_values = _mm_blendv_epi8(saturated_values, int32_min, less_than_min);\n      |                            ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplk_rl4h8.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmplk_rl4h8.cpp:37:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   37 |         int_values = _mm_max_epi32(int_values, int32_min);\n      |                      ^\n[REDACTED]/tmplk_rl4h8.cpp:38:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   38 |         int_values = _mm_min_epi32(int_values, int32_max);\n      |                      ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpej9fib9_.cpp:32:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i scaled_val = _mm_mullo_epi32(A_val, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps6vg440h.cpp:32:37: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i scaled_int_values = _mm_mullo_epi32(int_values, scale_vec);\n      |                                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptrozuftk.cpp:32:33: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i scaled_values = _mm_mullo_epi32(int_values, scale_vec);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbhj9jmqs.cpp:32:33: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   32 |         __m128i scaled_values = _mm_mullo_epi32(int_values, scale_vec);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6qbcsljm.cpp:38:9: error: no matching function for call to '_mm_store_ps'\n   38 |         _mm_store_ps((ptr_B + i), val_float);\n      |         ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2012:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 2012 | _mm_store_ps(float *__p, __m128 __a)\n      | ^            ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzz54ptvn.cpp:29:21: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i b = _mm_cvtepi16_epi32(a);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp845wqkwy.cpp:29:21: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i b = _mm_cvtepi16_epi32(a);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx95ownxk.cpp:29:21: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i b = _mm_cvtepi16_epi32(a);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpelqcqywz.cpp:29:21: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i b = _mm_cvtepi16_epi32(a);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpraxi0maa.cpp:29:21: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   29 |         __m128i b = _mm_cvtepi16_epi32(a);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcwq43sdo.cpp:45:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result = _mm_blendv_ps(a_values, normalized_values, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt06ddue6.cpp:46:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128 result = _mm_blendv_ps(a, val, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpupj_a5w9.cpp:45:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result = _mm_blendv_ps(a, normalized, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_08lvvqf.cpp:47:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(a_values, normalized_values, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvo7kequ3.cpp:46:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128 result = _mm_blendv_ps(a_values, normalized_values, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsvuxjklf.cpp:42:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128 result = _mm_blendv_ps(mask_false, diff_float, _mm_castsi128_ps(_mm_cmpeq_epi32(cond_mask, mask_true)));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn7l399rc.cpp:42:30: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128 diff_result = _mm_blendv_ps(mask_false, diff_float, _mm_castsi128_ps(_mm_and_si128(cond_mask, mask_true)));\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5s7bfy9h.cpp:43:30: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   43 |         __m128i cmpShifted = _mm_alignr_epi8(cmp, prevA, 4);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvxrxzwq2.cpp:50:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   50 |         diff_float = _mm_blendv_ps(_mm_setzero_ps(), diff_float, _mm_castsi128_ps(_mm_cmpeq_epi32(mask, mask_true)));\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp30v4o6ve.cpp:50:22: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   50 |         diff_float = _mm_blendv_ps(_mm_setzero_ps(), diff_float, _mm_castsi128_ps(_mm_cmpeq_epi32(mask, mask_true)));\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpairjqk20.cpp:31:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i src_extended = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_zyrdpy7.cpp:31:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i src_extended = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvkm1wb7v.cpp:39:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i src_wide = _mm_cvtepu32_epi64(src_vec);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjutzy2lf.cpp:34:19: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         src_vec = _mm_cvtepu32_epi64(src_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9vgzvp1k.cpp:34:23: error: '__builtin_ia32_gatherd_pd' needs target feature avx2\n   34 |         __m128d val = _mm_i32gather_pd(&vec[0], idx, 8);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/avx2intrin.h:4761:13: note: expanded from macro '_mm_i32gather_pd'\n 4761 |   ((__m128d)__builtin_ia32_gatherd_pd((__v2df)_mm_undefined_pd(), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt5a6kv9m.cpp:52:22: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   52 |     __m128d result = _mm_hadd_pd(sum, sum);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkjly8yap.cpp:46:39: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   46 |         __m128i shifted_numbers_vec = _mm_alignr_epi8(numbers_vec, numbers_vec, 4);\n      |                                       ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxjufxo2s.cpp:43:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   43 |         current_max = _mm_max_epi32(current_max, input);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwjzye3ln.cpp:44:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   44 |         current_max = _mm_max_epi32(current_max, input);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpor250kae.cpp:43:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   43 |         current_max = _mm_max_epi32(current_max, input);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcvghw6n1.cpp:43:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   43 |         current_max = _mm_max_epi32(current_max, input);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpekn6bmsu.cpp:44:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   44 |         current_max = _mm_max_epi32(current_max, input);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6fhrdaz8.cpp:43:26: error: no matching function for call to '_mm_blendv_ps'\n   43 |         longest_string = _mm_blendv_ps(longest_string, str_ptr, (__m128)cmp);\n      |                          ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:463:45: note: candidate function not viable: no known conversion from 'const char *' to '__m128' (vector of 4 'float' values) for 1st argument\n  463 | static __inline__ __m128 __DEFAULT_FN_ATTRS _mm_blendv_ps(__m128 __V1,\n      |                                             ^             ~~~~~~~~~~~\n[REDACTED]/tmp6fhrdaz8.cpp:43:26: error: assigning to 'const char *' from incompatible type '__m128' (vector of 4 'float' values)\n   43 |         longest_string = _mm_blendv_ps(longest_string, str_ptr, (__m128)cmp);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp18ag4p6w.cpp:45:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   45 |         max_length = _mm_blendv_epi8(max_length, str_length, cmp);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp21ff9iu6.cpp:49:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   49 |         max_length = _mm_blendv_epi8(max_length, current_length, compare);\n      |                      ^\n[REDACTED]/tmp21ff9iu6.cpp:50:21: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   50 |         max_index = _mm_blendv_epi8(max_index, _mm_set1_epi32(i), compare);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmbm3j9bc.cpp:46:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   46 |         max_length = _mm_max_epi32(max_length, str_length);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe6teq0m1.cpp:40:23: error: reinterpret_cast from '__m128i' (vector of 2 'long long' values) to 'const char *' is not allowed\n   40 |         longest_str = reinterpret_cast<const char*>(_mm_blendv_epi8(\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   41 |             _mm_set1_epi64x(reinterpret_cast<int64_t>(longest_str)),\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   42 |             _mm_set1_epi64x(reinterpret_cast<int64_t>(str.c_str())),\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   43 |             cmp\n      |             ~~~\n   44 |         ));\n      |         ~~\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3jkbolsm.cpp:40:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i cmp = _mm_cmpeq_epi64(va, vb);\n      |                       ^\n[REDACTED]/tmp3jkbolsm.cpp:45:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   45 |         __m128i mask = _mm_cmpgt_epi64(va, vb);\n      |                        ^\n[REDACTED]/tmp3jkbolsm.cpp:46:14: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   46 |         va = _mm_blendv_epi8(va, _mm_sub_epi64(va, vb), mask);\n      |              ^\n[REDACTED]/tmp3jkbolsm.cpp:47:14: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   47 |         vb = _mm_blendv_epi8(vb, _mm_sub_epi64(vb, va), mask);\n      |              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1svny9hl.cpp:74:28: error: no viable conversion from 'std::pair<float, float>' to 'std::vector<float>'\n   74 |         std::vector<float> result_simd = find_closest_elements_simd(numbers);\n      |                            ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'const vector<float> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'vector<float> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\nIn file included from [REDACTED]/tmp1svny9hl.cpp:14:\n[REDACTED]/utils.hpp:258:23: error: static assertion failed due to requirement 'std::is_arithmetic<std::pair<float, float>>::value': Unsupported type\n  258 |         static_assert(std::is_arithmetic<T>::value, \"Unsupported type\");\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp1svny9hl.cpp:58:21: note: in instantiation of function template specialization 'allclose<std::pair<float, float>>' requested here\n   58 |     pass = pass && (allclose(find_closest_elements_simd({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdgbqn5tc.cpp:47:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   47 |         closest_pair = _mm_blendv_ps(closest_pair, _mm_unpacklo_ps(num1, num2), mask);\n      |                        ^\n[REDACTED]/tmpdgbqn5tc.cpp:73:28: error: no viable conversion from 'std::pair<float, float>' to 'std::vector<float>'\n   73 |         std::vector<float> result_simd = find_closest_elements_simd(numbers);\n      |                            ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'const vector<float> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'vector<float> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\nIn file included from [REDACTED]/tmpdgbqn5tc.cpp:14:\n[REDACTED]/utils.hpp:258:23: error: static assertion failed due to requirement 'std::is_arithmetic<std::pair<float, float>>::value': Unsupported type\n  258 |         static_assert(std::is_arithmetic<T>::value, \"Unsupported type\");\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpdgbqn5tc.cpp:57:21: note: in instantiation of function template specialization 'allclose<std::pair<float, float>>' requested here\n   57 |     pass = pass && (allclose(find_closest_elements_simd({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));\n      |                     ^\n3 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0z_qdto9.cpp:48:20: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   48 |         closest1 = _mm_blendv_ps(closest1, num1, mask);\n      |                    ^\n[REDACTED]/tmp0z_qdto9.cpp:49:20: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   49 |         closest2 = _mm_blendv_ps(closest2, num2, mask);\n      |                    ^\n[REDACTED]/tmp0z_qdto9.cpp:76:28: error: no viable conversion from 'std::pair<float, float>' to 'std::vector<float>'\n   76 |         std::vector<float> result_simd = find_closest_elements_simd(numbers);\n      |                            ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'const vector<float> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'vector<float> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\nIn file included from [REDACTED]/tmp0z_qdto9.cpp:14:\n[REDACTED]/utils.hpp:258:23: error: static assertion failed due to requirement 'std::is_arithmetic<std::pair<float, float>>::value': Unsupported type\n  258 |         static_assert(std::is_arithmetic<T>::value, \"Unsupported type\");\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp0z_qdto9.cpp:60:21: note: in instantiation of function template specialization 'allclose<std::pair<float, float>>' requested here\n   60 |     pass = pass && (allclose(find_closest_elements_simd({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));\n      |                     ^\n4 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmr6f_6_h.cpp:48:20: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   48 |         closest1 = _mm_blendv_ps(closest1, num1, mask);\n      |                    ^\n[REDACTED]/tmpmr6f_6_h.cpp:49:20: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   49 |         closest2 = _mm_blendv_ps(closest2, num2, mask);\n      |                    ^\n[REDACTED]/tmpmr6f_6_h.cpp:88:28: error: no viable conversion from 'std::pair<float, float>' to 'std::vector<float>'\n   88 |         std::vector<float> result_simd = find_closest_elements_simd(numbers);\n      |                            ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'const vector<float> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'vector<float> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\nIn file included from [REDACTED]/tmpmr6f_6_h.cpp:14:\n[REDACTED]/utils.hpp:258:23: error: static assertion failed due to requirement 'std::is_arithmetic<std::pair<float, float>>::value': Unsupported type\n  258 |         static_assert(std::is_arithmetic<T>::value, \"Unsupported type\");\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpmr6f_6_h.cpp:72:21: note: in instantiation of function template specialization 'allclose<std::pair<float, float>>' requested here\n   72 |     pass = pass && (allclose(find_closest_elements_simd({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));\n      |                     ^\n4 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6govtf7i.cpp:46:24: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   46 |         closest_pair = _mm_blendv_ps(closest_pair, _mm_unpacklo_ps(num1, num2), mask);\n      |                        ^\n[REDACTED]/tmp6govtf7i.cpp:72:28: error: no viable conversion from 'std::pair<float, float>' to 'std::vector<float>'\n   72 |         std::vector<float> result_simd = find_closest_elements_simd(numbers);\n      |                            ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:601:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'const vector<float> &' for 1st argument\n  601 |       vector(const vector& __x)\n      |       ^      ~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:620:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'vector<float> &&' for 1st argument\n  620 |       vector(vector&&) noexcept = default;\n      |       ^      ~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:678:7: note: candidate constructor not viable: no known conversion from 'std::pair<float, float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument\n  678 |       vector(initializer_list<value_type> __l,\n      |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:542:7: note: explicit constructor is not a candidate\n  542 |       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:7: note: explicit constructor is not a candidate\n  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^\nIn file included from [REDACTED]/tmp6govtf7i.cpp:14:\n[REDACTED]/utils.hpp:258:23: error: static assertion failed due to requirement 'std::is_arithmetic<std::pair<float, float>>::value': Unsupported type\n  258 |         static_assert(std::is_arithmetic<T>::value, \"Unsupported type\");\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp6govtf7i.cpp:56:21: note: in instantiation of function template specialization 'allclose<std::pair<float, float>>' requested here\n   56 |     pass = pass && (allclose(find_closest_elements_simd({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));\n      |                     ^\n3 errors generated.\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjexgh7gl.cpp:34:20: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   34 |     __m128i mask = _mm_cmplt_epi64(divisors, num);\n      |                    ^~~~~~~~~~~~~~~\n      |                    _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphcz7b01o.cpp:30:20: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   30 |     __m128i mask = _mm_cmplt_epi64(divisors, num);\n      |                    ^~~~~~~~~~~~~~~\n      |                    _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoewnjpji.cpp:34:20: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   34 |     __m128i mask = _mm_cmplt_epi64(divisors, num);\n      |                    ^~~~~~~~~~~~~~~\n      |                    _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_mk9nalt.cpp:34:20: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   34 |     __m128i mask = _mm_cmplt_epi64(divisors, num);\n      |                    ^~~~~~~~~~~~~~~\n      |                    _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpldk_ufu2.cpp:30:20: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   30 |     __m128i mask = _mm_cmplt_epi64(divisors, num);\n      |                    ^~~~~~~~~~~~~~~\n      |                    _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu9ygsvnp.cpp:59:45: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'factorize_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i cmpResult = _mm_cmpeq_epi32(_mm_mullo_epi32(factorVec, divResult), nVec);\n      |                                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp63aun_pw.cpp:50:28: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i mod1_res = _mm_cmpeq_epi64(_mm_setzero_si128(), _mm_and_si128(mod1, num));\n      |                            ^\n[REDACTED]/tmp63aun_pw.cpp:51:28: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i mod2_res = _mm_cmpeq_epi64(_mm_setzero_si128(), _mm_and_si128(mod2, num));\n      |                            ^\n[REDACTED]/tmp63aun_pw.cpp:53:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   53 |         if (!_mm_test_all_zeros(or_res, zero)) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzgwd6tft.cpp:48:23: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   48 |         __m128i cmp = _mm_cmplt_epi64(divisor, limit);\n      |                       ^~~~~~~~~~~~~~~\n      |                       _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpzgwd6tft.cpp:53:24: error: use of undeclared identifier '_mm_rem_epi64'\n   53 |         __m128i rem1 = _mm_rem_epi64(divisor, _mm_unpacklo_epi64(divisor, divisor));\n      |                        ^\n[REDACTED]/tmpzgwd6tft.cpp:54:24: error: use of undeclared identifier '_mm_rem_epi64'\n   54 |         __m128i rem2 = _mm_rem_epi64(divisor, _mm_unpackhi_epi64(divisor, divisor));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg1c4g4u9.cpp:53:103: error: use of undeclared identifier '_mm_srem_epi32'\n   53 |         __m128i div1 = _mm_cmpeq_epi32(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi32(0xFFFFFFFF), _mm_srem_epi32(n_sse, divisor)));\n      |                                                                                                       ^\n[REDACTED]/tmpg1c4g4u9.cpp:54:103: error: use of undeclared identifier '_mm_srem_epi32'\n   54 |         __m128i div2 = _mm_cmpeq_epi32(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi32(0xFFFFFFFF), _mm_srem_epi32(n_sse, _mm_add_epi32(divisor, _mm_set1_epi32(6))));\n      |                                                                                                       ^\n[REDACTED]/tmpg1c4g4u9.cpp:54:168: error: expected ')'\n   54 |         __m128i div2 = _mm_cmpeq_epi32(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi32(0xFFFFFFFF), _mm_srem_epi32(n_sse, _mm_add_epi32(divisor, _mm_set1_epi32(6))));\n      |                                                                                                                                                                        ^\n[REDACTED]/tmpg1c4g4u9.cpp:54:39: note: to match this '('\n   54 |         __m128i div2 = _mm_cmpeq_epi32(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi32(0xFFFFFFFF), _mm_srem_epi32(n_sse, _mm_add_epi32(divisor, _mm_set1_epi32(6))));\n      |                                       ^\n3 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvpt4z4ib.cpp:49:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   49 |         __m128i divisor = _mm_shuffle_epi32(divisors, _MM_SHUFFLE(i, i, i, i));\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmpvpt4z4ib.cpp:50:30: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   50 |         __m128i mod_result = _mm_rem_epi32(num, divisor);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2fr1bl2d.cpp:50:23: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   50 |         __m128i div = _mm_shuffle_epi32(divisors, _MM_SHUFFLE(i, i, i, i));\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmp2fr1bl2d.cpp:51:23: error: use of undeclared identifier '_mm_srem_epi32'\n   51 |         __m128i mod = _mm_srem_epi32(num, div);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqsc2kcn5.cpp:56:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i resultChunk = _mm_blendv_epi8(chunk, upper, _mm_cmpeq_epi8(lower, lowerMask));\n      |                               ^\n[REDACTED]/tmpqsc2kcn5.cpp:57:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   57 |         resultChunk = _mm_blendv_epi8(resultChunk, _mm_xor_si128(resultChunk, caseMask), _mm_cmpeq_epi8(lower, upperMask));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphbmjl089.cpp:57:137: error: expected ')'\n   57 |         __m128i result_lower = _mm_or_si128(_mm_andnot_si128(is_letter, input), _mm_and_si128(is_lower, _mm_or_si128(input, mask_upper));\n      |                                                                                                                                         ^\n[REDACTED]/tmphbmjl089.cpp:57:44: note: to match this '('\n   57 |         __m128i result_lower = _mm_or_si128(_mm_andnot_si128(is_letter, input), _mm_and_si128(is_lower, _mm_or_si128(input, mask_upper));\n      |                                            ^\n[REDACTED]/tmphbmjl089.cpp:58:137: error: expected ')'\n   58 |         __m128i result_upper = _mm_or_si128(_mm_andnot_si128(is_letter, input), _mm_and_si128(is_upper, _mm_or_si128(input, mask_lower));\n      |                                                                                                                                         ^\n[REDACTED]/tmphbmjl089.cpp:58:44: note: to match this '('\n   58 |         __m128i result_upper = _mm_or_si128(_mm_andnot_si128(is_letter, input), _mm_and_si128(is_upper, _mm_or_si128(input, mask_lower));\n      |                                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptfc4f_ou.cpp:66:9: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   66 |     if (_mm_testz_si128(_mm_cmplt_epi8(_mm_loadu_si128(reinterpret_cast<const __m128i*>(&s[0])), space), _mm_set1_epi8(0xFF))) {\n      |         ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpimy_tq1v.cpp:52:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'sort_third_simd' that is compiled without support for 'ssse3'\n   52 |         __m128i shuffled = _mm_shuffle_epi8(data, indices);\n      |                            ^\n[REDACTED]/tmpimy_tq1v.cpp:53:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i result = _mm_blendv_epi8(data, shuffled, mask);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_30mjmd7.cpp:49:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i result = _mm_blendv_epi8(vec, sorted, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf014gr68.cpp:53:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i result = _mm_blendv_epi8(vec, sorted, div3_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi5zr_onv.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result = _mm_blendv_epi8(chunk, sorted_chunk, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdrlttzer.cpp:58:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i result = _mm_blendv_epi8(vec, sorted_div_by_three, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr3ks671n.cpp:47:177: error: expected ')'\n   47 |         __m128i mask = _mm_or_si128(_mm_and_si128(mod_11, _mm_cmpeq_epi32(divisible, _mm_set1_epi32(11))), _mm_and_si128(mod_13, _mm_cmpeq_epi32(divisible, _mm_set1_epi32(13)));\n      |                                                                                                                                                                                 ^\n[REDACTED]/tmpr3ks671n.cpp:47:36: note: to match this '('\n   47 |         __m128i mask = _mm_or_si128(_mm_and_si128(mod_11, _mm_cmpeq_epi32(divisible, _mm_set1_epi32(11))), _mm_and_si128(mod_13, _mm_cmpeq_epi32(divisible, _mm_set1_epi32(13)));\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpef_d1r_a.cpp:44:181: error: expected ')'\n   44 |         __m128i divisible_by_thirteen = _mm_cmpeq_epi8(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi8(0x1), _mm_cmpeq_epi8(_mm_setzero_si128(), _mm_and_si128(values, thirteens)));\n      |                                                                                                                                                                                     ^\n[REDACTED]/tmpef_d1r_a.cpp:44:55: note: to match this '('\n   44 |         __m128i divisible_by_thirteen = _mm_cmpeq_epi8(_mm_setzero_si128(), _mm_and_si128(_mm_set1_epi8(0x1), _mm_cmpeq_epi8(_mm_setzero_si128(), _mm_and_si128(values, thirteens)));\n      |                                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7cry6g1n.cpp:58:29: error: '__builtin_ia32_blendps' needs target feature sse4.1\n   58 |         __m128 result_vec = _mm_blend_ps(odd_indices, sorted_even_indices, 0b1010);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:413:12: note: expanded from macro '_mm_blend_ps'\n  413 |   ((__m128)__builtin_ia32_blendps((__v4sf)(__m128)(V1), (__v4sf)(__m128)(V2),  \\\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk_iwwrai.cpp:50:20: error: use of undeclared identifier '_mm_div_epi8'; did you mean '_mm_min_epi8'?\n   50 |         quotient = _mm_div_epi8(x_vec, base_vec);\n      |                    ^~~~~~~~~~~~\n      |                    _mm_min_epi8\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:666:46: note: '_mm_min_epi8' declared here\n  666 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi8(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpk_iwwrai.cpp:51:41: error: use of undeclared identifier '_mm_mullo_epi8'\n   51 |         remainder = _mm_sub_epi8(x_vec, _mm_mullo_epi8(quotient, base_vec));\n      |                                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1wpd_s24.cpp:53:9: error: use of undeclared identifier '_mm_divrem_epi8'\n   53 |         _mm_divrem_epi8(x_vec, base_vec, &quotient, &remainder);\n      |         ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx0hhbe_4.cpp:51:20: error: use of undeclared identifier '_mm_div_epi8'; did you mean '_mm_min_epi8'?\n   51 |         quotient = _mm_div_epi8(x_vec, base_vec);\n      |                    ^~~~~~~~~~~~\n      |                    _mm_min_epi8\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:666:46: note: '_mm_min_epi8' declared here\n  666 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi8(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpx0hhbe_4.cpp:52:41: error: use of undeclared identifier '_mm_mullo_epi8'\n   52 |         remainder = _mm_sub_epi8(x_vec, _mm_mullo_epi8(quotient, base_vec));\n      |                                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpswslyscl.cpp:50:28: error: use of undeclared identifier '_mm_div_epi8'; did you mean '_mm_min_epi8'?\n   50 |         __m128i quotient = _mm_div_epi8(x_vec, base_vec);\n      |                            ^~~~~~~~~~~~\n      |                            _mm_min_epi8\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:666:46: note: '_mm_min_epi8' declared here\n  666 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi8(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4iuht8pq.cpp:45:20: error: use of undeclared identifier '_mm_div_epi8'; did you mean '_mm_min_epi8'?\n   45 |         quotient = _mm_div_epi8(x_vec, base_vec);\n      |                    ^~~~~~~~~~~~\n      |                    _mm_min_epi8\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:666:46: note: '_mm_min_epi8' declared here\n  666 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi8(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp4iuht8pq.cpp:46:41: error: use of undeclared identifier '_mm_mullo_epi8'\n   46 |         remainder = _mm_sub_epi8(x_vec, _mm_mullo_epi8(quotient, base_vec));\n      |                                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo3wt8n45.cpp:53:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   53 |         result = _mm_blendv_epi8(result, shifted, mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps2i1dee9.cpp:50:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(mask_open) - _mm_popcnt_u32(mask_close);\n      |                  ^\n[REDACTED]/tmps2i1dee9.cpp:50:46: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(mask_open) - _mm_popcnt_u32(mask_close);\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppygg1ods.cpp:48:25: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   48 |         int openCount = _mm_popcnt_u32(_mm_movemask_epi8(openMask));\n      |                         ^\n[REDACTED]/tmppygg1ods.cpp:49:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   49 |         int closeCount = _mm_popcnt_u32(_mm_movemask_epi8(closeMask));\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp69nbshgc.cpp:50:14: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   50 |         if (!_mm_test_all_ones(cmp_result)) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj8kp9jcw.cpp:50:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(open_mask) - _mm_popcnt_u32(close_mask);\n      |                  ^\n[REDACTED]/tmpj8kp9jcw.cpp:50:46: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(open_mask) - _mm_popcnt_u32(close_mask);\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6unlx81w.cpp:49:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   49 |         count += _mm_popcnt_u32(mask_open) - _mm_popcnt_u32(mask_close);\n      |                  ^\n[REDACTED]/tmp6unlx81w.cpp:49:46: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   49 |         count += _mm_popcnt_u32(mask_open) - _mm_popcnt_u32(mask_close);\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpylpwqcu4.cpp:47:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   47 |         int open_count = _mm_popcnt_u32(_mm_movemask_epi8(cmp_open));\n      |                          ^\n[REDACTED]/tmpylpwqcu4.cpp:48:27: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   48 |         int close_count = _mm_popcnt_u32(_mm_movemask_epi8(cmp_close));\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjws8scxr.cpp:47:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   47 |         count += _mm_popcnt_u32(_mm_movemask_epi8(_mm_sub_epi8(isOpen, isClose)));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiaiz7m8c.cpp:46:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   46 |         int open_count = _mm_popcnt_u32(_mm_movemask_epi8(cmp_open));\n      |                          ^\n[REDACTED]/tmpiaiz7m8c.cpp:47:27: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   47 |         int close_count = _mm_popcnt_u32(_mm_movemask_epi8(cmp_close));\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv0t_9iyh.cpp:47:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   47 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp_result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj18on1p2.cpp:46:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   46 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n[REDACTED]/tmpj18on1p2.cpp:60:14: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   60 |     count += _mm_popcnt_u32(_mm_movemask_epi8(result) & ((1 << leftover_size) - 1));\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpibihrmmk.cpp:46:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   46 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp_result));\n      |                  ^\n[REDACTED]/tmpibihrmmk.cpp:62:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   62 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp_result) & ((1 << leftover_size) - 1));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyu7qo3g1.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmpVowels));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp375o0y8.cpp:44:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   44 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfyd4z5ju.cpp:48:26: warning: array index 4 is past the end of the array (that has type 'int[4]') [-Warray-bounds]\n   48 |     int smallest_index = result[4];\n      |                          ^      ~\n[REDACTED]/tmpfyd4z5ju.cpp:43:5: note: array 'result' declared here\n   43 |     int result[4];\n      |     ^\n[REDACTED]/tmpfyd4z5ju.cpp:39:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   39 |         min_even = _mm_min_epi32(min_even, even_values);\n      |                    ^\n[REDACTED]/tmpfyd4z5ju.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   40 |         min_even_index = _mm_blendv_epi8(min_even_index, _mm_set1_epi32(i), cmp);\n      |                          ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp349iwii2.cpp:39:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   39 |         min_even = _mm_min_epi32(min_even, even_values);\n      |                    ^\n[REDACTED]/tmp349iwii2.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   40 |         min_even_index = _mm_blendv_epi8(min_even_index, index, cmp);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphjhp8wuc.cpp:41:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   41 |         min_even = _mm_min_epi32(even_values, min_even);\n      |                    ^\n[REDACTED]/tmphjhp8wuc.cpp:42:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   42 |         min_even_idx = _mm_blendv_epi8(min_even_idx, _mm_set1_epi32(i), cmp);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpienhspw3.cpp:37:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   37 |         minEven = _mm_min_epi32(_mm_and_si128(values, evenValuesMask), minEven); // Update minEven with even values\n      |                   ^\n[REDACTED]/tmpienhspw3.cpp:38:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   38 |         minEvenIndex = _mm_blendv_epi8(minEvenIndex, _mm_set1_epi32(i), evenValuesMask); // Update minEvenIndex with the index of even values\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6x9pma1z.cpp:38:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   38 |         min_even = _mm_min_epi32(even_values, min_even);\n      |                    ^\n[REDACTED]/tmp6x9pma1z.cpp:39:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   39 |         min_even_idx = _mm_blendv_epi8(min_even_idx, _mm_set1_epi32(i), cmp);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps7js3mgn.cpp:61:55: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   61 |     if (final_result[0] > 0 && final_result[0] == freq.m128i_i32[0]) {\n      |                                                   ~~~~^~~~~~~~~~\n[REDACTED]/tmps7js3mgn.cpp:63:62: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   63 |     } else if (final_result[1] > 0 && final_result[1] == freq.m128i_i32[1]) {\n      |                                                          ~~~~^~~~~~~~~~\n[REDACTED]/tmps7js3mgn.cpp:65:62: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   65 |     } else if (final_result[2] > 0 && final_result[2] == freq.m128i_i32[2]) {\n      |                                                          ~~~~^~~~~~~~~~\n[REDACTED]/tmps7js3mgn.cpp:67:62: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   67 |     } else if (final_result[3] > 0 && final_result[3] == freq.m128i_i32[3]) {\n      |                                                          ~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5oshogc5.cpp:52:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'search_simd' that is compiled without support for 'sse4.1'\n   52 |         result = _mm_blendv_epi8(result, data, mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsyhi6jt1.cpp:61:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'search_simd' that is compiled without support for 'sse4.1'\n   61 |         max_freq = _mm_blendv_epi8(max_freq, new_max_freq, cmp_mask);\n      |                    ^\n[REDACTED]/tmpsyhi6jt1.cpp:62:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'search_simd' that is compiled without support for 'sse4.1'\n   62 |         max_val = _mm_blendv_epi8(max_val, new_max_val, cmp_mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1tobiykt.cpp:42:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                    ~~~^~~~~~~~~~\n[REDACTED]/tmp1tobiykt.cpp:42:42: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                       ~~~^~~~~~~~~~\n[REDACTED]/tmp1tobiykt.cpp:42:61: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                          ~~~^~~~~~~~~~\n[REDACTED]/tmp1tobiykt.cpp:42:80: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                                             ~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2itg5adp.cpp:42:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                    ~~~^~~~~~~~~~\n[REDACTED]/tmp2itg5adp.cpp:42:42: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                       ~~~^~~~~~~~~~\n[REDACTED]/tmp2itg5adp.cpp:42:61: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                          ~~~^~~~~~~~~~\n[REDACTED]/tmp2itg5adp.cpp:42:80: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |     int totalSum = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                                             ~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0v07eoy7.cpp:43:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   43 |         changes += _mm_popcnt_u32(mask);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj0ljwevr.cpp:40:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   40 |         changes += _mm_popcnt_u32(mask);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm6d9q07s.cpp:43:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   43 |         changes += _mm_popcnt_u32(mask);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd32o261a.cpp:43:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   43 |         changes += _mm_popcnt_u32(mask);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpian_bvbe.cpp:54:13: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |         if (_mm_extract_epi32(cmp, i) != 0) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0h905_ij.cpp:43:16: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |     while (x_mm.m128i_u64[0] % n_mm.m128i_u64[0] == 0) {\n      |            ~~~~^~~~~~~~~~\n[REDACTED]/tmp0h905_ij.cpp:43:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |     while (x_mm.m128i_u64[0] % n_mm.m128i_u64[0] == 0) {\n      |                                ~~~~^~~~~~~~~~\n[REDACTED]/tmp0h905_ij.cpp:44:16: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   44 |         x_mm = _mm_div_epi64(x_mm, n_mm);\n      |                ^~~~~~~~~~~~~\n      |                _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmp0h905_ij.cpp:45:18: error: use of undeclared identifier '_mm_mul_epi64'\n   45 |         result = _mm_mul_epi64(result, n_mm);\n      |                  ^\n[REDACTED]/tmp0h905_ij.cpp:48:16: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |     return x_mm.m128i_u64[0] == 1 && result.m128i_u64[0] == x;\n      |            ~~~~^~~~~~~~~~\n[REDACTED]/tmp0h905_ij.cpp:48:44: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |     return x_mm.m128i_u64[0] == 1 && result.m128i_u64[0] == x;\n      |                                      ~~~~~~^~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp91i24c25.cpp:42:40: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   42 |         result = _mm_and_si128(result, _mm_cmpeq_epi64(x_div_vec, _mm_mul_epu32(x_div_vec, n_vec)));\n      |                                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiunfyanv.cpp:47:9: error: use of undeclared identifier '_mm_divrem_epi64'\n   47 |         _mm_divrem_epi64(div, n_vec, &div, &mod);\n      |         ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9m5f96qa.cpp:50:18: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   50 |         result = _mm_cmpeq_epi64(power, x_mm);\n      |                  ^\n[REDACTED]/tmp9m5f96qa.cpp:54:31: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   54 |         if (_mm_movemask_epi8(_mm_cmpgt_epi64(power, x_mm)) != 0) {\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp02xgl54e.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(cmp_mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpictc0gfd.cpp:39:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   39 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp_result_primes));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp37tbwf4l.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(cmp_mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqe__tvzc.cpp:39:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   39 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpotykfomi.cpp:47:15: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         div = _mm_div_epi32(n, i);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpotykfomi.cpp:51:30: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   51 |         __m128i is_not_one = _mm_cmpneq_epi32(i, one);\n      |                              ^~~~~~~~~~~~~~~~\n      |                              _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkocl84sy.cpp:49:28: error: no matching function for call to '_mm_set_epi8'\n   49 |     __m128i shuffle_mask = _mm_set_epi8(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 13, 11, 9, 7, 5, 3, 1);\n      |                            ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 24 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp45av7_56.cpp:51:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   51 |     __m128i result = _mm_blendv_epi8(ascii_0, ten, mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc8zi4v26.cpp:51:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   51 |     __m128i result = _mm_blendv_epi8(ascii_0, ten, mask);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqwr_l9d.cpp:54:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i resultChunk = _mm_blendv_epi8(chunk, twoAheadMask, isVowel);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphbmvmgg_.cpp:50:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i replace_vowel = _mm_blendv_epi8(chunk, two_ahead_mask, is_vowel);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpih8b5n12.cpp:58:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i result_chars = _mm_blendv_epi8(input, shifted_vowels, vowels);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpef50i_ia.cpp:61:12: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   61 |     return _mm_testz_si128(all_lowercase, all_uppercase);\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpow_movj5.cpp:67:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   67 |     __m128i lowercase_result = _mm_testz_si128(all_lowercase, all_lowercase);\n      |             ^                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpow_movj5.cpp:68:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   68 |     __m128i uppercase_result = _mm_testz_si128(all_uppercase, all_uppercase);\n      |             ^                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgop8k7yl.cpp:75:50: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   75 |                 div_rem = _mm_sub_epi32(current, _mm_mullo_epi32(div, _mm_srli_epi32(current, 1)));\n      |                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxklgxz97.cpp:70:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   70 |         if (_mm_test_all_zeros(check, mask)) {\n      |             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc1310ucb.cpp:76:43: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   76 |             __m128i cmp = _mm_cmplt_epi32(_mm_mullo_epi32(prime, prime), divisors);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzy8o7ypd.cpp:40:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i is_vowel = _mm_shuffle_epi8(vowels, str);\n      |                            ^\n[REDACTED]/tmpzy8o7ypd.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp12fkj47l.cpp:38:114: error: '__builtin_ia32_pcmpistrm128' needs target feature sse4.2\n   38 |         __m128i upper = _mm_and_si128(_mm_cmpeq_epi8(_mm_and_si128(str, _mm_set1_epi8(0x20)), _mm_set1_epi8(0)), _mm_cmpistrm(vowels, str, 0x28));\n      |                                                                                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1607:13: note: expanded from macro '_mm_cmpistrm'\n 1607 |   ((__m128i)__builtin_ia32_pcmpistrm128((__v16qi)(__m128i)(A),                 \\\n      |             ^\n[REDACTED]/tmp12fkj47l.cpp:39:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   39 |         count += _mm_popcnt_u32(_mm_movemask_epi8(upper));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy3ntqw9a.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb8nw6i6y.cpp:34:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   34 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8iv6dxvf.cpp:40:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i vowels_mask = _mm_shuffle_epi8(vowels, _mm_and_si128(upper, even_indices));\n      |                               ^\n[REDACTED]/tmp8iv6dxvf.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(vowels_mask));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0nqyuwyi.cpp:55:31: error: no member named 'bitset' in namespace 'std'\n   55 |     std::string binary = std::bitset<32>(rounded_avg).to_string();\n      |                          ~~~~~^\n[REDACTED]/tmp0nqyuwyi.cpp:55:54: error: member reference base type 'int' is not a structure or union\n   55 |     std::string binary = std::bitset<32>(rounded_avg).to_string();\n      |                                         ~~~~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzz4ao0dz.cpp:55:35: error: no member named 'bitset' in namespace 'std'\n   55 |     std::string binary_avg = std::bitset<64>(rounded_avg).to_string();\n      |                              ~~~~~^\n[REDACTED]/tmpzz4ao0dz.cpp:55:58: error: member reference base type 'int' is not a structure or union\n   55 |     std::string binary_avg = std::bitset<64>(rounded_avg).to_string();\n      |                                             ~~~~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr_n9m_ay.cpp:56:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   56 |         factorial = _mm_mullo_epi32(factorial, indices);\n      |                     ^\n[REDACTED]/tmpr_n9m_ay.cpp:62:50: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   62 |         _mm_storeu_si128((__m128i*)&result[i-1], _mm_blendv_epi8(sum, factorial, _mm_cmplt_epi32(indices, _mm_set1_epi32(10000))));\n      |                                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpurdd2p0m.cpp:67:24: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |             int mask = _mm_extract_epi32(factorial_mask, j);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpurdd2p0m.cpp:68:27: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   68 |             int sum_val = _mm_extract_epi32(sum, j);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpurdd2p0m.cpp:69:33: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   69 |             int factorial_val = _mm_extract_epi32(factorial_mod, j);\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpurdd2p0m.cpp:71:26: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   71 |             sum_result = _mm_insert_epi32(sum_result, mask ? sum_val : factorial_val, j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpurdd2p0m.cpp:72:32: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   72 |             factorial_result = _mm_insert_epi32(factorial_result, mask ? factorial_val : sum_val, j);\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8xv_flea.cpp:59:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i factResult = _mm_mullo_epi32(factorial, indices);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqrbsn2ew.cpp:53:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   53 |         factorial = _mm_mullo_epi32(factorial, _mm_set_epi32(i, i-1, i-2, i-3));\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7k8iizb5.cpp:56:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   56 |         factorial = _mm_mullo_epi32(factorial, indices);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_113_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjfs1ull6.cpp:55:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   55 |             __m128i num = _mm_shuffle_epi32(abs_nums, _MM_SHUFFLE(j, j, j, j));\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpan90s9wj.cpp:58:45: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |         __m128i tens_digits = _mm_and_si128(_mm_div_epi32(abs_nums, tens), units);\n      |                                             ^~~~~~~~~~~~~\n      |                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpan90s9wj.cpp:59:49: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   59 |         __m128i hundreds_digits = _mm_and_si128(_mm_div_epi32(abs_nums, _mm_mullo_epi32(tens, tens)), units);\n      |                                                 ^~~~~~~~~~~~~\n      |                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjf_6ba26.cpp:58:45: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |         __m128i tens_digits = _mm_and_si128(_mm_div_epi32(abs_nums, tens), units);\n      |                                             ^~~~~~~~~~~~~\n      |                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpjf_6ba26.cpp:59:49: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   59 |         __m128i hundreds_digits = _mm_and_si128(_mm_div_epi32(abs_nums, _mm_mullo_epi32(tens, tens)), units);\n      |                                                 ^~~~~~~~~~~~~\n      |                                                 _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp11pran39.cpp:58:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |             __m128i digit = _mm_div_epi32(_mm_and_si128(abs_nums, digits), divisors);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7lv9bd15.cpp:56:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   56 |             __m128i num = _mm_shuffle_epi32(abs_nums, _MM_SHUFFLE(j, j, j, j));\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptpaqak9k.cpp:52:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   52 |         if (!_mm_test_all_zeros(odd_mask, all_ones)) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc4r6ijfk.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_test_all_zeros(odd_mask, all_ones)) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppgxi4xtj.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_test_all_zeros(odd_mask, all_ones)) {\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp32r5cswt.cpp:63:25: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   63 |             oddCount += _mm_popcnt_u32(_mm_movemask_epi8(oddDigits));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9nxwj9w8.cpp:59:34: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   59 |             int oddDigitsCount = _mm_popcnt_u32(_mm_movemask_epi8(oddDigits));\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvtc6zokz.cpp:48:19: error: no matching function for call to 'min'\n   48 |         min_sum = std::min(min_sum, _mm_cvtsi128_si64(min_sum_v));\n      |                   ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcksl04xl.cpp:42:19: error: no matching function for call to 'min'\n   42 |         min_sum = std::min(min_sum, _mm_cvtsi128_si64(min_sum_v));\n      |                   ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj8eadsw_.cpp:42:21: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   42 |         min_sum_v = _mm_min_epi64(min_sum_v, sum_v);\n      |                     ^\n[REDACTED]/tmpj8eadsw_.cpp:46:21: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   46 |         min_sum_v = _mm_min_epi64(min_sum_v, sum_v);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphixd7ywz.cpp:48:19: error: no matching function for call to 'min'\n   48 |         min_sum = std::min(min_sum, _mm_cvtsi128_si64(min_sum_v));\n      |                   ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpax805ikk.cpp:43:21: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   43 |         min_sum_v = _mm_min_epi64(min_sum_v, current_sum_v);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprhtav1lz.cpp:46:39: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   46 |             __m128i positive_excess = _mm_max_epi32(excess_water, _mm_setzero_si128());\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ylt_wxd.cpp:44:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i minVec = _mm_min_epi32(filledVec, diffVec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpejjteem3.cpp:46:39: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   46 |             __m128i positive_excess = _mm_max_epi32(excess_water, _mm_setzero_si128());\n      |                                       ^\n[REDACTED]/tmpejjteem3.cpp:49:46: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   49 |             row_sum = _mm_sub_epi32(row_sum, _mm_mullo_epi32(positive_excess, _mm_set1_epi32(1)));\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6uihgz_y.cpp:42:39: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128i positive_excess = _mm_max_epi32(excess_water, _mm_setzero_si128());\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnusasqv6.cpp:39:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   39 |         signs_product = _mm_mullo_epi32(signs_product, signs);\n      |                         ^\n[REDACTED]/tmpnusasqv6.cpp:41:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_values = _mm_abs_epi32(values);\n      |                              ^\n[REDACTED]/tmpnusasqv6.cpp:45:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   45 |     __m128i result = _mm_mullo_epi32(sum, signs_product);\n      |                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6t97euro.cpp:40:25: error: no matching function for call to '_mm_sign_epi32'\n   40 |         __m128i signs = _mm_sign_epi32(values);\n      |                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:694:1: note: candidate function not viable: requires 2 arguments, but 1 was provided\n  694 | _mm_sign_epi32(__m128i __a, __m128i __b)\n      | ^              ~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp6t97euro.cpp:53:37: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   53 |         final_result += result[i] * _mm_extract_epi32(signs_product, i);\n      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0pjw3fl5.cpp:50:37: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   50 |         final_result += result[i] * _mm_extract_epi32(signs_product, i);\n      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpde0thu8l.cpp:38:25: error: no matching function for call to '_mm_sign_epi32'\n   38 |         __m128i signs = _mm_sign_epi32(values);\n      |                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:694:1: note: candidate function not viable: requires 2 arguments, but 1 was provided\n  694 | _mm_sign_epi32(__m128i __a, __m128i __b)\n      | ^              ~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpde0thu8l.cpp:49:37: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   49 |         final_result += result[i] * _mm_extract_epi32(signs_product, i);\n      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5505cwtv.cpp:40:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_values = _mm_abs_epi32(values);\n      |                              ^\n[REDACTED]/tmp5505cwtv.cpp:41:42: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i abs_values_times_signs = _mm_mullo_epi32(abs_values, signs);\n      |                                          ^\n[REDACTED]/tmp5505cwtv.cpp:43:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   43 |         signs_product = _mm_mullo_epi32(signs_product, signs);\n      |                         ^\n[REDACTED]/tmp5505cwtv.cpp:47:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   47 |     __m128i result = _mm_mullo_epi32(sum, signs_product);\n      |                      ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpytgw9kq8.cpp:72:29: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i min_value = _mm_min_epu32(values, _mm_shuffle_epi32(values, _MM_SHUFFLE(0, 3, 2, 1)));\n      |                             ^\n[REDACTED]/tmpytgw9kq8.cpp:73:21: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   73 |         min_value = _mm_min_epu32(min_value, _mm_shuffle_epi32(min_value, _MM_SHUFFLE(2, 1, 0, 3)));\n      |                     ^\n[REDACTED]/tmpytgw9kq8.cpp:77:16: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   77 |         path = _mm_insert_epi32(path, index, 0);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3eu32z0a.cpp:72:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   72 |         min_values = _mm_blendv_epi8(min_values, current_values, cmp_mask);\n      |                      ^\n[REDACTED]/tmp3eu32z0a.cpp:73:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   73 |         min_indices = _mm_blendv_epi8(min_indices, _mm_set_epi32(i, i, i, i), cmp_mask);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcuj11a1m.cpp:81:16: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   81 |         path = _mm_insert_epi32(path, _mm_extract_epi32(min_idx, 0), i);\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdc01nerw.cpp:75:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   75 |                 min_values = _mm_min_epi32(min_values, current_value);\n      |                              ^\n[REDACTED]/tmpdc01nerw.cpp:77:38: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   77 |                 __m128i new_values = _mm_min_epi32(min_values, current_value);\n      |                                      ^\n[REDACTED]/tmpdc01nerw.cpp:79:39: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   79 |                 __m128i new_indices = _mm_blendv_epi8(indices, current_indices, cmp_mask);\n      |                                       ^\n[REDACTED]/tmpdc01nerw.cpp:80:43: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'minPath_simd' that is compiled without support for 'ssse3'\n   80 |                 __m128i shuffle_indices = _mm_shuffle_epi8(new_indices, shuffle_mask);\n      |                                           ^\n[REDACTED]/tmpdc01nerw.cpp:81:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   81 |                 min_values = _mm_min_epi32(min_values, new_values);\n      |                              ^\n[REDACTED]/tmpdc01nerw.cpp:82:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   82 |                 indices = _mm_blendv_epi8(indices, shuffle_indices, cmp_mask);\n      |                           ^\n6 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdl_2hzmh.cpp:48:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digits_simd' that is compiled without support for 'ssse3'\n   48 |     __m128i result = _mm_hadd_epi16(odd_digits, odd_digits);\n      |                      ^\n[REDACTED]/tmpdl_2hzmh.cpp:49:14: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digits_simd' that is compiled without support for 'ssse3'\n   49 |     result = _mm_hadd_epi16(result, result);\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv548btzx.cpp:30:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         __m128 rounded_values = _mm_ceil_ps(values);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpv548btzx.cpp:47:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:47:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:48:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:48:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:49:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:49:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpv548btzx.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpv548btzx.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpou41xqyw.cpp:30:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         __m128 rounded_values = _mm_ceil_ps(values);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpou41xqyw.cpp:47:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:47:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:48:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:48:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:49:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:49:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpou41xqyw.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpou41xqyw.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxzcnqm8w.cpp:42:23: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         squaredVals = _mm_mullo_epi32(ceiling, ceiling);\n      |                       ^\n[REDACTED]/tmpxzcnqm8w.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxzcnqm8w.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxzcnqm8w.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7aidmit8.cpp:30:33: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         __m128 rounded_values = _mm_ceil_ps(values);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7aidmit8.cpp:47:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:47:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   47 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:48:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:48:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   48 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:49:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:49:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   49 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7aidmit8.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7aidmit8.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6si8_gzb.cpp:30:35: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   30 |         intVals = _mm_cvtps_epi32(_mm_ceil_ps(_mm_loadu_ps(&lst[i])));\n      |                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp6si8_gzb.cpp:31:23: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   31 |         squaredVals = _mm_mullo_epi32(intVals, intVals);\n      |                       ^\n[REDACTED]/tmp6si8_gzb.cpp:40:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   40 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:40:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   40 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:41:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   41 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:41:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   41 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:42:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   42 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:42:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   42 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:43:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   43 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:43:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   43 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:44:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   44 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:44:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   44 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:45:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   45 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:45:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   45 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:46:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   46 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:46:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   46 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:47:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   47 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:47:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   47 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:48:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   48 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:48:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   48 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:49:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   49 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:49:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   49 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp6si8_gzb.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp6si8_gzb.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8umg1ili.cpp:58:114: error: expected ')'\n   58 |     int largest_neg = std::max(std::max(max_neg_arr[0], max_neg_arr[1]), std::max(max_neg_arr[2], max_neg_arr[3]);\n      |                                                                                                                  ^\n[REDACTED]/tmp8umg1ili.cpp:58:31: note: to match this '('\n   58 |     int largest_neg = std::max(std::max(max_neg_arr[0], max_neg_arr[1]), std::max(max_neg_arr[2], max_neg_arr[3]);\n      |                               ^\n[REDACTED]/tmp8umg1ili.cpp:59:115: error: expected ')'\n   59 |     int smallest_pos = std::min(std::min(min_pos_arr[0], min_pos_arr[1]), std::min(min_pos_arr[2], min_pos_arr[3]);\n      |                                                                                                                   ^\n[REDACTED]/tmp8umg1ili.cpp:59:32: note: to match this '('\n   59 |     int smallest_pos = std::min(std::min(min_pos_arr[0], min_pos_arr[1]), std::min(min_pos_arr[2], min_pos_arr[3]);\n      |                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbtsfczxi.cpp:52:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         max_neg = _mm_max_epi32(max_neg, neg_values);\n      |                   ^\n[REDACTED]/tmpbtsfczxi.cpp:53:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |         min_pos = _mm_min_epi32(min_pos, pos_values);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgc0cwqm7.cpp:48:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   48 |         max_neg = _mm_max_epi32(max_neg, neg_values);\n      |                   ^\n[REDACTED]/tmpgc0cwqm7.cpp:49:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         min_pos = _mm_min_epi32(min_pos, pos_values);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqg9q6odh.cpp:48:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   48 |         max_neg = _mm_max_epi32(max_neg, neg_values);\n      |                   ^\n[REDACTED]/tmpqg9q6odh.cpp:49:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         min_pos = _mm_min_epi32(min_pos, pos_values);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5628ebw5.cpp:60:117: error: expected ')'\n   60 |     int max_neg_result = std::max(std::max(max_neg_arr[0], max_neg_arr[1]), std::max(max_neg_arr[2], max_neg_arr[3]);\n      |                                                                                                                     ^\n[REDACTED]/tmp5628ebw5.cpp:60:34: note: to match this '('\n   60 |     int max_neg_result = std::max(std::max(max_neg_arr[0], max_neg_arr[1]), std::max(max_neg_arr[2], max_neg_arr[3]);\n      |                                  ^\n[REDACTED]/tmp5628ebw5.cpp:61:117: error: expected ')'\n   61 |     int min_pos_result = std::min(std::min(min_pos_arr[0], min_pos_arr[1]), std::min(min_pos_arr[2], min_pos_arr[3]);\n      |                                                                                                                     ^\n[REDACTED]/tmp5628ebw5.cpp:61:34: note: to match this '('\n   61 |     int min_pos_result = std::min(std::min(min_pos_arr[0], min_pos_arr[1]), std::min(min_pos_arr[2], min_pos_arr[3]);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps_v0qqz4.cpp:41:34: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i squared_values = _mm_mullo_epi32(values, values);\n      |                                  ^\n[REDACTED]/tmps_v0qqz4.cpp:42:48: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubed_values = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                                ^\n[REDACTED]/tmps_v0qqz4.cpp:42:32: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubed_values = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkj8vobkv.cpp:41:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmpkj8vobkv.cpp:42:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                         ^\n[REDACTED]/tmpkj8vobkv.cpp:42:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz4ttlc77.cpp:40:33: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i square_values = _mm_mullo_epi32(vec, vec);\n      |                                 ^\n[REDACTED]/tmpz4ttlc77.cpp:41:47: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i cube_values = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                               ^\n[REDACTED]/tmpz4ttlc77.cpp:41:31: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i cube_values = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmibpwiib.cpp:40:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmpmibpwiib.cpp:41:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                         ^\n[REDACTED]/tmpmibpwiib.cpp:41:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8q0hov55.cpp:41:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmp8q0hov55.cpp:42:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                         ^\n[REDACTED]/tmp8q0hov55.cpp:42:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuitfxway.cpp:54:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   54 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps0h1lelq.cpp:39:27: error: always_inline function '_mm_abs_epi8' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i abs_vec = _mm_abs_epi8(vec);\n      |                           ^\n[REDACTED]/tmps0h1lelq.cpp:50:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5ksjkjxr.cpp:42:26: error: always_inline function '_mm_abs_epi8' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i absVec = _mm_abs_epi8(vec);\n      |                          ^\n[REDACTED]/tmp5ksjkjxr.cpp:49:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   49 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr_qz2060.cpp:55:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   55 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6urnwgy3.cpp:51:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   51 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3zf8vu8g.cpp:70:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   70 |         __m128i i_squared = _mm_mullo_epi32(i_values, i_values);\n      |                             ^\n[REDACTED]/tmp3zf8vu8g.cpp:75:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'popcnt'\n   75 |         count += _mm_popcnt_u32(_mm_movemask_epi8(divisible_by_3));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf0kqu9gf.cpp:78:27: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   78 |             __m128i cmp = _mm_cmpeq_epi64(mod, _mm_setzero_si128());\n      |                           ^\n[REDACTED]/tmpf0kqu9gf.cpp:79:22: error: always_inline function '_mm_popcnt_u64' requires target feature 'popcnt', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'popcnt'\n   79 |             count += _mm_popcnt_u64(_mm_movemask_epi8(cmp));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1qmaum2i.cpp:71:27: error: no matching function for call to '_mm_set_epi64x'\n   71 |         __m128i indices = _mm_set_epi64x(i+1, i, i+1, i);\n      |                           ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmp1qmaum2i.cpp:83:76: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   83 |     count += _mm_extract_epi64(result, 0) + _mm_extract_epi64(result, 1) + _mm_extract_epi64(result, 2) + _mm_extract_epi64(result, 3);\n      |                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmp1qmaum2i.cpp:83:107: error: argument value 3 is outside the valid range [0, 1] [-Wargument-outside-range]\n   83 |     count += _mm_extract_epi64(result, 0) + _mm_extract_epi64(result, 1) + _mm_extract_epi64(result, 2) + _mm_extract_epi64(result, 3);\n      |                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9t6e63vk.cpp:72:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   72 |         __m128i values = _mm_mullo_epi32(indices, indices);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd700qeko.cpp:71:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   71 |         __m128i i_squared = _mm_mullo_epi32(indices, indices);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp51tfu3sb.cpp:32:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   32 |     __m128i result = _mm_blendv_epi8(_mm_set1_epi32(y), _mm_set1_epi32(x), _mm_cmpeq_epi32(num, mask));\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa07v91o5.cpp:38:34: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i squared_values = _mm_mullo_epi32(values, values);\n      |                                  ^\n[REDACTED]/tmpa07v91o5.cpp:51:24: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   51 |     __m128i sum_perm = _mm_hadd_epi32(sum, sum);\n      |                        ^\n[REDACTED]/tmpa07v91o5.cpp:52:29: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   52 |     __m128i sum_perm_perm = _mm_hadd_epi32(sum_perm, sum_perm);\n      |                             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoal0fh5j.cpp:57:30: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   57 |     __m128i sum_horizontal = _mm_hadd_epi32(sum, sum);\n      |                              ^\n[REDACTED]/tmpoal0fh5j.cpp:58:22: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   58 |     sum_horizontal = _mm_hadd_epi32(sum_horizontal, sum_horizontal);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpow2cjtcd.cpp:41:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfwar9ps0.cpp:41:31: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i squared_odd = _mm_mullo_epi32(vec, vec);\n      |                               ^\n[REDACTED]/tmpfwar9ps0.cpp:51:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   51 |     __m128i sum_128 = _mm_hadd_epi32(result, result);\n      |                       ^\n[REDACTED]/tmpfwar9ps0.cpp:52:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   52 |     sum_128 = _mm_hadd_epi32(sum_128, sum_128);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvq3nubrx.cpp:39:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i diff = _mm_abs_epi32(_mm_sub_epi32(game_vec, guess_vec));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjg3djoo3.cpp:39:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i diff = _mm_abs_epi32(_mm_sub_epi32(game_vec, guess_vec));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnclton2q.cpp:39:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i diff = _mm_abs_epi32(_mm_sub_epi32(game_vec, guess_vec));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf0gepb8u.cpp:35:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   35 |         __m128i diff = _mm_abs_epi32(_mm_sub_epi32(game_vec, guess_vec));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps1t2suie.cpp:39:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i diff = _mm_abs_epi32(_mm_sub_epi32(game_vec, guess_vec));\n      |                        ^\n1 error generated.\n"}

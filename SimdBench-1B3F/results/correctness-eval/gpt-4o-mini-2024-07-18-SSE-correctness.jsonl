{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcdjnbb54.cpp:35:20: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   35 |         mask_int = _mm_cmpeq_epi64(mask_int, _mm_set1_epi64x(1));\n      |                    ^\n[REDACTED]/tmpcdjnbb54.cpp:38:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i dst_vals = _mm_blendv_epi8(_mm_setzero_si128(), src_vals, mask_int);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjz2t48_n.cpp:37:29: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i mask_copy = _mm_cmpeq_epi64(mask_int, zero);\n      |                             ^\n[REDACTED]/tmpjz2t48_n.cpp:40:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   40 |         src_vec = _mm_blendv_epi8(src_vec, zero, mask_copy);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphq4324sy.cpp:37:29: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i mask_cond = _mm_cmpeq_epi64(mask_int, _mm_set1_epi64x(1));\n      |                             ^\n[REDACTED]/tmphq4324sy.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i result = _mm_blendv_epi8(_mm_set1_epi64x(0), src_vals, mask_cond);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpag71ofjw.cpp:34:39: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i tmp1 = _mm_srai_epi32(_mm_mullo_epi32(src_vec, scale_vec), 3);\n      |                                       ^\n[REDACTED]/tmpag71ofjw.cpp:35:39: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i tmp2 = _mm_slli_epi32(_mm_mullo_epi32(src_vec, scale_vec), 3);\n      |                                       ^\n[REDACTED]/tmpag71ofjw.cpp:37:40: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i result = _mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2));\n      |                                        ^\n[REDACTED]/tmpag71ofjw.cpp:37:77: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i result = _mm_add_epi32(_mm_mullo_epi32(src_vec, scale_vec), _mm_mullo_epi32(tmp1, tmp2));\n      |                                                                             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6zz5r3p9.cpp:33:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i scaled_vec = _mm_mullo_epi32(src_vec, scale_vec);\n      |                              ^\n[REDACTED]/tmp6zz5r3p9.cpp:38:52: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i result = _mm_add_epi32(scaled_vec, _mm_mullo_epi32(tmp1, tmp2));\n      |                                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiglve6fm.cpp:35:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i scaled_vec = _mm_mullo_epi32(src_vec, scale_vec);\n      |                              ^\n[REDACTED]/tmpiglve6fm.cpp:40:52: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'load_modify_store_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i result = _mm_add_epi32(scaled_vec, _mm_mullo_epi32(tmp1, tmp2));\n      |                                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp50t4il09.cpp:38:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         result = _mm_div_epi32(result, _mm_set1_epi32(7));\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpka2ujfi_.cpp:38:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         result = _mm_div_epi32(result, _mm_set1_epi32(7));\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprkfz2n8r.cpp:31:9: error: no matching function for call to '_mm_storeu_pd'\n   31 |         _mm_storeu_pd(&dst_vec[i], data);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1934:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1934 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_pd(double *__dp,\n      |                                           ^             ~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4vr27d4v.cpp:31:9: error: no matching function for call to '_mm_storeu_pd'\n   31 |         _mm_storeu_pd(&dst_ptr[i], data);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1934:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1934 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_pd(double *__dp,\n      |                                           ^             ~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt9n7go29.cpp:31:9: error: no matching function for call to '_mm_storeu_pd'\n   31 |         _mm_storeu_pd(&dst_vec[i], data);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1934:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1934 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_pd(double *__dp,\n      |                                           ^             ~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe0iebnjb.cpp:30:9: error: no matching function for call to '_mm_store_pd'\n   30 |         _mm_store_pd(&dst_ptr[r], data1);\n      |         ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1878:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1878 | static __inline__ void __DEFAULT_FN_ATTRS _mm_store_pd(double *__dp,\n      |                                           ^            ~~~~~~~~~~~~\n[REDACTED]/tmpe0iebnjb.cpp:31:9: error: no matching function for call to '_mm_store_pd'\n   31 |         _mm_store_pd(&dst_ptr[r + 1], data2);\n      |         ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1878:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1878 | static __inline__ void __DEFAULT_FN_ATTRS _mm_store_pd(double *__dp,\n      |                                           ^            ~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo1_ngpbv.cpp:32:9: error: no matching function for call to '_mm_storeu_pd'\n   32 |         _mm_storeu_pd(dst_ptr + i, data);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1934:43: note: candidate function not viable: no known conversion from '__m128d *' to 'double *' for 1st argument\n 1934 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_pd(double *__dp,\n      |                                           ^             ~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpis3xul1m.cpp:36:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                          ~~~^~~~~~~~~~\n[REDACTED]/tmpis3xul1m.cpp:36:68: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                 ~~~^~~~~~~~~~\n[REDACTED]/tmpis3xul1m.cpp:36:91: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                                        ~~~^~~~~~~~~~\n[REDACTED]/tmpis3xul1m.cpp:36:114: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                                                               ~~~^~~~~~~~~~\n[REDACTED]/tmpis3xul1m.cpp:43:31: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |         _mm_storeu_ps(&dst[idx.m128i_i32[0]], src_vals);\n      |                            ~~~^~~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc30teclz.cpp:36:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                          ~~~^~~~~~~~~~\n[REDACTED]/tmpc30teclz.cpp:36:68: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                 ~~~^~~~~~~~~~\n[REDACTED]/tmpc30teclz.cpp:36:91: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                                        ~~~^~~~~~~~~~\n[REDACTED]/tmpc30teclz.cpp:36:114: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128 src_vals = _mm_set_ps(src[idx.m128i_i32[3]], src[idx.m128i_i32[2]], src[idx.m128i_i32[1]], src[idx.m128i_i32[0]]);\n      |                                                                                                               ~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_zfcthur.cpp:39:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   39 |             src[idx.m128i_i32[3]],\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:40:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   40 |             src[idx.m128i_i32[2]],\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:41:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   41 |             src[idx.m128i_i32[1]],\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:42:20: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |             src[idx.m128i_i32[0]]\n      |                 ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:51:31: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         _mm_storeu_ps(&dst[idx.m128i_i32[0]], src_vals);\n      |                            ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:52:31: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |         _mm_storeu_ps(&dst[idx.m128i_i32[1]], src_vals);\n      |                            ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:53:31: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         _mm_storeu_ps(&dst[idx.m128i_i32[2]], src_vals);\n      |                            ~~~^~~~~~~~~~\n[REDACTED]/tmp_zfcthur.cpp:54:31: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |         _mm_storeu_ps(&dst[idx.m128i_i32[3]], src_vals);\n      |                            ~~~^~~~~~~~~~\n8 errors generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpel4xq02u.cpp:42:21: error: use of undeclared identifier '_MM_TRANSPOSE8_SI128'\n   42 |                     _MM_TRANSPOSE8_SI128(row, row2);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm3ccglm9.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   37 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpm3ccglm9.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   38 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb148n8ow.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   37 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpb148n8ow.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   38 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp900iplu8.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   37 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmp900iplu8.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'diagonal_sum_3d_simd' that is compiled without support for 'sse3'\n   38 |     sum_vec = _mm_hadd_ps(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsruzzr71.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_3ccxyr5.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy73bb80q.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5lv6dsyw.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk96iaolg.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbgzv2l9r.cpp:34:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   34 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvcvhklv8.cpp:35:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   35 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpteqvkhma.cpp:35:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   35 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpma86l70j.cpp:34:18: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   34 |         result = _mm_srai_epi64(result, 1);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpswa5ahfg.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_vec = _mm_min_epi32(min_vec, data);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp78kr4jhm.cpp:38:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   38 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp90aximav.cpp:38:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   38 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcwqwjniz.cpp:38:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   38 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n[REDACTED]/tmpcwqwjniz.cpp:43:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |             min_val = _mm_min_epi32(min_val, _mm_set1_epi32(src[i]));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp76fptj4t.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_val = _mm_min_epi32(min_val, even_elements);\n      |                   ^\n[REDACTED]/tmp76fptj4t.cpp:45:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   45 |             min_val = _mm_min_epi32(min_val, _mm_set1_epi32(src[i]));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppxoo4sqv.cpp:37:52: error: use of undeclared identifier '_mm_cvtepi32_epi32'\n   37 |         __m128i unsigned_data = _mm_cvtepu32_epi32(_mm_cvtepi32_epi32(data));\n      |                                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp38ysj5n0.cpp:37:33: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'mixed_right_shift_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i unsigned_data = _mm_cvtepi32_epi64(data);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp78s2uotv.cpp:37:33: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   37 |         __m128i unsigned_data = _mm_cvtepu32_epi32(data);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqnn3vrh5.cpp:37:33: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'mixed_right_shift_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i unsigned_data = _mm_cvtepi32_epi64(data);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmml8x8bn.cpp:37:33: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'mixed_right_shift_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i unsigned_data = _mm_cvtepi32_epi64(data);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzgh1sd7s.cpp:42:17: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   42 |             if (_mm_extract_epi8(cmp, j)) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprtsahdkd.cpp:40:29: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   40 |             max_index = i + _mm_extract_epi8(cmp, _mm_cvtsi128_si32(cmp));\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb_i3wqo7.cpp:39:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   39 |         max_val = _mm_max_epi8(max_val, data);\n      |                   ^\n[REDACTED]/tmpb_i3wqo7.cpp:40:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_idx = _mm_blendv_epi8(max_idx, _mm_set1_epi8(i), cmp);\n      |                   ^\n[REDACTED]/tmpb_i3wqo7.cpp:45:22: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   45 |         if (src[i] > _mm_extract_epi8(max_val, 0)) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpb_i3wqo7.cpp:55:30: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   55 |         if (max_values[j] == _mm_extract_epi8(max_val, 0)) {\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcs0wth0t.cpp:39:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   39 |         max_val = _mm_max_epi8(max_val, current_vals);\n      |                   ^\n[REDACTED]/tmpcs0wth0t.cpp:40:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_idx = _mm_blendv_epi8(max_idx, _mm_set1_epi8(i), cmp_mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbpi8zy42.cpp:42:17: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   42 |             if (_mm_extract_epi8(cmp, j) != 0) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpezsnvr_5.cpp:37:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i result = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpheki7zmo.cpp:37:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i result = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1ehi3np7.cpp:37:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i result = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9y9u9j_w.cpp:37:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i blended = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv_ss4lt0.cpp:37:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i blended = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpng63u_ou.cpp:41:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   41 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpng63u_ou.cpp:42:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   42 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjtt98naa.cpp:45:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   45 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpjtt98naa.cpp:46:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   46 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp10sunuo2.cpp:41:42: error: always_inline function '_mm_popcnt_epi32' requires target feature 'avx512vpopcntdq', but would be inlined into function 'population_count_simd' that is compiled without support for 'avx512vpopcntdq'\n   41 |             count = _mm_add_epi32(count, _mm_popcnt_epi32(byte));\n      |                                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1i6dguxy.cpp:36:25: error: always_inline function '_mm_popcnt_epi32' requires target feature 'avx512vpopcntdq', but would be inlined into function 'population_count_simd' that is compiled without support for 'avx512vpopcntdq'\n   36 |         __m128i count = _mm_popcnt_epi32(data);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8i_vjmrj.cpp:53:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   53 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_k9u50t0.cpp:52:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   52 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1q6mqscq.cpp:56:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   56 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5ycv680j.cpp:56:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   56 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppn3ggyk4.cpp:55:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   55 |             sum = _mm_hadd_pd(sum, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfi0qyb7z.cpp:33:17: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         v_sum = _mm_round_ps(v_sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2c2vgg5_.cpp:33:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxiqweeld.cpp:33:23: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         vec_rounded = _mm_round_ps(vec_sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9krckfe0.cpp:33:17: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         v_sum = _mm_round_ps(v_sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsghbr7_b.cpp:33:17: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   33 |         v_sum = _mm_round_ps(v_sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbijfix05.cpp:45:41: error: use of undeclared identifier '_mm_neg_ps'\n   45 |         abs_diff = _mm_max_ps(abs_diff, _mm_neg_ps(diff));\n      |                                         ^\n[REDACTED]/tmpbijfix05.cpp:49:39: error: use of undeclared identifier '_MM_FROUND_UP'\n   49 |         result = _mm_round_ps(result, _MM_FROUND_UP);\n      |                                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc4g7348g.cpp:44:41: error: use of undeclared identifier '_MM_FROUND_UP'\n   44 |         vResult = _mm_round_ps(vResult, _MM_FROUND_UP);\n      |                                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9rkxrw2w.cpp:43:37: error: use of undeclared identifier '_MM_FROUND_UP'\n   43 |             mul = _mm_round_ps(mul, _MM_FROUND_UP);\n      |                                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcqm7d4_e.cpp:43:43: error: use of undeclared identifier '_MM_FROUND_UP'\n   43 |             result = _mm_round_ps(result, _MM_FROUND_UP);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_dh5tbh6.cpp:40:45: error: use of undeclared identifier '_mm_neg_ps'\n   40 |         v_abs_diff = _mm_max_ps(v_abs_diff, _mm_neg_ps(v_diff));\n      |                                             ^\n[REDACTED]/tmp_dh5tbh6.cpp:47:43: error: use of undeclared identifier '_MM_FROUND_UP'\n   47 |         v_result = _mm_round_ps(v_result, _MM_FROUND_UP);\n      |                                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppi2monnl.cpp:46:23: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   46 |         sum_squares = _mm_hadd_ps(sum_squares, sum_squares);\n      |                       ^\n[REDACTED]/tmppi2monnl.cpp:47:23: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   47 |         sum_squares = _mm_hadd_ps(sum_squares, sum_squares);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvhrkdgsm.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             t1 = _mm_round_ps(_mm_add_ps(t1, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpvhrkdgsm.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             t2 = _mm_round_ps(_mm_add_ps(t2, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpvhrkdgsm.cpp:50:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             t3 = _mm_round_ps(_mm_add_ps(t3, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpvhrkdgsm.cpp:51:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             t4 = _mm_round_ps(_mm_add_ps(t4, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7e0dk_jc.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             t0 = _mm_round_ps(_mm_add_ps(t0, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7e0dk_jc.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             t1 = _mm_round_ps(_mm_add_ps(t1, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7e0dk_jc.cpp:50:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             t2 = _mm_round_ps(_mm_add_ps(t2, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7e0dk_jc.cpp:51:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             t3 = _mm_round_ps(_mm_add_ps(t3, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo8ameudh.cpp:48:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             row0 = _mm_round_ps(_mm_add_ps(row0, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpo8ameudh.cpp:49:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             row1 = _mm_round_ps(_mm_add_ps(row1, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpo8ameudh.cpp:50:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             row2 = _mm_round_ps(_mm_add_ps(row2, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpo8ameudh.cpp:51:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             row3 = _mm_round_ps(_mm_add_ps(row3, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb0dsrww7.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             t0 = _mm_round_ps(_mm_add_ps(t0, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpb0dsrww7.cpp:49:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   49 |             t1 = _mm_round_ps(_mm_add_ps(t1, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpb0dsrww7.cpp:50:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   50 |             t2 = _mm_round_ps(_mm_add_ps(t2, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpb0dsrww7.cpp:51:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   51 |             t3 = _mm_round_ps(_mm_add_ps(t3, _mm_set1_ps(0.125f)), _MM_FROUND_TO_NEAREST_INT);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7ekuoewi.cpp:32:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   32 |             row = _mm_floor_ps(row); // Floor the values\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7ekuoewi.cpp:34:19: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |             row = _mm_round_ps(row, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC); // Round to nearest\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn1tk1g1e.cpp:39:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         result = _mm_round_ps(result, _MM_FROUND_TO_ZERO);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwicpm31d.cpp:38:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         result = _mm_round_ps(result, _MM_FROUND_TO_ZERO);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbq055v07.cpp:38:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         result = _mm_round_ps(result, _MM_FROUND_TO_ZERO);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp014_rlag.cpp:38:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         result = _mm_round_ps(result, _MM_FROUND_TO_ZERO);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcviz7psu.cpp:38:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         result = _mm_round_ps(result, _MM_FROUND_TO_ZERO);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_csia_2h.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmp_csia_2h.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpexzb_znp.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpexzb_znp.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2zea9rlv.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmp2zea9rlv.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj0hysctb.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpj0hysctb.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4lfl3hfs.cpp:37:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   37 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmp4lfl3hfs.cpp:38:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   38 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdqwhm2s0.cpp:36:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   36 |         __m128i div_vec1 = _mm_div_epi16(src_vec1, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpdqwhm2s0.cpp:37:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   37 |         __m128i div_vec2 = _mm_div_epi16(src_vec2, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmxbx1q3c.cpp:36:28: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   36 |         __m128i mod_vec1 = _mm_rem_epi16(src_vec1, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpmxbx1q3c.cpp:37:28: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   37 |         __m128i mod_vec2 = _mm_rem_epi16(src_vec2, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpipu7p5ai.cpp:36:24: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   36 |         __m128i mod1 = _mm_rem_epi16(src_vec1, base_vec);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpipu7p5ai.cpp:37:24: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   37 |         __m128i mod2 = _mm_rem_epi16(src_vec2, base_vec);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj2pdnn4p.cpp:34:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkrh280lg.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl_rdou88.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcu0bglj_.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(equal_mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdr3_spi2.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ymrt0ty.cpp:40:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx3qg9zdg.cpp:31:30: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   31 |         __m128i mul_result = _mm_mullo_epi64(scalar, vec_x);\n      |                              ^\n[REDACTED]/tmpx3qg9zdg.cpp:32:30: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   32 |         __m128i abs_result = _mm_abs_epi64(mul_result);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd37a0mwt.cpp:31:30: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   31 |         __m128i mul_result = _mm_mullo_epi64(scalar, vec_x);\n      |                              ^\n[REDACTED]/tmpd37a0mwt.cpp:32:30: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   32 |         __m128i abs_result = _mm_abs_epi64(mul_result);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj8eewaju.cpp:31:27: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   31 |         __m128i product = _mm_mullo_epi64(scalar, vec_x);\n      |                           ^\n[REDACTED]/tmpj8eewaju.cpp:32:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   32 |         __m128i abs_y = _mm_abs_epi64(product);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkynj99yp.cpp:31:27: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   31 |         __m128i product = _mm_mullo_epi64(scalar, vec_x);\n      |                           ^\n[REDACTED]/tmpkynj99yp.cpp:32:25: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   32 |         __m128i abs_y = _mm_abs_epi64(product);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo79y_9dp.cpp:33:30: error: use of undeclared identifier '_mm_sign_epi64'\n   33 |         __m128i abs_result = _mm_sign_epi64(mul_result, mul_result);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprtieiw1u.cpp:60:44: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   60 |         result.min_num = (result.min_num < _mm_extract_epi16(min_vec, i)) ? result.min_num : _mm_extract_epi16(min_vec, i);\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmprtieiw1u.cpp:60:94: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   60 |         result.min_num = (result.min_num < _mm_extract_epi16(min_vec, i)) ? result.min_num : _mm_extract_epi16(min_vec, i);\n      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmprtieiw1u.cpp:66:44: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   66 |         result.max_num = (result.max_num > _mm_extract_epi16(max_vec, i)) ? result.max_num : _mm_extract_epi16(max_vec, i);\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmprtieiw1u.cpp:66:94: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   66 |         result.max_num = (result.max_num > _mm_extract_epi16(max_vec, i)) ? result.max_num : _mm_extract_epi16(max_vec, i);\n      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0zlc2eob.cpp:72:44: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   72 |         result.min_num = (result.min_num < _mm_extract_epi16(min_val, i)) ? result.min_num : _mm_extract_epi16(min_val, i);\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmp0zlc2eob.cpp:72:94: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   72 |         result.min_num = (result.min_num < _mm_extract_epi16(min_val, i)) ? result.min_num : _mm_extract_epi16(min_val, i);\n      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmp0zlc2eob.cpp:73:44: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   73 |         result.max_num = (result.max_num > _mm_extract_epi16(max_val, i)) ? result.max_num : _mm_extract_epi16(max_val, i);\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmp0zlc2eob.cpp:73:94: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   73 |         result.max_num = (result.max_num > _mm_extract_epi16(max_val, i)) ? result.max_num : _mm_extract_epi16(max_val, i);\n      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp901yaq_y.cpp:27:27: warning: absolute value function 'fabsf' given an argument of type 'double' but has parameter of type 'float' which may cause truncation of value [-Wabsolute-value]\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^\n[REDACTED]/tmp901yaq_y.cpp:27:27: note: use function 'std::abs' instead\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^~~~~\n      |                           std::abs\n[REDACTED]/tmp901yaq_y.cpp:41:25: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]\n   41 |     __m128d first_block[block_size / 2];\n      |                         ^~~~~~~~~~~~~~\n[REDACTED]/tmp901yaq_y.cpp:41:25: note: function parameter 'block_size' with unknown value cannot be used in a constant expression\n[REDACTED]/tmp901yaq_y.cpp:35:89: note: declared here\n   35 | bool vector_block_equal_simd(const double* vec, double tolerance, size_t length, size_t block_size) {\n      |                                                                                         ^\n[REDACTED]/tmp901yaq_y.cpp:55:31: error: '__builtin_ia32_cmppd' needs target feature avx\n   55 |                 __m128d cmp = _mm_cmp_pd(abs_diff, tolerance_vec, _CMP_LT_OQ);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n2 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp25fk5dau.cpp:41:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   41 |         __m128d cmp_result = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7t9np7ru.cpp:40:23: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d cmp = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph3pgof62.cpp:40:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d cmp_result = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj_x4oq0u.cpp:40:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d cmp_result = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5796w1t6.cpp:40:30: error: '__builtin_ia32_cmppd' needs target feature avx\n   40 |         __m128d cmp_result = _mm_cmp_pd(norm_vec, threshold_vec, _CMP_GT_OQ);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1667:13: note: expanded from macro '_mm_cmp_pd'\n 1667 |   ((__m128d)__builtin_ia32_cmppd((__v2df)(__m128d)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd4ttoz0d.cpp:41:65: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         sum_squares = _mm_add_epi64(sum_squares, _mm_slli_epi32(_mm_maddubs_epi16(a, a), 16));\n      |                                                                 ^\n[REDACTED]/tmpd4ttoz0d.cpp:42:67: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         sum_products = _mm_add_epi64(sum_products, _mm_slli_epi32(_mm_maddubs_epi16(a, b), 16));\n      |                                                                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcct3j0i1.cpp:47:19: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   47 |     sum_squares = _mm_hadd_epi64(sum_squares, sum_squares);\n      |                   ^~~~~~~~~~~~~~\n      |                   _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpcct3j0i1.cpp:48:19: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   48 |     sum_squares = _mm_hadd_epi64(sum_squares, sum_squares);\n      |                   ^~~~~~~~~~~~~~\n      |                   _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpcct3j0i1.cpp:51:20: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   51 |     sum_products = _mm_hadd_epi64(sum_products, sum_products);\n      |                    ^~~~~~~~~~~~~~\n      |                    _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpcct3j0i1.cpp:52:20: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   52 |     sum_products = _mm_hadd_epi64(sum_products, sum_products);\n      |                    ^~~~~~~~~~~~~~\n      |                    _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwqcbg2u7.cpp:41:65: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   41 |         sum_squares = _mm_add_epi64(sum_squares, _mm_slli_epi32(_mm_maddubs_epi16(a, a), 1));\n      |                                                                 ^\n[REDACTED]/tmpwqcbg2u7.cpp:42:67: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         sum_products = _mm_add_epi64(sum_products, _mm_slli_epi32(_mm_maddubs_epi16(a, b), 1));\n      |                                                                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz1njzg1o.cpp:45:50: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   45 |         sum_squares = _mm_add_epi64(sum_squares, _mm_hadd_epi32(a_squared, b_squared));\n      |                                                  ^\n[REDACTED]/tmpz1njzg1o.cpp:46:52: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   46 |         sum_products = _mm_add_epi64(sum_products, _mm_hadd_epi32(product, product));\n      |                                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkndh00rh.cpp:52:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i result = _mm_blendv_epi8(zero, one, both_positive);\n      |                          ^\n[REDACTED]/tmpkndh00rh.cpp:53:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   53 |         result = _mm_blendv_epi8(result, minus_one, both_negative);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpik9n3gti.cpp:50:26: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 out_vec = _mm_blendv_ps(D_vec, C_vec, _mm_castsi128_ps(cond2_true)); // if cond2 is true, take C\n      |                          ^\n[REDACTED]/tmpik9n3gti.cpp:51:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   51 |         out_vec = _mm_blendv_ps(out_vec, B_vec, _mm_castsi128_ps(cond1_true)); // if cond1 is true, take B\n      |                   ^\n[REDACTED]/tmpik9n3gti.cpp:52:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   52 |         out_vec = _mm_blendv_ps(out_vec, A_vec, _mm_and_si128(cond1_true, cond2_true)); // if both are true, take A\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptuxejobk.cpp:50:26: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 out_vec = _mm_blendv_ps(D_vec, C_vec, _mm_castsi128_ps(cond2_true)); // D if cond2 is false\n      |                          ^\n[REDACTED]/tmptuxejobk.cpp:51:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   51 |         out_vec = _mm_blendv_ps(out_vec, B_vec, _mm_castsi128_ps(cond1_true)); // B if cond1 is true\n      |                   ^\n[REDACTED]/tmptuxejobk.cpp:52:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   52 |         out_vec = _mm_blendv_ps(out_vec, A_vec, _mm_and_si128(cond1_true, cond2_true)); // A if both are true\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppykq5sd5.cpp:50:26: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 out_vec = _mm_blendv_ps(D_vec, C_vec, _mm_castsi128_ps(cond2_true));\n      |                          ^\n[REDACTED]/tmppykq5sd5.cpp:51:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   51 |         out_vec = _mm_blendv_ps(out_vec, B_vec, _mm_castsi128_ps(cond1_true));\n      |                   ^\n[REDACTED]/tmppykq5sd5.cpp:52:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   52 |         out_vec = _mm_blendv_ps(out_vec, A_vec, _mm_and_si128(cond1_true, cond2_true));\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb4lvb75k.cpp:50:26: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128 out_vec = _mm_blendv_ps(D_vec, C_vec, _mm_castsi128_ps(cond2_true));\n      |                          ^\n[REDACTED]/tmpb4lvb75k.cpp:51:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   51 |         out_vec = _mm_blendv_ps(out_vec, B_vec, _mm_castsi128_ps(cond1_true));\n      |                   ^\n[REDACTED]/tmpb4lvb75k.cpp:52:19: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   52 |         out_vec = _mm_blendv_ps(out_vec, A_vec, _mm_and_si128(cond1_true, cond2_true));\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf84abuwi.cpp:48:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   48 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpf84abuwi.cpp:49:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   49 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpf84abuwi.cpp:50:17: error: always_inline function '_mm_packus_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'sse4.1'\n   50 |         count = _mm_packus_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpf84abuwi.cpp:53:18: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   53 |         out[i] = _mm_extract_epi8(count, 0);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpf84abuwi.cpp:54:50: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   54 |         if (i + 1 < total_elements) out[i + 1] = _mm_extract_epi8(count, 1);\n      |                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpf84abuwi.cpp:55:50: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   55 |         if (i + 2 < total_elements) out[i + 2] = _mm_extract_epi8(count, 2);\n      |                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpf84abuwi.cpp:56:50: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   56 |         if (i + 3 < total_elements) out[i + 3] = _mm_extract_epi8(count, 3);\n      |                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n7 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbyt_dzo9.cpp:56:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   56 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpbyt_dzo9.cpp:57:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   57 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwix5g5ob.cpp:49:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   49 |         bits = _mm_hadd_epi32(bits, bits);\n      |                ^\n[REDACTED]/tmpwix5g5ob.cpp:50:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   50 |         bits = _mm_hadd_epi32(bits, bits);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpetbc_tu2.cpp:56:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   56 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpetbc_tu2.cpp:57:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   57 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb6w13c2n.cpp:57:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   57 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n[REDACTED]/tmpb6w13c2n.cpp:58:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   58 |         count = _mm_hadd_epi32(count, count);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0g9ipkst.cpp:33:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   33 |         __m128i mod = _mm_rem_epi32(a, _mm_set1_epi32(3));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx8npuvly.cpp:33:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   33 |         __m128i mod = _mm_rem_epi32(a, _mm_set1_epi32(3));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvofp2b65.cpp:34:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   34 |         __m128i mod = _mm_rem_epi32(a, _mm_set1_epi32(3));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp06jv0kz2.cpp:33:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   33 |         __m128i mod = _mm_rem_epi32(a, _mm_set1_epi32(3));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw1q1ffvo.cpp:36:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   36 |         __m128i mod = _mm_rem_epi32(a, three);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjy2u7qsq.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpjy2u7qsq.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpjy2u7qsq.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpjy2u7qsq.cpp:41:13: error: no matching function for call to '_mm_srli_epi32'\n   41 |             _mm_srli_epi32(src_vec, rotate_amount),\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx9mku3r7.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpx9mku3r7.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpx9mku3r7.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpx9mku3r7.cpp:53:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i result = _mm_blendv_epi8(negated, rotated, condition);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc0u6nw35.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpc0u6nw35.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpc0u6nw35.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpc0u6nw35.cpp:43:13: error: no matching function for call to '_mm_srli_epi32'\n   43 |             _mm_srli_epi32(src_vec, rotate_amount),\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpc0u6nw35.cpp:44:13: error: no matching function for call to '_mm_slli_epi32'\n   44 |             _mm_slli_epi32(src_vec, 32 - rotate_amount)\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1sczdo8z.cpp:41:50: error: use of undeclared identifier '_mm_neg_ps'\n   41 |         __m128 less_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg4rc96dp.cpp:40:50: error: use of undeclared identifier '_mm_neg_ps'\n   40 |         __m128 less_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoj8ynjaa.cpp:41:63: error: use of undeclared identifier '_mm_neg_ps'\n   41 |         __m128 less_than_neg_epsilon = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmperu_3guf.cpp:41:50: error: use of undeclared identifier '_mm_neg_ps'\n   41 |         __m128 less_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnisn_w5w.cpp:40:50: error: use of undeclared identifier '_mm_neg_ps'\n   40 |         __m128 less_vec = _mm_cmplt_ps(diff_vec, _mm_neg_ps(epsilon_vec));\n      |                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7afsqjry.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp7afsqjry.cpp:50:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   50 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp7afsqjry.cpp:39:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   39 |         int_vals = _mm_blendv_epi8(int_vals, max_val, mask_max);\n      |                    ^\n[REDACTED]/tmp7afsqjry.cpp:43:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, mask_min);\n      |                    ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz7xsi6nq.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpz7xsi6nq.cpp:51:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   51 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpz7xsi6nq.cpp:42:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   42 |         int_vals = _mm_blendv_epi8(int_vals, max_val, mask_max);\n      |                    ^\n[REDACTED]/tmpz7xsi6nq.cpp:43:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, mask_min);\n      |                    ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp1rsls27.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpp1rsls27.cpp:50:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   50 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpp1rsls27.cpp:42:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   42 |         int_vals = _mm_blendv_epi8(int_vals, max_val, mask_max);\n      |                    ^\n[REDACTED]/tmpp1rsls27.cpp:43:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, mask_min);\n      |                    ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp98asbs09.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp98asbs09.cpp:50:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   50 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp98asbs09.cpp:42:55: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   42 |         int_vals = _mm_blendv_epi8(int_vals, max_val, _mm_cvtepi32_epi64(mask_max));\n      |                                                       ^\n[REDACTED]/tmp98asbs09.cpp:42:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   42 |         int_vals = _mm_blendv_epi8(int_vals, max_val, _mm_cvtepi32_epi64(mask_max));\n      |                    ^\n[REDACTED]/tmp98asbs09.cpp:43:55: error: always_inline function '_mm_cvtepi32_epi64' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, _mm_cvtepi32_epi64(mask_min));\n      |                                                       ^\n[REDACTED]/tmp98asbs09.cpp:43:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, _mm_cvtepi32_epi64(mask_min));\n      |                    ^\n2 warnings and 4 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm0dpjwgu.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpm0dpjwgu.cpp:50:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   50 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpm0dpjwgu.cpp:42:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   42 |         int_vals = _mm_blendv_epi8(int_vals, max_val, mask_max);\n      |                    ^\n[REDACTED]/tmpm0dpjwgu.cpp:43:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   43 |         int_vals = _mm_blendv_epi8(int_vals, min_val, mask_min);\n      |                    ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsju_12mi.cpp:31:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i scaled_vec = _mm_mullo_epi32(a_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps5ff22n5.cpp:31:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i scaled_vec = _mm_mullo_epi32(a_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi9gm68d_.cpp:31:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i scaled_vec = _mm_mullo_epi32(a_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqayu2_f.cpp:31:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i scaled_vec = _mm_mullo_epi32(a_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpymm5m25s.cpp:31:30: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'int_to_float_scaled_simd' that is compiled without support for 'sse4.1'\n   31 |         __m128i scaled_vec = _mm_mullo_epi32(a_vec, scale_vec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0nqdyyex.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp0nqdyyex.cpp:36:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz3lje2a_.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpz3lje2a_.cpp:36:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgk8upcec.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpgk8upcec.cpp:36:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjmjsliso.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpjmjsliso.cpp:36:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplgy7t27_.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmplgy7t27_.cpp:36:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   36 |         result = _mm_round_ps(result, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp533cgyp6.cpp:47:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128 result = _mm_blendv_ps(a_vec, normalized, _mm_castsi128_ps(mask));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn_0dkp_9.cpp:55:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 result = _mm_blendv_ps(normalized_val, A_vec, _mm_castsi128_ps(mask));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzu_rs_ie.cpp:35:9: error: no matching function for call to '_mm_storeu_ps'\n   35 |         _mm_storeu_ps(&pB[i / 4], _mm_castsi128_ps(data));\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgv26adol.cpp:34:9: error: no matching function for call to '_mm_storeu_ps'\n   34 |         _mm_storeu_ps(&dest[i / 4], _mm_castsi128_ps(data));\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphuneboxo.cpp:34:9: error: no matching function for call to '_mm_storeu_ps'\n   34 |         _mm_storeu_ps(&dst[i / 4], _mm_castsi128_ps(data));\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpifxwnbqs.cpp:44:45: error: argument value 17 is outside the valid range [0, 3] [-Wargument-outside-range]\n   44 |             __m128d diff1 = _mm_sub_pd(vec, _mm_shuffle_pd(vec, vec, _MM_SHUFFLE(0, 1, 0, 1)));\n      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4652:13: note: expanded from macro '_mm_shuffle_pd'\n 4652 |   ((__m128d)__builtin_ia32_shufpd((__v2df)(__m128d)(a), (__v2df)(__m128d)(b),  \\\n      |             ^\n 4653 |                                   (int)(i)))\n      |                                   ~~~~~~~~\n[REDACTED]/tmpifxwnbqs.cpp:45:45: error: argument value 68 is outside the valid range [0, 3] [-Wargument-outside-range]\n   45 |             __m128d diff2 = _mm_sub_pd(vec, _mm_shuffle_pd(vec, vec, _MM_SHUFFLE(1, 0, 1, 0)));\n      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4652:13: note: expanded from macro '_mm_shuffle_pd'\n 4652 |   ((__m128d)__builtin_ia32_shufpd((__v2df)(__m128d)(a), (__v2df)(__m128d)(b),  \\\n      |             ^\n 4653 |                                   (int)(i)))\n      |                                   ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  cannot create std::vector larger than max_size()\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7r7t75b3.cpp:66:20: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   66 |         product *= _mm_extract_epi16(prod_vec, j);\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplm2bd_yk.cpp:45:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   45 |         prod_vec = _mm_mullo_epi32(prod_vec, _mm_unpacklo_epi16(vec, _mm_setzero_si128()));\n      |                    ^\n[REDACTED]/tmplm2bd_yk.cpp:46:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   46 |         prod_vec = _mm_mullo_epi32(prod_vec, _mm_unpackhi_epi16(vec, _mm_setzero_si128()));\n      |                    ^\n[REDACTED]/tmplm2bd_yk.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, _mm_set1_epi32(numbers[i]));\n      |                    ^\n[REDACTED]/tmplm2bd_yk.cpp:56:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   56 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmplm2bd_yk.cpp:57:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   57 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n5 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpssp7whfj.cpp:61:20: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   61 |         product *= _mm_extract_epi16(prod_vec, j);\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxrrkh8uj.cpp:51:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         prod_vec = _mm_mullo_epi32(prod_vec, vec1);\n      |                    ^\n[REDACTED]/tmpxrrkh8uj.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, vec2);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp79e576q7.cpp:51:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   51 |         prod_vec = _mm_mullo_epi32(prod_vec, _mm_unpacklo_epi16(vec1, _mm_setzero_si128()));\n      |                    ^\n[REDACTED]/tmp79e576q7.cpp:52:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   52 |         prod_vec = _mm_mullo_epi32(prod_vec, _mm_unpacklo_epi16(vec2, _mm_setzero_si128()));\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzr_0wghj.cpp:55:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |                 result[j] = _mm_extract_epi32(max_vec, j - i);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj7rs7jno.cpp:55:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |                 result[j] = _mm_extract_epi32(current_max, j - i);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo8g0fguf.cpp:48:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   48 |         current_max = _mm_max_epi32(current_max, _mm_set1_epi32(numbers[i]));\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdhqp9wi5.cpp:55:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |                 result[j] = _mm_extract_epi32(current_max, j - i);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpau86rn5w.cpp:49:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   49 |         current_max = _mm_max_epi32(current_max, vec);\n      |                       ^\n[REDACTED]/tmpau86rn5w.cpp:56:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |                 current_max = _mm_max_epi32(current_max, _mm_set1_epi32(numbers[j]));\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptzc0cm5a.cpp:51:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   51 |         max_length = _mm_max_epi32(max_length, lengths);\n      |                      ^\n[REDACTED]/tmptzc0cm5a.cpp:52:21: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   52 |         max_index = _mm_blendv_epi8(max_index, _mm_setr_epi32(i, i + 1, i + 2, i + 3), cmp);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpslethjrt.cpp:43:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   43 |             lengths = _mm_insert_epi32(lengths, strings[i + j].size(), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpslethjrt.cpp:51:49: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   51 |                 if ((i + j) < strings.size() && _mm_extract_epi32(cmp, j)) {\n      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptl6ksbwl.cpp:48:26: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   48 |         max_length_vec = _mm_max_epi32(max_length_vec, current_length_vec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiwo2590w.cpp:48:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   48 |         max_lengths = _mm_max_epi32(max_lengths, lengths);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf_vsd8vk.cpp:48:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   48 |         max_lengths = _mm_max_epi32(max_lengths, current_lengths);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvm768iz_.cpp:43:34: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   43 |         vb = _mm_and_si128(temp, _mm_cmpeq_epi64(va, vb));\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpchjb_wss.cpp:39:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   39 |     while (_mm_movemask_epi8(_mm_cmpeq_epi64(va, vb)) == 0) {\n      |                              ^\n[REDACTED]/tmpchjb_wss.cpp:40:25: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   40 |         __m128i vmask = _mm_cmpgt_epi64(va, vb);\n      |                         ^\n[REDACTED]/tmpchjb_wss.cpp:45:17: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   45 |         vmask = _mm_cmpgt_epi64(vb, va);\n      |                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9o5rhv98.cpp:41:25: error: use of undeclared identifier '_mm_rem_epi64'\n   41 |         __m128i v_mod = _mm_rem_epi64(va, vb);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaq304k9b.cpp:53:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   53 |             closest_pair[0] = _mm_blendv_ps(closest_pair[0], current, mask);\n      |                               ^\n[REDACTED]/tmpaq304k9b.cpp:54:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   54 |             closest_pair[1] = _mm_blendv_ps(closest_pair[1], next, mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprqn_emrh.cpp:53:20: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   53 |         min_diff = _mm_blendv_ps(min_diff, diff, mask);\n      |                    ^\n[REDACTED]/tmprqn_emrh.cpp:55:28: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   55 |         closest_pair_low = _mm_blendv_ps(closest_pair_low, vec1, mask);\n      |                            ^\n[REDACTED]/tmprqn_emrh.cpp:56:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   56 |         closest_pair_high = _mm_blendv_ps(closest_pair_high, vec2, mask);\n      |                             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9hsm5b28.cpp:54:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   54 |         closest_pair[0] = _mm_blendv_ps(closest_pair[0], a, mask);\n      |                           ^\n[REDACTED]/tmp9hsm5b28.cpp:55:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'find_closest_elements_simd' that is compiled without support for 'sse4.1'\n   55 |         closest_pair[1] = _mm_blendv_ps(closest_pair[1], b, mask);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu_x_z94z.cpp:39:23: error: use of undeclared identifier '_mm_rem_epi64'\n   39 |         __m128i mod = _mm_rem_epi64(num, divisor);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4gznl4ea.cpp:39:23: error: use of undeclared identifier '_mm_rem_epi64'\n   39 |         __m128i mod = _mm_rem_epi64(num, divisor);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3ff5344p.cpp:39:23: error: use of undeclared identifier '_mm_rem_epi64'\n   39 |         __m128i mod = _mm_rem_epi64(num, divisor);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpts7rj56p.cpp:39:23: error: use of undeclared identifier '_mm_rem_epi64'\n   39 |         __m128i mod = _mm_rem_epi64(num, divisor);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpehgn3376.cpp:39:23: error: use of undeclared identifier '_mm_rem_epi64'\n   39 |         __m128i mod = _mm_rem_epi64(num, divisor);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6igyv_7b.cpp:61:21: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   61 |             vec_n = _mm_div_epi32(vec_n, vec_i);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy4uy0g7m.cpp:57:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   57 |         __m128i result = _mm_div_epi32(num, divisor);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpy4uy0g7m.cpp:58:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   58 |         __m128i remainder = _mm_rem_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpy4uy0g7m.cpp:63:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |             remainder = _mm_rem_epi32(num, divisor);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp858wvysi.cpp:57:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   57 |         __m128i result = _mm_div_epi32(num, divisor);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp858wvysi.cpp:58:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   58 |         __m128i remainder = _mm_rem_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp858wvysi.cpp:63:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |             remainder = _mm_rem_epi32(num, divisor);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjo_l8gn_.cpp:50:39: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'get_positive_simd' that is compiled without support for 'popcnt'\n   50 |         result.resize(result.size() + _mm_popcnt_u32(_mm_movemask_ps(mask)));\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp92u17ti3.cpp:42:27: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   42 |         __m128i vec_div = _mm_div_epi64(vec_n, vec_i);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmp92u17ti3.cpp:43:48: error: use of undeclared identifier '_mm_mul_epi64'\n   43 |         __m128i vec_mod = _mm_sub_epi64(vec_n, _mm_mul_epi64(vec_div, vec_i));\n      |                                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5sa0hv6i.cpp:41:27: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   41 |         __m128i vec_div = _mm_div_epi64(vec_n, vec_i);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmp5sa0hv6i.cpp:42:27: error: use of undeclared identifier '_mm_rem_epi64'\n   42 |         __m128i vec_mod = _mm_rem_epi64(vec_n, vec_i);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyh9t3cas.cpp:42:27: error: use of undeclared identifier '_mm_rem_epi64'\n   42 |         __m128i vec_mod = _mm_rem_epi64(vec_n, vec_i);\n      |                           ^\n[REDACTED]/tmpyh9t3cas.cpp:49:13: error: value of type '__m128i' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   49 |         if (_mm_cmpgt_epi64(vec_i, vec_limit)) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwal0umw0.cpp:41:27: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   41 |         __m128i vec_div = _mm_div_epi64(vec_n, vec_i);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpwal0umw0.cpp:42:27: error: use of undeclared identifier '_mm_rem_epi64'\n   42 |         __m128i vec_mod = _mm_rem_epi64(vec_n, vec_i);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcnl3s9_s.cpp:41:27: error: use of undeclared identifier '_mm_rem_epi64'\n   41 |         __m128i vec_mod = _mm_rem_epi64(vec_n, vec_i);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfde1ythe.cpp:63:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i output = _mm_blendv_epi8(input, reversed_case, is_letter);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm81ssogb.cpp:64:36: error: use of undeclared identifier '_mm'\n   64 |         result_case = _mm_or_si128(_mm.and_si128(is_upper, toggled_case), _mm.andnot_si128(is_upper, result_case));\n      |                                    ^\n[REDACTED]/tmpm81ssogb.cpp:64:75: error: use of undeclared identifier '_mm'\n   64 |         result_case = _mm_or_si128(_mm.and_si128(is_upper, toggled_case), _mm.andnot_si128(is_upper, result_case));\n      |                                                                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7z_wzt75.cpp:64:37: error: use of undeclared identifier '_mm'\n   64 |         result_chunk = _mm_or_si128(_mm.and_si128(cmp_upper, toggled_case), \n      |                                     ^\n[REDACTED]/tmp7z_wzt75.cpp:65:38: error: use of undeclared identifier '_mm'\n   65 |                                      _mm.andnot_si128(cmp_upper, result_chunk));\n      |                                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq2je8_jc.cpp:67:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   67 |         __m128i result_case = _mm_blendv_epi8(reversed_case, input, is_digit);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwrdnv4vw.cpp:47:58: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i divisible = _mm_or_si128(_mm_cmpeq_epi32(_mm_rem_epi32(indices, eleven), zero), \n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpwrdnv4vw.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |                                           _mm_cmpeq_epi32(_mm_rem_epi32(indices, thirteen), zero));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpwrdnv4vw.cpp:50:67: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   50 |         __m128i digits = _mm_and_si128(divisible, _mm_cmpeq_epi32(_mm_rem_epi32(indices, _mm_set1_epi32(10)), seven));\n      |                                                                   ^~~~~~~~~~~~~\n      |                                                                   _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzliyi4o_.cpp:47:58: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i divisible = _mm_or_si128(_mm_cmpeq_epi32(_mm_rem_epi32(indices, eleven), zero), \n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpzliyi4o_.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |                                           _mm_cmpeq_epi32(_mm_rem_epi32(indices, thirteen), zero));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzbenc84b.cpp:47:58: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i divisible = _mm_or_si128(_mm_cmpeq_epi32(_mm_rem_epi32(indices, eleven), zero),\n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpzbenc84b.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |                                           _mm_cmpeq_epi32(_mm_rem_epi32(indices, thirteen), zero));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxo_v7s_w.cpp:47:58: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i divisible = _mm_or_si128(_mm_cmpeq_epi32(_mm_rem_epi32(indices, eleven), zero), \n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpxo_v7s_w.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |                                           _mm_cmpeq_epi32(_mm_rem_epi32(indices, thirteen), zero));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq8umtn__.cpp:47:58: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i divisible = _mm_or_si128(_mm_cmpeq_epi32(_mm_rem_epi32(values, eleven), zero), \n      |                                                          ^~~~~~~~~~~~~\n      |                                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpq8umtn__.cpp:48:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |                                           _mm_cmpeq_epi32(_mm_rem_epi32(values, thirteen), zero));\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdylq20v9.cpp:62:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'sort_even_simd' that is compiled without support for 'sse4.1'\n   62 |         __m128 result = _mm_blendv_ps(odd_values, even_values, odd_mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcwky2kr3.cpp:53:29: error: use of undeclared identifier '_mm_rem_epi64'\n   53 |         __m128i remainder = _mm_rem_epi64(num, base_vec);\n      |                             ^\n[REDACTED]/tmpcwky2kr3.cpp:54:15: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   54 |         num = _mm_div_epi64(num, base_vec);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa33bib5b.cpp:51:29: error: use of undeclared identifier '_mm_rem_epi64'\n   51 |         __m128i remainder = _mm_rem_epi64(num, base_vec);\n      |                             ^\n[REDACTED]/tmpa33bib5b.cpp:52:28: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   52 |         __m128i quotient = _mm_div_epi64(num, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpa33bib5b.cpp:60:25: error: use of undeclared identifier '_mm_rem_epi64'\n   60 |             remainder = _mm_rem_epi64(num, base_vec);\n      |                         ^\n[REDACTED]/tmpa33bib5b.cpp:61:24: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   61 |             quotient = _mm_div_epi64(num, base_vec);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n4 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqeuo14yo.cpp:53:29: error: use of undeclared identifier '_mm_rem_epi64'\n   53 |         __m128i remainder = _mm_rem_epi64(num, base_vec);\n      |                             ^\n[REDACTED]/tmpqeuo14yo.cpp:54:15: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   54 |         num = _mm_div_epi64(num, base_vec);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpqeuo14yo.cpp:61:22: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   61 |             char r = _mm_extract_epi8(remainder, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfn8kbqdz.cpp:51:29: error: use of undeclared identifier '_mm_rem_epi64'\n   51 |         __m128i remainder = _mm_rem_epi64(num, base_vec);\n      |                             ^\n[REDACTED]/tmpfn8kbqdz.cpp:52:15: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   52 |         num = _mm_div_epi64(num, base_vec);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjnvxuu2x.cpp:51:29: error: use of undeclared identifier '_mm_rem_epi64'\n   51 |         __m128i remainder = _mm_rem_epi64(x_vec, base_vec);\n      |                             ^\n[REDACTED]/tmpjnvxuu2x.cpp:59:22: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   59 |             char r = _mm_extract_epi8(remainder, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_59rvrg1.cpp:39:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   39 |         left = _mm_shuffle_epi8(left, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3wdcjd1i.cpp:45:49: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   45 |         left_chars = _mm_cmpeq_epi8(left_chars, _mm_shuffle_epi8(right_chars, _mm_set_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)));\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppwxwve_3.cpp:44:50: error: argument value 351 is outside the valid range [0, 255] [-Wargument-outside-range]\n   44 |         right_chars = _mm_cmpeq_epi8(left_chars, _mm_shuffle_epi32(right_chars, _MM_SHUFFLE(4, 5, 6, 7)));\n      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ry9yy01.cpp:50:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'decode_shift_simd' that is compiled without support for 'sse4.1'\n   50 |         decoded = _mm_blendv_epi8(decoded, adjusted, less_than_a);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "runtime failed: munmap_chunk(): invalid pointer\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdwg4g2kn.cpp:49:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   49 |     count = _mm_hadd_epi16(count, count);\n      |             ^\n[REDACTED]/tmpdwg4g2kn.cpp:50:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   50 |     count = _mm_hadd_epi16(count, count);\n      |             ^\n[REDACTED]/tmpdwg4g2kn.cpp:51:13: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   51 |     count = _mm_hadd_epi32(count, count);\n      |             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcw0ckqza.cpp:59:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   59 |     balance = _mm_hadd_epi16(balance, balance);\n      |               ^\n[REDACTED]/tmpcw0ckqza.cpp:60:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   60 |     balance = _mm_hadd_epi16(balance, balance);\n      |               ^\n[REDACTED]/tmpcw0ckqza.cpp:61:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   61 |     balance = _mm_hadd_epi16(balance, balance);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpon58knr8.cpp:55:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   55 |     count = _mm_hadd_epi16(count, count);\n      |             ^\n[REDACTED]/tmpon58knr8.cpp:56:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   56 |     count = _mm_hadd_epi16(count, count);\n      |             ^\n[REDACTED]/tmpon58knr8.cpp:57:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   57 |     count = _mm_hadd_epi16(count, count);\n      |             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpszgqkwbn.cpp:56:26: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   56 |         total_balance += _mm_extract_epi8(balance, i);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz4666btw.cpp:45:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   45 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3wnr2fq3.cpp:45:23: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i sum = _mm_hadd_epi16(cmp, cmp);\n      |                       ^\n[REDACTED]/tmp3wnr2fq3.cpp:46:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         sum = _mm_hadd_epi16(sum, sum);\n      |               ^\n[REDACTED]/tmp3wnr2fq3.cpp:47:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |         sum = _mm_hadd_epi16(sum, sum);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpahkdthd8.cpp:45:23: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i sum = _mm_hadd_epi16(cmp, cmp);\n      |                       ^\n[REDACTED]/tmpahkdthd8.cpp:46:15: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         sum = _mm_hadd_epi16(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqow2gksx.cpp:65:19: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   65 |     total_count = _mm_hadd_epi16(total_count, total_count);\n      |                   ^\n[REDACTED]/tmpqow2gksx.cpp:66:19: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   66 |     total_count = _mm_hadd_epi16(total_count, total_count);\n      |                   ^\n[REDACTED]/tmpqow2gksx.cpp:67:19: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   67 |     total_count = _mm_hadd_epi16(total_count, total_count);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnezytybe.cpp:49:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   49 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpnezytybe.cpp:50:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   50 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpnezytybe.cpp:51:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   51 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0u3tjs1h.cpp:55:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   55 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmp0u3tjs1h.cpp:56:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   56 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmp0u3tjs1h.cpp:57:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   57 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbig9x1e8.cpp:55:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   55 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpbig9x1e8.cpp:56:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   56 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpbig9x1e8.cpp:57:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   57 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6sssoc19.cpp:48:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   48 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmp6sssoc19.cpp:49:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   49 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmp6sssoc19.cpp:50:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   50 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg3kpvl9l.cpp:48:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   48 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpg3kpvl9l.cpp:49:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   49 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpg3kpvl9l.cpp:50:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'digitSum_simd' that is compiled without support for 'ssse3'\n   50 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqo5lo5hp.cpp:66:30: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   66 |             smallest_index = _mm_extract_epi32(min_index, j);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ei47dk6.cpp:49:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   49 |         values = _mm_blendv_epi8(values, _mm_set1_epi32(std::numeric_limits<int>::max()), is_even);\n      |                  ^\n[REDACTED]/tmp_ei47dk6.cpp:52:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   52 |         min_even_vec = _mm_min_epi32(min_even_vec, values);\n      |                        ^\n[REDACTED]/tmp_ei47dk6.cpp:57:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         min_index_vec = _mm_blendv_epi8(min_index_vec, indices, index_mask);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmx5ifec7.cpp:56:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |             int value = _mm_extract_epi32(even_values, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpmx5ifec7.cpp:58:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   58 |                 int index = _mm_extract_epi32(even_indices, j);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkn2eapbd.cpp:52:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   52 |         min_even = _mm_blendv_epi8(min_even, even_values, mask);\n      |                    ^\n[REDACTED]/tmpkn2eapbd.cpp:53:21: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   53 |         min_index = _mm_blendv_epi8(min_index, indices, mask);\n      |                     ^\n[REDACTED]/tmpkn2eapbd.cpp:57:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i current_indices = _mm_blendv_epi8(min_index, indices, equal_mask);\n      |                                   ^\n[REDACTED]/tmpkn2eapbd.cpp:58:21: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   58 |         min_index = _mm_blendv_epi8(min_index, current_indices, mask);\n      |                     ^\n4 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpytl2agks.cpp:53:15: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'search_simd' that is compiled without support for 'sse4.1'\n   53 |         vec = _mm_min_epi32(vec, _mm_set1_epi32(max_value)); // Clamp to max_value\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpogvgf46n.cpp:54:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |             int value = _mm_extract_epi32(vec, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa9fdy2x9.cpp:53:15: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'search_simd' that is compiled without support for 'sse4.1'\n   53 |         vec = _mm_min_epi32(vec, _mm_set1_epi32(max_value)); // Clamp values to max_value\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqt403y4m.cpp:54:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |             int value = _mm_extract_epi32(vec, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwxb8y4r1.cpp:51:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   51 |             int value = _mm_extract_epi32(vec, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgjfgkt23.cpp:55:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   55 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpgjfgkt23.cpp:56:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   56 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpggoj6x3k.cpp:48:43: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |         if (_mm_cmpeq_epi64(result, x_vec).m128i_i64[0] != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0mc6_4eq.cpp:44:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'avx512vl'\n   44 |         result = _mm_mullo_epi64(result, n_vec);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb9dui4it.cpp:45:21: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'avx512vl'\n   45 |         power_vec = _mm_mullo_epi64(power_vec, n_vec);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphc8b19m3.cpp:48:13: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   48 |         if (_mm_cmpgt_epi64(result, x_vec) != _mm_setzero_si128()) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkpl1q7u4.cpp:43:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'avx512vl'\n   43 |         result = _mm_mullo_epi64(result, n_vec);\n      |                  ^\n[REDACTED]/tmpkpl1q7u4.cpp:44:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i cmp = _mm_cmpeq_epi64(result, x_vec);\n      |                       ^\n[REDACTED]/tmpkpl1q7u4.cpp:48:13: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   48 |         if (_mm_cmpgt_epi64(result, x_vec)[0] != 0) {\n      |             ^\n3 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8gc8_8dr.cpp:45:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   45 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzr2vz54c.cpp:45:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   45 |         count += _mm_popcnt_u32(_mm_movemask_epi8(prime_count));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpukqjwoev.cpp:34:32: error: no matching function for call to '_mm_setr_epi8'\n   34 |     const __m128i hex_digits = _mm_setr_epi8('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 0);\n      |                                ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3772:1: note: candidate function not viable: requires 16 arguments, but 17 were provided\n 3772 | _mm_setr_epi8(char __b0, char __b1, char __b2, char __b3, char __b4, char __b5,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3773 |               char __b6, char __b7, char __b8, char __b9, char __b10,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3774 |               char __b11, char __b12, char __b13, char __b14, char __b15) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpml9h21j2.cpp:44:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i prime_check = _mm_shuffle_epi8(prime_digits, hex_mask); // Shuffle to get prime indicators\n      |                               ^\n[REDACTED]/tmpml9h21j2.cpp:45:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   45 |         count += _mm_popcnt_u32(_mm_movemask_epi8(prime_check)); // Count the number of primes\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7j60ql3p.cpp:45:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   45 |         count += _mm_popcnt_u32(_mm_movemask_epi8(prime_check));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpld97mv10.cpp:33:25: error: no matching function for call to '_mm_set_epi8'\n   33 |         __m128i chars = _mm_set_epi8(s[i + 2], s[i + 1], s[i], 0, 0, 0, 0, 0);\n      |                         ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 8 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7t_ubugi.cpp:33:16: error: no matching function for call to '_mm_set_epi8'\n   33 |         curr = _mm_set_epi8(s[i + 2], s[i + 1], s[i], 0, 0, 0, 0, 0);\n      |                ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 8 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp7t_ubugi.cpp:36:21: error: no matching function for call to '_mm_set_epi8'\n   36 |             prev1 = _mm_set_epi8(s[i - 1], s[i - 2], s[i - 3], 0, 0, 0, 0, 0);\n      |                     ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 8 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp7t_ubugi.cpp:37:21: error: no matching function for call to '_mm_set_epi8'\n   37 |             prev2 = _mm_set_epi8(s[i - 2], s[i - 3], s[i - 4], 0, 0, 0, 0, 0);\n      |                     ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 8 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_w2kxq_8.cpp:63:59: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |     __m128i divisible_by_two = _mm_and_si128(_mm_eq_epi32(_mm_rem_epi32(lengths, two), _mm_setzero_si128()), less_than_four);\n      |                                                           ^~~~~~~~~~~~~\n      |                                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:63:46: error: use of undeclared identifier '_mm_eq_epi32'; did you mean '_mm_or_epi32'?\n   63 |     __m128i divisible_by_two = _mm_and_si128(_mm_eq_epi32(_mm_rem_epi32(lengths, two), _mm_setzero_si128()), less_than_four);\n      |                                              ^~~~~~~~~~~~\n      |                                              _mm_or_epi32\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:558:1: note: '_mm_or_epi32' declared here\n  558 | _mm_or_epi32(__m128i __a, __m128i __b)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:64:61: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   64 |     __m128i divisible_by_three = _mm_and_si128(_mm_eq_epi32(_mm_rem_epi32(lengths, three), _mm_setzero_si128()), less_than_four);\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:64:48: error: use of undeclared identifier '_mm_eq_epi32'; did you mean '_mm_or_epi32'?\n   64 |     __m128i divisible_by_three = _mm_and_si128(_mm_eq_epi32(_mm_rem_epi32(lengths, three), _mm_setzero_si128()), less_than_four);\n      |                                                ^~~~~~~~~~~~\n      |                                                _mm_or_epi32\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:558:1: note: '_mm_or_epi32' declared here\n  558 | _mm_or_epi32(__m128i __a, __m128i __b)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:73:47: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   73 |         __m128i divisible_by_i = _mm_eq_epi32(_mm_rem_epi32(lengths, divisor), _mm_setzero_si128());\n      |                                               ^~~~~~~~~~~~~\n      |                                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:73:34: error: use of undeclared identifier '_mm_eq_epi32'; did you mean '_mm_or_epi32'?\n   73 |         __m128i divisible_by_i = _mm_eq_epi32(_mm_rem_epi32(lengths, divisor), _mm_setzero_si128());\n      |                                  ^~~~~~~~~~~~\n      |                                  _mm_or_epi32\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:558:1: note: '_mm_or_epi32' declared here\n  558 | _mm_or_epi32(__m128i __a, __m128i __b)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:74:52: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   74 |         __m128i divisible_by_next_i = _mm_eq_epi32(_mm_rem_epi32(lengths, next_divisor), _mm_setzero_si128());\n      |                                                    ^~~~~~~~~~~~~\n      |                                                    _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_w2kxq_8.cpp:74:39: error: use of undeclared identifier '_mm_eq_epi32'; did you mean '_mm_or_epi32'?\n   74 |         __m128i divisible_by_next_i = _mm_eq_epi32(_mm_rem_epi32(lengths, next_divisor), _mm_setzero_si128());\n      |                                       ^~~~~~~~~~~~\n      |                                       _mm_or_epi32\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:558:1: note: '_mm_or_epi32' declared here\n  558 | _mm_or_epi32(__m128i __a, __m128i __b)\n      | ^\n8 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4ntlz98s.cpp:63:32: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |     __m128i divisible_by_two = _mm_rem_epi32(lengths, two);\n      |                                ^~~~~~~~~~~~~\n      |                                _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp4ntlz98s.cpp:64:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   64 |     __m128i divisible_by_three = _mm_rem_epi32(lengths, three);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp4ntlz98s.cpp:73:39: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   73 |         __m128i divisible_by_factor = _mm_rem_epi32(lengths, factor);\n      |                                       ^~~~~~~~~~~~~\n      |                                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp4ntlz98s.cpp:74:48: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   74 |         __m128i divisible_by_factor_plus_two = _mm_rem_epi32(lengths, factor_plus_two);\n      |                                                ^~~~~~~~~~~~~\n      |                                                _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n4 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmporh27xhp.cpp:57:32: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |     __m128i divisible_by_two = _mm_rem_epi32(len_vec, two_vec);\n      |                                ^~~~~~~~~~~~~\n      |                                _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmporh27xhp.cpp:58:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   58 |     __m128i divisible_by_three = _mm_rem_epi32(len_vec, three_vec);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmporh27xhp.cpp:67:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   67 |         __m128i divisible_by_i = _mm_rem_epi32(len_vec, i_vec);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmporh27xhp.cpp:68:43: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   68 |         __m128i divisible_by_i_plus_two = _mm_rem_epi32(len_vec, i_plus_two_vec);\n      |                                           ^~~~~~~~~~~~~\n      |                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n4 errors generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwkl4kwlu.cpp:51:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   51 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpwkl4kwlu.cpp:52:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   52 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n[REDACTED]/tmpwkl4kwlu.cpp:53:11: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   53 |     sum = _mm_hadd_epi16(sum, sum);\n      |           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkbok58in.cpp:43:38: error: always_inline function '_mm_popcnt_epi32' requires target feature 'avx512vpopcntdq', but would be inlined into function 'solve_simd' that is compiled without support for 'avx512vpopcntdq'\n   43 |         count = _mm_add_epi32(count, _mm_popcnt_epi32(bits));\n      |                                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7km6jj6j.cpp:46:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   46 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmp7km6jj6j.cpp:47:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   47 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzlo3t2wn.cpp:47:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   47 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpzlo3t2wn.cpp:48:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_simd' that is compiled without support for 'ssse3'\n   48 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz2hlm68f.cpp:43:22: error: no matching function for call to '_mm_setr_epi8'\n   43 |     __m128i vowels = _mm_setr_epi8('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 0, 0, 0, 0, 0, 0, 0);\n      |                      ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3772:1: note: candidate function not viable: requires 16 arguments, but 17 were provided\n 3772 | _mm_setr_epi8(char __b0, char __b1, char __b2, char __b3, char __b4, char __b5,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3773 |               char __b6, char __b7, char __b8, char __b9, char __b10,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3774 |               char __b11, char __b12, char __b13, char __b14, char __b15) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp1i5uazr.cpp:58:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   58 |         case_swapped = _mm_blendv_epi8(case_swapped, two_ahead, is_vowel);\n      |                        ^\n[REDACTED]/tmpp1i5uazr.cpp:59:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   59 |         case_swapped = _mm_blendv_epi8(case_swapped, _mm_sub_epi8(case_swapped, upper_case_offset), is_upper);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps7kvz2ia.cpp:58:21: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   58 |             input = _mm_blendv_epi8(input, next_char, cmp);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjhkq3mrt.cpp:55:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i result_chars = _mm_blendv_epi8(case_swapped, incremented, is_vowel);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp23b3duoa.cpp:57:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   57 |         swapped_case = _mm_blendv_epi8(swapped_case, two_ahead, is_vowel);\n      |                        ^\n[REDACTED]/tmp23b3duoa.cpp:60:40: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i clamped = _mm_min_epi8(_mm_max_epi8(swapped_case, lower_bound), upper_bound);\n      |                                        ^\n[REDACTED]/tmp23b3duoa.cpp:60:27: error: always_inline function '_mm_min_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i clamped = _mm_min_epi8(_mm_max_epi8(swapped_case, lower_bound), upper_bound);\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_nhyl740.cpp:63:27: error: use of undeclared identifier '_mm_maskload_epi8'\n   63 |                 key_vec = _mm_maskload_epi8(key.c_str() + i, _mm_set_epi8(remaining < 15, remaining < 14, remaining < 13, remaining < 12, remaining < 11, remaining < 10, remaining < 9, remaining < 8, remaining < 7, remaining < 6, remaining < 5, remaining < 4, remaining < 3, remaining < 2, remaining < 1, 0));\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdjdg7h5x.cpp:57:17: error: no viable overloaded '='\n   57 |             key = padded_key;\n      |             ~~~ ^ ~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: candidate function not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  812 |       operator=(const basic_string& __str)\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: candidate function not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  823 |       operator=(const _CharT* __s)\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:835:7: note: candidate function not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  835 |       operator=(_CharT __c)\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: candidate function not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  853 |       operator=(basic_string&& __str)\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:921:7: note: candidate function not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  921 |       operator=(initializer_list<_CharT> __l)\n      |       ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:936:8: note: candidate function template not viable: 'this' argument has type 'const std::string' (aka 'const basic_string<char>'), but method is not marked const\n  936 |        operator=(const _Tp& __svt)\n      |        ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ab9h9hn.cpp:56:13: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |         if (_mm_extract_epi32(sieve, i) == 1) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp6ab9h9hn.cpp:66:13: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   66 |         if (_mm_extract_epi32(sieve, i) == 1) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcbwjadns.cpp:56:18: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         if (sieve.m128i_i32[i] == 0) continue; // Skip if already marked\n      |             ~~~~~^~~~~~~~~~\n[REDACTED]/tmpcbwjadns.cpp:63:18: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   63 |             sieve.m128i_i32[j] = 0; // Mark as non-prime\n      |             ~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_p9hn3pa.cpp:67:37: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   67 |                 __m128i remainder = _mm_rem_epi32(current_indices, divisor);\n      |                                     ^~~~~~~~~~~~~\n      |                                     _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp_p9hn3pa.cpp:72:17: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   72 |             if (_mm_extract_epi32(mask, j) == 0) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp_p9hn3pa.cpp:73:34: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   73 |                 primes.push_back(_mm_extract_epi32(current_indices, j));\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl32q295p.cpp:56:13: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |         if (_mm_extract_epi32(sieve, i) == 1) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpl32q295p.cpp:64:13: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   64 |         if (_mm_extract_epi32(sieve, i) == 1) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps0rnza3n.cpp:70:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   70 |                 __m128i mod = _mm_rem_epi32(idx, j_vec);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmps0rnza3n.cpp:78:30: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   78 |             if (i + k < n && _mm_extract_epi32(is_prime_mask, k)) {\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnwmz_au2.cpp:54:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   54 |         count += _mm_popcnt_u32(_mm_movemask_epi8(is_vowel));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq_anc612.cpp:38:22: error: no matching function for call to '_mm_setr_epi8'\n   38 |     __m128i vowels = _mm_setr_epi8('A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E');\n      |                      ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3772:1: note: candidate function not viable: requires 16 arguments, but 17 were provided\n 3772 | _mm_setr_epi8(char __b0, char __b1, char __b2, char __b3, char __b4, char __b5,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3773 |               char __b6, char __b7, char __b8, char __b9, char __b10,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3774 |               char __b11, char __b12, char __b13, char __b14, char __b15) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu7srniyf.cpp:38:22: error: no matching function for call to '_mm_setr_epi8'\n   38 |     __m128i vowels = _mm_setr_epi8('A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E');\n      |                      ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3772:1: note: candidate function not viable: requires 16 arguments, but 17 were provided\n 3772 | _mm_setr_epi8(char __b0, char __b1, char __b2, char __b3, char __b4, char __b5,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3773 |               char __b6, char __b7, char __b8, char __b9, char __b10,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3774 |               char __b11, char __b12, char __b13, char __b14, char __b15) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt9ehrd0w.cpp:48:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   48 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpatqrm_vy.cpp:29:22: error: no matching function for call to '_mm_setr_epi8'\n   29 |     __m128i vowels = _mm_setr_epi8('A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E', 'I', 'O', 'U', 'A', 'E');\n      |                      ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3772:1: note: candidate function not viable: requires 16 arguments, but 17 were provided\n 3772 | _mm_setr_epi8(char __b0, char __b1, char __b2, char __b3, char __b4, char __b5,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3773 |               char __b6, char __b7, char __b8, char __b9, char __b10,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3774 |               char __b11, char __b12, char __b13, char __b14, char __b15) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptttdy8oh.cpp:54:11: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   54 |     sum = _mm_hadd_epi64(sum, sum); // Horizontal add\n      |           ^~~~~~~~~~~~~~\n      |           _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq8kxmz_9.cpp:55:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   55 |     __m128i avg = _mm_div_epi64(sum, count);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk5w9xvfy.cpp:55:15: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   55 |     sum_vec = _mm_hadd_epi64(sum_vec, sum_vec);\n      |               ^~~~~~~~~~~~~~\n      |               _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9qmip05j.cpp:63:35: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   63 |                 result[idx - 1] = _mm_extract_epi32(factorial, j) % 10000;\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp9qmip05j.cpp:67:24: error: use of undeclared identifier 'idx'\n   67 |                 result[idx - 1] = _mm_extract_epi32(sum, j);\n      |                        ^\n[REDACTED]/tmp9qmip05j.cpp:67:35: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |                 result[idx - 1] = _mm_extract_epi32(sum, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaheag2qu.cpp:73:31: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   73 |                 result[idx] = _mm_extract_epi32(factorial, j) % 10000;\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpaheag2qu.cpp:75:31: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   75 |                 result[idx] = _mm_extract_epi32(sum, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp66042pvn.cpp:63:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   63 |                 factorial = _mm_rem_epi32(factorial, mod);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn68vb64b.cpp:59:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   59 |                 factorial = _mm_mullo_epi32(factorial, _mm_set1_epi32(idx));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8exmdunk.cpp:67:24: error: use of undeclared identifier 'idx'\n   67 |                 result[idx - 1] = _mm_cvtsi128_si32(sum);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt6gezjyy.cpp:55:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |             int num = _mm_extract_epi32(indices, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpt6gezjyy.cpp:58:31: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   58 |                 palindromes = _mm_insert_epi32(palindromes, num, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2cxsiyhx.cpp:64:48: error: no matching function for call to '_mm_srl_epi32'\n   64 |         even_count = _mm_add_epi32(even_count, _mm_srl_epi32(evens, 1));\n      |                                                ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2969:46: note: candidate function not viable: no known conversion from 'int' to '__m128i' (vector of 2 'long long' values) for 2nd argument\n 2969 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srl_epi32(__m128i __a,\n      |                                              ^\n 2970 |                                                            __m128i __count) {\n      |                                                            ~~~~~~~~~~~~~~~\n[REDACTED]/tmp2cxsiyhx.cpp:65:46: error: no matching function for call to '_mm_srl_epi32'\n   65 |         odd_count = _mm_add_epi32(odd_count, _mm_srl_epi32(odds, 1));\n      |                                              ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2969:46: note: candidate function not viable: no known conversion from 'int' to '__m128i' (vector of 2 'long long' values) for 2nd argument\n 2969 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srl_epi32(__m128i __a,\n      |                                              ^\n 2970 |                                                            __m128i __count) {\n      |                                                            ~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8i1ioxtp.cpp:56:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   56 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n[REDACTED]/tmp8i1ioxtp.cpp:72:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   72 |     sum_mask = _mm_hadd_epi32(sum_mask, sum_mask);\n      |                ^\n[REDACTED]/tmp8i1ioxtp.cpp:73:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   73 |     sum_mask = _mm_hadd_epi32(sum_mask, sum_mask);\n      |                ^\n3 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1oyspgoz.cpp:65:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   65 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplea7tv_3.cpp:51:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpej8m_p7l.cpp:65:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   65 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk1we4zhm.cpp:69:33: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   69 |             __m128i remainder = _mm_rem_epi32(abs_nums, mod);\n      |                                 ^~~~~~~~~~~~~\n      |                                 _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpk1we4zhm.cpp:71:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   71 |             abs_nums = _mm_div_epi32(abs_nums, mod);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnm1gapk8.cpp:50:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   50 |         lst1_even_count += _mm_popcnt_u32(_mm_cvtsi128_si32(lst1_even));\n      |                            ^\n[REDACTED]/tmpnm1gapk8.cpp:51:27: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         lst2_odd_count += _mm_popcnt_u32(_mm_cvtsi128_si32(lst2_odd));\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdafoxb12.cpp:50:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   50 |         lst1_even_count += _mm_popcnt_u32(_mm_cvtsi128_si32(lst1_even));\n      |                            ^\n[REDACTED]/tmpdafoxb12.cpp:51:27: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         lst2_odd_count += _mm_popcnt_u32(_mm_cvtsi128_si32(lst2_odd));\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpll60lxku.cpp:50:28: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   50 |         lst1_even_count += _mm_popcnt_u32(_mm_cvtsi128_si32(lst1_even));\n      |                            ^\n[REDACTED]/tmpll60lxku.cpp:51:31: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   51 |         lst2_odd_count += 4 - _mm_popcnt_u32(_mm_cvtsi128_si32(lst2_even));\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp39mp7yei.cpp:48:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   48 |         lst1_even += _mm_popcnt_u32(_mm_movemask_epi8(lst1_even_check));\n      |                      ^\n[REDACTED]/tmp39mp7yei.cpp:49:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   49 |         lst2_odd += _mm_popcnt_u32(_mm_movemask_epi8(lst2_odd_check));\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7_b4ailh.cpp:69:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   69 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_digits));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmzxnegg8.cpp:70:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   70 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_digits));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy79o0xtf.cpp:71:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   71 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_digits));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8flda3iz.cpp:76:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   76 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(is_odd));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg6akgcob.cpp:72:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   72 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(is_odd));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5329erzg.cpp:49:26: error: reinterpret_cast from 'const value_type *' (aka 'const long *') to '__m128i *' casts away qualifiers\n   49 |         _mm_storeu_si128(reinterpret_cast<__m128i*>(&nums[i]), min_vec);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp5329erzg.cpp:54:24: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   54 |         current_sum += _mm_extract_epi64(min_vec, 2);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmp5329erzg.cpp:55:24: error: argument value 3 is outside the valid range [0, 1] [-Wargument-outside-range]\n   55 |         current_sum += _mm_extract_epi64(min_vec, 3);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsumimlmp.cpp:51:23: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   51 |         min_sum_vec = _mm_min_epi64(min_sum_vec, current_sum_vec);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp19bkxxxl.cpp:49:19: error: no matching function for call to 'min'\n   49 |         min_sum = std::min(min_sum, _mm_cvtsi128_si64(min_vec));\n      |                   ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp41a6v18b.cpp:50:23: error: no matching function for call to 'min'\n   50 |         current_sum = std::min(current_sum, _mm_extract_epi64(min_vec, 1));\n      |                       ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp41a6v18b.cpp:51:23: error: no matching function for call to 'min'\n   51 |         current_sum = std::min(current_sum, _mm_extract_epi64(min_vec, 2));\n      |                       ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp41a6v18b.cpp:52:23: error: no matching function for call to 'min'\n   52 |         current_sum = std::min(current_sum, _mm_extract_epi64(min_vec, 3));\n      |                       ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp41a6v18b.cpp:51:45: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   51 |         current_sum = std::min(current_sum, _mm_extract_epi64(min_vec, 2));\n      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmp41a6v18b.cpp:52:45: error: argument value 3 is outside the valid range [0, 1] [-Wargument-outside-range]\n   52 |         current_sum = std::min(current_sum, _mm_extract_epi64(min_vec, 3));\n      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu7zlgmro.cpp:50:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   50 |         min_vec = _mm_min_epi64(min_vec, current_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3alv31j2.cpp:49:17: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   49 |     total_sum = _mm_hadd_epi16(total_sum, total_sum);\n      |                 ^\n[REDACTED]/tmp3alv31j2.cpp:50:17: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   50 |     total_sum = _mm_hadd_epi16(total_sum, total_sum);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmbs2p6jj.cpp:56:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   56 |     total_sum = _mm_hadd_epi32(total_sum, total_sum);\n      |                 ^\n[REDACTED]/tmpmbs2p6jj.cpp:57:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   57 |     total_sum = _mm_hadd_epi32(total_sum, total_sum);\n      |                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbswwb7_v.cpp:45:16: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   45 |         sum += _mm_extract_epi32(sum_vec, j);\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpotfxc1bs.cpp:49:16: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   49 |         sum += _mm_extract_epi32(sum_magnitudes, j);\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgdv876m6.cpp:49:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i magnitudes = _mm_abs_epi32(vec);\n      |                              ^\n[REDACTED]/tmpgdv876m6.cpp:57:56: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                                                        ^\n[REDACTED]/tmpgdv876m6.cpp:57:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                         ^\n[REDACTED]/tmpgdv876m6.cpp:61:56: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   61 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                                                        ^\n[REDACTED]/tmpgdv876m6.cpp:61:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   61 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                         ^\n[REDACTED]/tmpgdv876m6.cpp:72:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   72 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(1));\n      |                             ^\n[REDACTED]/tmpgdv876m6.cpp:74:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   74 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(-1));\n      |                             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpje4yf6p4.cpp:40:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n[REDACTED]/tmpje4yf6p4.cpp:45:50: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   45 |         prod_signs = _mm_mullo_epi32(prod_signs, _mm_blendv_epi8(_mm_set1_epi32(-1), _mm_set1_epi32(1), sign_mask));\n      |                                                  ^\n[REDACTED]/tmpje4yf6p4.cpp:45:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   45 |         prod_signs = _mm_mullo_epi32(prod_signs, _mm_blendv_epi8(_mm_set1_epi32(-1), _mm_set1_epi32(1), sign_mask));\n      |                      ^\n[REDACTED]/tmpje4yf6p4.cpp:46:50: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   46 |         prod_signs = _mm_mullo_epi32(prod_signs, _mm_blendv_epi8(_mm_set1_epi32(0), _mm_set1_epi32(1), _mm_cmpeq_epi32(vec, _mm_setzero_si128())));\n      |                                                  ^\n[REDACTED]/tmpje4yf6p4.cpp:46:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   46 |         prod_signs = _mm_mullo_epi32(prod_signs, _mm_blendv_epi8(_mm_set1_epi32(0), _mm_set1_epi32(1), _mm_cmpeq_epi32(vec, _mm_setzero_si128())));\n      |                      ^\n[REDACTED]/tmpje4yf6p4.cpp:54:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   54 |             prod_signs = _mm_mullo_epi32(prod_signs, _mm_set1_epi32(1));\n      |                          ^\n[REDACTED]/tmpje4yf6p4.cpp:56:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   56 |             prod_signs = _mm_mullo_epi32(prod_signs, _mm_set1_epi32(-1));\n      |                          ^\n7 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppzflcsia.cpp:49:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i magnitudes = _mm_abs_epi32(vec);\n      |                              ^\n[REDACTED]/tmppzflcsia.cpp:57:56: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                                                        ^\n[REDACTED]/tmppzflcsia.cpp:57:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                         ^\n[REDACTED]/tmppzflcsia.cpp:61:56: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   61 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                                                        ^\n[REDACTED]/tmppzflcsia.cpp:61:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   61 |         product_signs = _mm_mullo_epi32(product_signs, _mm_blendv_epi8(\n      |                         ^\n[REDACTED]/tmppzflcsia.cpp:72:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   72 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(1));\n      |                             ^\n[REDACTED]/tmppzflcsia.cpp:74:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   74 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(-1));\n      |                             ^\n[REDACTED]/tmppzflcsia.cpp:79:22: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   79 |     sum_magnitudes = _mm_hadd_epi32(sum_magnitudes, sum_magnitudes);\n      |                      ^\n[REDACTED]/tmppzflcsia.cpp:80:22: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   80 |     sum_magnitudes = _mm_hadd_epi32(sum_magnitudes, sum_magnitudes);\n      |                      ^\n9 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwsmf2mds.cpp:40:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i magnitudes = _mm_abs_epi32(vec);\n      |                              ^\n[REDACTED]/tmpwsmf2mds.cpp:43:25: error: always_inline function '_mm_sign_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i signs = _mm_sign_epi32(vec, _mm_set1_epi32(1));\n      |                         ^\n[REDACTED]/tmpwsmf2mds.cpp:44:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   44 |         product_signs = _mm_mullo_epi32(product_signs, signs);\n      |                         ^\n[REDACTED]/tmpwsmf2mds.cpp:50:56: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   50 |         sum_magnitudes = _mm_add_epi32(sum_magnitudes, _mm_abs_epi32(_mm_set1_epi32(value)));\n      |                                                        ^\n[REDACTED]/tmpwsmf2mds.cpp:52:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   52 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(1));\n      |                             ^\n[REDACTED]/tmpwsmf2mds.cpp:54:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   54 |             product_signs = _mm_mullo_epi32(product_signs, _mm_set1_epi32(-1));\n      |                             ^\n6 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8iboivnd.cpp:85:39: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   85 |                     pathValues[idx] = _mm_min_epi32(pathValues[idx], _mm_set1_epi32(grid[i][j]));\n      |                                       ^\n[REDACTED]/tmp8iboivnd.cpp:91:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   91 |                 minVal = _mm_min_epi32(minVal, pathValues[p]);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7j8mr0u3.cpp:90:46: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   90 |                                 currentMin = _mm_min_epi32(currentMin, value);\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq7xdncgx.cpp:86:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   86 |                 min_values = _mm_min_epi32(min_values, current_values);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpynvu6wt4.cpp:106:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  106 |             minPath = _mm_min_epi32(minPath, currentPath);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpszt_6lno.cpp:100:27: error: use of undeclared identifier 'newRow'\n  100 |                     row = newRow; // Update row to the minimum neighbor\n      |                           ^\n[REDACTED]/tmpszt_6lno.cpp:101:27: error: use of undeclared identifier 'newCol'\n  101 |                     col = newCol; // Update col to the minimum neighbor\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5jdjxwzw.cpp:65:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   65 |         product = _mm_mullo_epi8(product, non_zero_odd_digits);\n      |                   ^\n[REDACTED]/tmp5jdjxwzw.cpp:73:22: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   73 |         int8_t val = _mm_extract_epi8(product, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuz08jnm7.cpp:57:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   57 |         product = _mm_mullo_epi8(product, odd_digits);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp093qvrdd.cpp:43:26: error: no matching function for call to '_mm_set_epi8'\n   43 |         __m128i digits = _mm_set_epi8(\n      |                          ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 8 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp093qvrdd.cpp:57:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   57 |         product = _mm_mullo_epi8(product, non_zero_odd_digits);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6obz9y9m.cpp:66:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   66 |         product = _mm_mullo_epi8(product, product_mask);\n      |                   ^\n[REDACTED]/tmp6obz9y9m.cpp:74:23: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   74 |         uint8_t val = _mm_extract_epi8(result, i);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnkfzkr1y.cpp:66:19: error: use of undeclared identifier '_mm_mullo_epi8'\n   66 |         product = _mm_mullo_epi8(product, odd_product);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuh5l6gu_.cpp:40:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpuh5l6gu_.cpp:45:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse3'\n   45 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n[REDACTED]/tmpuh5l6gu_.cpp:46:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse3'\n   46 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n[REDACTED]/tmpuh5l6gu_.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuh5l6gu_.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuh5l6gu_.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 3 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjfyoc2xe.cpp:39:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpjfyoc2xe.cpp:45:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse3'\n   45 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n[REDACTED]/tmpjfyoc2xe.cpp:46:11: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse3'\n   46 |     sum = _mm_hadd_ps(sum, sum);\n      |           ^\n[REDACTED]/tmpjfyoc2xe.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpjfyoc2xe.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpjfyoc2xe.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 3 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw37f9nun.cpp:39:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpw37f9nun.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpw37f9nun.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpw37f9nun.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuad5i6x1.cpp:40:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpuad5i6x1.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuad5i6x1.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuad5i6x1.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppj9g4z0f.cpp:39:15: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         vec = _mm_ceil_ps(vec);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmppj9g4z0f.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmppj9g4z0f.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmppj9g4z0f.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu4i8rt6k.cpp:41:33: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'can_arrange_simd' that is compiled without support for 'sse4.1'\n   41 |                     max_index = _mm_max_epi32(max_index, _mm_set1_epi32(i + j));\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbat22phk.cpp:51:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         max_neg = _mm_max_epi32(max_neg, neg_values);\n      |                   ^\n[REDACTED]/tmpbat22phk.cpp:52:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         min_pos = _mm_min_epi32(min_pos, pos_values);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsqwl3o2b.cpp:45:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   45 |         max_neg = _mm_max_epi32(max_neg, _mm_and_si128(vec, neg_mask));\n      |                   ^\n[REDACTED]/tmpsqwl3o2b.cpp:46:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         min_pos = _mm_min_epi32(min_pos, _mm_and_si128(vec, pos_mask));\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkih9kva2.cpp:49:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         largest_neg = _mm_max_epi32(largest_neg, _mm_and_si128(vec, mask_neg));\n      |                       ^\n[REDACTED]/tmpkih9kva2.cpp:50:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   50 |         smallest_pos = _mm_min_epi32(smallest_pos, _mm_and_si128(vec, mask_pos));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdwaeyiqu.cpp:45:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   45 |         max_neg = _mm_max_epi32(max_neg, _mm_and_si128(vec, neg_mask));\n      |                   ^\n[REDACTED]/tmpdwaeyiqu.cpp:46:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         min_pos = _mm_min_epi32(min_pos, _mm_and_si128(vec, pos_mask));\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb2tvamkv.cpp:49:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |             max_neg = _mm_max_epi32(max_neg, vec);\n      |                       ^\n[REDACTED]/tmpb2tvamkv.cpp:53:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |             min_pos = _mm_min_epi32(min_pos, vec);\n      |                       ^\n[REDACTED]/tmpb2tvamkv.cpp:61:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   61 |             max_neg = _mm_max_epi32(max_neg, _mm_set1_epi32(lst[i]));\n      |                       ^\n[REDACTED]/tmpb2tvamkv.cpp:64:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   64 |             min_pos = _mm_min_epi32(min_pos, _mm_set1_epi32(lst[i]));\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3gla5o1q.cpp:38:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   38 |         result = _mm_mullo_epi64(result, current);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpos1ycalq.cpp:38:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   38 |         result = _mm_mullo_epi64(result, temp);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfrpogbzw.cpp:39:25: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   39 |             factorial = _mm_mullo_epi64(factorial, _mm_set1_epi64x(j));\n      |                         ^\n[REDACTED]/tmpfrpogbzw.cpp:41:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   41 |         result = _mm_mullo_epi64(result, factorial);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7uf7r1m3.cpp:41:25: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   41 |             factorial = _mm_mullo_epi64(factorial, _mm_set_epi64x(j, j));\n      |                         ^\n[REDACTED]/tmp7uf7r1m3.cpp:44:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   44 |         result = _mm_mullo_epi64(result, factorial);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwo5ekcyl.cpp:38:18: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'avx512vl'\n   38 |         result = _mm_mullo_epi64(result, current);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiu0awpmq.cpp:47:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpiu0awpmq.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmpiu0awpmq.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n[REDACTED]/tmpiu0awpmq.cpp:56:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   56 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpiu0awpmq.cpp:57:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   57 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n5 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr8c00qq8.cpp:47:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpr8c00qq8.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmpr8c00qq8.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjwp_p6kf.cpp:47:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpjwp_p6kf.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmpjwp_p6kf.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_dzakos4.cpp:47:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmp_dzakos4.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmp_dzakos4.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptpo_oara.cpp:47:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmptpo_oara.cpp:48:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmptpo_oara.cpp:48:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n[REDACTED]/tmptpo_oara.cpp:56:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   56 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmptpo_oara.cpp:57:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   57 |     sum_vec = _mm_hadd_epi32(sum_vec, sum_vec);\n      |               ^\n5 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkyekox79.cpp:60:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   60 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxseknxcg.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(_mm_movemask_epi8(valid_condition));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp31l412fy.cpp:62:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   62 |         count += _mm_popcnt_u32(_mm_movemask_epi8(valid_elements));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc0l_l3ve.cpp:61:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   61 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptpb5q37f.cpp:62:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   62 |         count += _mm_popcnt_u32(_mm_movemask_epi8(valid_numbers));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmporxg1xhw.cpp:80:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   80 |             int value = _mm_extract_epi32(results, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpje6xvila.cpp:90:24: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   90 |         total_count += _mm_extract_epi32(mod3_count, i);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoaj_uyw7.cpp:81:27: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   81 |             int mod_val = _mm_extract_epi32(mod, j);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpoaj_uyw7.cpp:89:31: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   89 |                 int mod_val = _mm_extract_epi32(mod, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4j2l32ud.cpp:77:30: error: use of undeclared identifier '_mm_rem_epi64'\n   77 |         __m128i mod_values = _mm_rem_epi64(values, _mm_set1_epi64x(3));\n      |                              ^\n[REDACTED]/tmp4j2l32ud.cpp:80:23: error: argument to '__builtin_ia32_vec_ext_v2di' must be a constant integer\n   80 |             int mod = _mm_extract_epi64(mod_values, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpar738hnm.cpp:76:35: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'get_max_triples_simd' that is compiled without support for 'sse4.1'\n   76 |         __m128i a = _mm_sub_epi32(_mm_mullo_epi32(idx, idx), idx);\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_r2okerr.cpp:48:22: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   48 |     __m128i result = _mm_blend_epi16(y_vec, x_vec, prime ? 0 : 0xFFFF);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb7_6gx4v.cpp:48:22: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   48 |     __m128i result = _mm_blend_epi16(y_vec, x_vec, prime ? 0 : 0xFFFF);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpia4gsk7n.cpp:49:22: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   49 |     __m128i result = _mm_blend_epi16(y_vec, x_vec, prime ? 0 : 0xFFFF);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuk1bj8xq.cpp:48:22: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   48 |     __m128i result = _mm_blend_epi16(y_vec, x_vec, prime ? 0 : 0xFFFF);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz37tcv9_.cpp:49:22: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   49 |     __m128i result = _mm_blend_epi16(y_vec, x_vec, prime ? 0 : 0xFFFF);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppq1238j_.cpp:42:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgvk_y485.cpp:42:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaxtnzrzl.cpp:42:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7xmuuqcz.cpp:42:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx9dyzy4o.cpp:42:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff_vec = _mm_abs_epi32(diff_vec);\n      |                                ^\n1 error generated.\n"}

{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_0_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpov3mgsaz.cpp:41:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   41 |         result = _mm_div_epi32(result, seven_vec);\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg19we0vc.cpp:40:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   40 |         result = _mm_div_epi32(result, seven_vec);\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe7neapij.cpp:46:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppntnib0s.cpp:55:26: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |         __m128i result = _mm_div_epi32(sum, seven_vec);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqzy3epu_.cpp:47:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         result = _mm_div_epi32(result, seven_vec);\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp44ltkpyt.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128d result_vec = _mm_blendv_pd(src_vec, scaled_vec, cmp_result);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_edb7mwz.cpp:42:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128d result = _mm_blendv_pd(v_src, scaled, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbr8hyvm3.cpp:42:26: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128d result = _mm_blendv_pd(v_src, scaled, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdoi29upf.cpp:38:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwrzcvozl.cpp:38:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpja4udi56.cpp:35:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   35 |         sum = _mm_srai_epi64(sum, 1); // Divide by 2 using right shift\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphsstgvgf.cpp:38:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp46pqqjed.cpp:38:15: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         sum = _mm_srai_epi64(sum, 1);\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdf754ame.cpp:42:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   42 |         min_vec = _mm_min_epi32(min_vec, even_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0gmu0aen.cpp:42:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   42 |         min_vec = _mm_min_epi32(min_vec, vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2gm0aevx.cpp:51:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   51 |         min_vec = _mm_min_epi32(min_vec, even_vals);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzb_rewv9.cpp:50:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   50 |         min_vec = _mm_min_epu32(min_vec, vec1_even);\n      |                   ^\n[REDACTED]/tmpzb_rewv9.cpp:51:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   51 |         min_vec = _mm_min_epu32(min_vec, vec2_even);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5038bqfy.cpp:41:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   41 |             min_vec = _mm_min_epi32(min_vec, data);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_12_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgrz_vqzt.cpp:44:23: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   44 |             max_val = _mm_max_epi8(data, max_val);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsel7z6qu.cpp:47:23: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   47 |             max_vec = _mm_max_epi8(data, max_vec); // Requires SSE4.1, fallback to manual blend if needed\n      |                       ^\n[REDACTED]/tmpsel7z6qu.cpp:51:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   51 |             indices = _mm_blendv_epi8(indices, current_indices, mask); // Requires SSE4.1\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpllao02g0.cpp:46:23: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   46 |             max_val = _mm_max_epi8(data, max_val);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2xldqqhy.cpp:45:34: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   45 |                 if (src[i + j] > _mm_extract_epi8(max_val, 0)) {\n      |                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmp2xldqqhy.cpp:54:22: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   54 |         if (src[i] > _mm_extract_epi8(max_val, 0)) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu6u96fwr.cpp:46:23: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   46 |             max_vec = _mm_max_epi8(data, max_vec); // Requires SSE4.1, fallback to manual if needed\n      |                       ^\n[REDACTED]/tmpu6u96fwr.cpp:48:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   48 |             max_indices = _mm_blendv_epi8(max_indices, current_indices, cmp); // Requires SSE4.1\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph3fpqsz_.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiejd0otr.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3r36j9m7.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpecbgv5_g.cpp:35:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_7kvr3z5.cpp:37:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   37 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprspycd12.cpp:47:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |         __m128 rounded = _mm_ceil_ps(prod);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgrr4kebn.cpp:47:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |         result = _mm_ceil_ps(result);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpgrr4kebn.cpp:54:31: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128 final_result = _mm_blendv_ps(neg_one, result, mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyp0450y7.cpp:53:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         __m128 rounded = _mm_ceil_ps(prod);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpyp0450y7.cpp:55:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 result = _mm_blendv_ps(vneg1, rounded, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph6ybyxgk.cpp:60:29: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   60 |         __m128 rounded_up = _mm_ceil_ps(mul_result);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmph6ybyxgk.cpp:63:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128 result = _mm_blendv_ps(neg_one, rounded_up, condition);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm6ldevu5.cpp:56:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |         __m128 rounded = _mm_ceil_ps(mul);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpm6ldevu5.cpp:59:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128 result = _mm_blendv_ps(const_neg_one, rounded, cond);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqztahh5.cpp:48:18: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   48 |         sum_sq = _mm_hadd_ps(sum_sq, sum_sq);\n      |                  ^\n[REDACTED]/tmpeqztahh5.cpp:49:18: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   49 |         sum_sq = _mm_hadd_ps(sum_sq, sum_sq);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3bdi3v94.cpp:58:23: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   58 |         __m128 temp = _mm_hadd_ps(sum, sum);\n      |                       ^\n[REDACTED]/tmp3bdi3v94.cpp:59:16: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   59 |         temp = _mm_hadd_ps(temp, temp);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpph5kmtfp.cpp:58:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   58 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n[REDACTED]/tmpph5kmtfp.cpp:59:15: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   59 |         sum = _mm_hadd_ps(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn77pbgsu.cpp:48:18: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   48 |         sum_sq = _mm_hadd_ps(sum_sq, sum_sq);\n      |                  ^\n[REDACTED]/tmpn77pbgsu.cpp:49:18: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_normalize_rows_simd' that is compiled without support for 'sse3'\n   49 |         sum_sq = _mm_hadd_ps(sum_sq, sum_sq);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyfoprhzp.cpp:56:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   56 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5tdwq1mg.cpp:42:32: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   42 |                 __m128d temp = _mm_hadd_pd(mul0, mul1);\n      |                                ^\n[REDACTED]/tmp5tdwq1mg.cpp:51:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   51 |             __m128d rounded = _mm_round_pd(_mm_set1_pd(result), _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsug7lnmg.cpp:44:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   44 |             r0 = _mm_round_ps(r0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpsug7lnmg.cpp:48:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             r1 = _mm_round_ps(r1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpsug7lnmg.cpp:52:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   52 |             r2 = _mm_round_ps(r2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpsug7lnmg.cpp:56:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             r3 = _mm_round_ps(r3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4iqhk9t3.cpp:56:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             col0 = _mm_round_ps(col0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp4iqhk9t3.cpp:57:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |             col1 = _mm_round_ps(col1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp4iqhk9t3.cpp:58:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   58 |             col2 = _mm_round_ps(col2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp4iqhk9t3.cpp:59:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   59 |             col3 = _mm_round_ps(col3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp76dca1zg.cpp:43:34: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   43 |                 __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprowsqumz.cpp:46:64: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   46 |                         _mm_store_ss(&dst[(j + k) * rows + i], _mm_shuffle_ps(result, result, k));\n      |                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_1qh8drc.cpp:43:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   43 |         __m128 rounded = _mm_round_ps(sub, _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_wtkq05p.cpp:47:21: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   47 |         __m128 t1 = _mm_hadd_ps(sum, sum);\n      |                     ^\n[REDACTED]/tmp_wtkq05p.cpp:48:21: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   48 |         __m128 t2 = _mm_hadd_ps(t1, t1);\n      |                     ^\n2 errors generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr5mqk39m.cpp:50:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   50 |     __m128d temp = _mm_hadd_pd(sum, sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptipn63wd.cpp:59:23: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   59 |             shifted = _mm_alignr_epi8(next, shifted, 4);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8oav0zko.cpp:58:36: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   58 |             __m128i shifted_next = _mm_alignr_epi8(next, current, 4);\n      |                                    ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_yc9ow8h.cpp:58:36: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   58 |             __m128i shifted_next = _mm_alignr_epi8(next, current, 4);\n      |                                    ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpidqwvsq9.cpp:34:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i quotient = _mm_div_epi16(div_result, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy9s4xcty.cpp:37:23: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   37 |         __m128i div = _mm_div_epi16(src_vec, base_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdgmlr9ar.cpp:37:23: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   37 |         __m128i div = _mm_div_epi16(src_vec, base_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdsmewue9.cpp:34:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i quotient = _mm_div_epi16(src_vec, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptiie2xg9.cpp:37:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   37 |         __m128i quotient = _mm_div_epi16(src_vec, base_vec);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplbiu_r5s.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi4zt5ljo.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(_mm_movemask_epi8(eq));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxoseb63o.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptyd6rrey.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2rgawd8h.cpp:35:23: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i abs = _mm_abs_epi64(prod);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn7crcdw7.cpp:37:26: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'ssse3'\n   37 |         __m128i vabs_y = _mm_abs_epi32(vy);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz13_yqsu.cpp:34:26: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'ssse3'\n   34 |         __m128i abs_vy = _mm_abs_epi32(vy);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzo3_bg_l.cpp:34:26: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'ssse3'\n   34 |         __m128i abs_vy = _mm_abs_epi32(vy);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp86mwxdy4.cpp:37:23: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   37 |         __m128i abs = _mm_abs_epi64(mul);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa6nrbesv.cpp:50:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   50 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpa6nrbesv.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd1ngb2ys.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpd1ngb2ys.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzun4wp3w.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpzun4wp3w.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjrvg96dk.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpjrvg96dk.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_38_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_38_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpql8u3do8.cpp:43:24: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   43 |         __m128d temp = _mm_hadd_pd(sum, sum);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpplwe7qvf.cpp:42:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i a_lo = _mm_cvtepi8_epi16(a);\n      |                        ^\n[REDACTED]/tmpplwe7qvf.cpp:43:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i a_hi = _mm_cvtepi8_epi16(_mm_srli_si128(a, 8));\n      |                        ^\n[REDACTED]/tmpplwe7qvf.cpp:44:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i b_lo = _mm_cvtepi8_epi16(b);\n      |                        ^\n[REDACTED]/tmpplwe7qvf.cpp:45:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i b_hi = _mm_cvtepi8_epi16(_mm_srli_si128(b, 8));\n      |                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpla5b4_bj.cpp:42:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i a_lo = _mm_cvtepi8_epi16(_mm_unpacklo_epi8(a, _mm_setzero_si128()));\n      |                        ^\n[REDACTED]/tmpla5b4_bj.cpp:43:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i a_hi = _mm_cvtepi8_epi16(_mm_unpackhi_epi8(a, _mm_setzero_si128()));\n      |                        ^\n[REDACTED]/tmpla5b4_bj.cpp:44:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i b_lo = _mm_cvtepi8_epi16(_mm_unpacklo_epi8(b, _mm_setzero_si128()));\n      |                        ^\n[REDACTED]/tmpla5b4_bj.cpp:45:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i b_hi = _mm_cvtepi8_epi16(_mm_unpackhi_epi8(b, _mm_setzero_si128()));\n      |                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnjd4crm6.cpp:42:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i a_lo = _mm_cvtepi8_epi16(a);\n      |                        ^\n[REDACTED]/tmpnjd4crm6.cpp:43:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i a_hi = _mm_cvtepi8_epi16(_mm_srli_si128(a, 8));\n      |                        ^\n[REDACTED]/tmpnjd4crm6.cpp:44:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i b_lo = _mm_cvtepi8_epi16(b);\n      |                        ^\n[REDACTED]/tmpnjd4crm6.cpp:45:24: error: always_inline function '_mm_cvtepi8_epi16' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i b_hi = _mm_cvtepi8_epi16(_mm_srli_si128(b, 8));\n      |                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq7n66ivy.cpp:54:22: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i c1 = _mm_cvtepi8_epi32(_mm_loadu_si32(c1_bytes));\n      |                      ^\n[REDACTED]/tmpq7n66ivy.cpp:55:22: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i c2 = _mm_cvtepi8_epi32(_mm_loadu_si32(c2_bytes));\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxzuaqiui.cpp:50:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   50 |         counts[0] = _mm_popcnt_u32(vals[0]);\n      |                     ^\n[REDACTED]/tmpxzuaqiui.cpp:51:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   51 |         counts[1] = _mm_popcnt_u32(vals[1]);\n      |                     ^\n[REDACTED]/tmpxzuaqiui.cpp:52:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   52 |         counts[2] = _mm_popcnt_u32(vals[2]);\n      |                     ^\n[REDACTED]/tmpxzuaqiui.cpp:53:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   53 |         counts[3] = _mm_popcnt_u32(vals[3]);\n      |                     ^\n[REDACTED]/tmpxzuaqiui.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'popcnt'\n   64 |         out[i] = _mm_popcnt_u32(A[i]);\n      |                  ^\n5 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq20cbhe1.cpp:45:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   45 |         __m128i mod = _mm_rem_epi32(vec_a, three);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptyd4gchs.cpp:40:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   40 |         __m128i remainder = _mm_rem_epi32(vec_A, vec_three);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj0z7kics.cpp:40:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i remainder = _mm_mullo_epi32(vec_A, _mm_set1_epi32(0xAAAAAAAB)); // Approximation for division\n      |                             ^\n[REDACTED]/tmpj0z7kics.cpp:42:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   42 |         remainder = _mm_mullo_epi32(remainder, vec_three);\n      |                     ^\n[REDACTED]/tmpj0z7kics.cpp:49:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i vec_abs = _mm_abs_epi32(vec_A);\n      |                           ^\n[REDACTED]/tmpj0z7kics.cpp:52:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i result = _mm_blendv_epi8(vec_A, vec_abs, mask_divisible);\n      |                          ^\n4 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplmvzmkqj.cpp:39:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   39 |         __m128i remainder = _mm_rem_epi32(a, three);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx6_ppg4v.cpp:42:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   42 |         __m128i mod = _mm_rem_epi32(vec_a, three);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8ycpb1ox.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp8ycpb1ox.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp8ycpb1ox.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp8ycpb1ox.cpp:43:24: error: use of undeclared identifier '_mm_cmpeq_si128'\n   43 |         __m128i cond = _mm_cmpeq_si128(low_4bits, mask_4bits);\n      |                        ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4glt0z15.cpp:33:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i b1 = _mm_cvtepi16_epi32(a);\n      |                      ^\n[REDACTED]/tmp4glt0z15.cpp:35:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i b2 = _mm_cvtepi16_epi32(a_shifted);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5art2vff.cpp:54:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128 result = _mm_blendv_ps(a_vec, norm, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsy6gxoo5.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, normalized, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj367o8y1.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, normalized, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplb90w6oc.cpp:57:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128 result = _mm_blendv_ps(a_vec, norm_val, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxw302_0b.cpp:42:28: error: always_inline function '_mm_cvtepu8_epi32' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i cond_vec = _mm_cvtepu8_epi32(_mm_loadu_si32(&cond[i]));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_59_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpho7htt3s.cpp:61:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   61 |     __m128d temp = _mm_hadd_pd(sum, sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgbb67_fv.cpp:58:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   58 |     __m128d temp = _mm_hadd_pd(sum, sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "runtime failed: malloc(): invalid size (unsorted)\n"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2c3ki9na.cpp:71:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'simple_conv2d_simd' that is compiled without support for 'sse3'\n   71 |             __m128d hsum = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcu0uf85d.cpp:56:11: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   56 |     sum = _mm_hadd_pd(sum, sum);\n      |           ^\n[REDACTED]/tmpcu0uf85d.cpp:80:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   80 |     abs_sum = _mm_hadd_pd(abs_sum, abs_sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_65_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5mwhxnv2.cpp:54:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i vec_lo = _mm_cvtepi16_epi32(vec);\n      |                          ^\n[REDACTED]/tmp5mwhxnv2.cpp:55:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i vec_hi = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8));\n      |                          ^\n[REDACTED]/tmp5mwhxnv2.cpp:56:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   56 |         prod_vec = _mm_mullo_epi32(prod_vec, vec_lo);\n      |                    ^\n[REDACTED]/tmp5mwhxnv2.cpp:57:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   57 |         prod_vec = _mm_mullo_epi32(prod_vec, vec_hi);\n      |                    ^\n[REDACTED]/tmp5mwhxnv2.cpp:61:21: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   61 |     __m128i sum_h = _mm_hadd_epi16(sum_vec, sum_vec);\n      |                     ^\n[REDACTED]/tmp5mwhxnv2.cpp:62:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   62 |     sum_h = _mm_hadd_epi16(sum_h, sum_h);\n      |             ^\n[REDACTED]/tmp5mwhxnv2.cpp:63:13: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   63 |     sum_h = _mm_hadd_epi16(sum_h, sum_h);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpavxl974o.cpp:56:23: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |         current_max = _mm_max_epu32(chunk, current_max);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuams6be9.cpp:56:23: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |         current_max = _mm_max_epu32(current, current_max);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk8y5zvj5.cpp:52:28: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i max_curr = _mm_max_epu32(curr, max_prev);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpet6s8g6f.cpp:56:23: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |         current_max = _mm_max_epu32(chunk, current_max);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwrhylvsh.cpp:57:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i max_val = _mm_max_epi32(current, prev_max);\n      |                           ^\n[REDACTED]/tmpwrhylvsh.cpp:63:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   63 |             max_val = _mm_max_epi32(current, shifted_max);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf4eetoek.cpp:60:26: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   60 |         max_length_vec = _mm_max_epu32(lengths, max_length_vec);\n      |                          ^\n[REDACTED]/tmpf4eetoek.cpp:61:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   61 |         max_index_vec = _mm_blendv_epi8(max_index_vec, indices, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph2koefpv.cpp:58:26: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   58 |         max_length_vec = _mm_max_epu32(lengths, max_length_vec);\n      |                          ^\n[REDACTED]/tmph2koefpv.cpp:59:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   59 |         max_index_vec = _mm_blendv_epi8(max_index_vec, indices, mask);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu_bmiml8.cpp:42:14: error: always_inline function '_mm_min_epu64' requires target feature 'avx512vl', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'avx512vl'\n   42 |         va = _mm_min_epu64(va, temp);\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp65jvaher.cpp:40:12: error: no matching function for call to '_mm_cvtsi128_si64'\n   40 |     while (_mm_cvtsi128_si64(_mm_cmpneq_epi64_mask(va, zero))) {\n      |            ^~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3339:48: note: candidate function not viable: no known conversion from '__mmask8' (aka 'unsigned char') to '__m128i' (vector of 2 'long long' values) for 1st argument\n 3339 | static __inline__ long long __DEFAULT_FN_ATTRS _mm_cvtsi128_si64(__m128i __a) {\n      |                                                ^                 ~~~~~~~~~~~\n[REDACTED]/tmp65jvaher.cpp:44:14: error: no matching function for call to '_mm_and_si128'\n   44 |         va = _mm_and_si128(va, _mm_cmpneq_epi64_mask(vb, zero));\n      |              ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2611:46: note: candidate function not viable: no known conversion from '__mmask8' (aka 'unsigned char') to '__m128i' (vector of 2 'long long' values) for 2nd argument\n 2611 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_and_si128(__m128i __a,\n      |                                              ^\n 2612 |                                                            __m128i __b) {\n      |                                                            ~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2hb5f28k.cpp:37:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i cmp = _mm_cmpeq_epi64(vec_b, zero);\n      |                       ^\n[REDACTED]/tmp2hb5f28k.cpp:47:30: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   47 |             __m128i cmp_ge = _mm_cmpgt_epi64(remainder, vec_b);\n      |                              ^\n[REDACTED]/tmp2hb5f28k.cpp:48:43: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   48 |             cmp_ge = _mm_or_si128(cmp_ge, _mm_cmpeq_epi64(remainder, vec_b));\n      |                                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_72_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqav4_8rt.cpp:41:29: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i vec_check = _mm_cmpeq_epi64(_mm_mul_epu32(vec_i, vec_div), vec_n);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpndwh9y65.cpp:44:20: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   44 |         vec_mask = _mm_cmpeq_epi64(vec_mod, _mm_setzero_si128());\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps8ko9upa.cpp:41:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i cmp = _mm_cmpeq_epi64(remainders, zero);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppktrrya5.cpp:64:26: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   64 |             int factor = _mm_extract_epi32(vec_factors, i);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmppktrrya5.cpp:67:30: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   67 |             vec_remainders = _mm_insert_epi32(vec_remainders, remainder, i);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmppktrrya5.cpp:78:30: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   78 |                 int factor = _mm_extract_epi32(vec_factors, i);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvj27kjy6.cpp:67:26: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   67 |             vec_remainder.m128i_i32[i] = remainder;\n      |             ~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvj27kjy6.cpp:68:25: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   68 |             vec_quotient.m128i_i32[i] = quotient;\n      |             ~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvj27kjy6.cpp:75:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   75 |             if (vec_remainder.m128i_i32[i] == 0) {\n      |                 ~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvj27kjy6.cpp:77:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   77 |                 n = vec_quotient.m128i_i32[i];\n      |                     ~~~~~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_74_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpalh1dche.cpp:67:29: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   67 |             vec_remainder = _mm_insert_epi32(vec_remainder, remainder, i);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2v3cbjvb.cpp:49:28: error: use of undeclared identifier '_mm_div_epu64'; did you mean '_mm_min_epu64'?\n   49 |         __m128i vec_quot = _mm_div_epu64(vec_n, vec_i);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epu64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3260:1: note: '_mm_min_epu64' declared here\n 3260 | _mm_min_epu64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplqf8fg9n.cpp:42:22: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   42 |         vec_result = _mm_div_epi64(vec_n, vec_i);\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmplqf8fg9n.cpp:43:48: error: use of undeclared identifier '_mm_mul_epi64'\n   43 |         __m128i vec_rem = _mm_sub_epi64(vec_n, _mm_mul_epi64(vec_i, vec_result));\n      |                                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpauqidqex.cpp:43:27: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i vec_cmp = _mm_cmpeq_epi64(vec_mod, _mm_setzero_si128());\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzp3xiql1.cpp:44:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i cmp = _mm_cmpeq_epi64(mod, zero);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnre8lmoh.cpp:42:24: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   42 |         __m128i quot = _mm_div_epi64(vec_n, vec_i);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbimyawyz.cpp:78:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   78 |         __m128i result_chunk = _mm_blendv_epi8(chunk, toggled_chunk, letter_mask);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv4chb0sb.cpp:84:24: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   84 |         __m128i ge_a = _mm_cmpge_epi8(chunk, lower_a);\n      |                        ^~~~~~~~~~~~~~\n      |                        _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpv4chb0sb.cpp:85:24: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   85 |         __m128i le_z = _mm_cmple_epi8(chunk, lower_z);\n      |                        ^~~~~~~~~~~~~~\n      |                        _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpv4chb0sb.cpp:89:24: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   89 |         __m128i ge_A = _mm_cmpge_epi8(chunk, upper_A);\n      |                        ^~~~~~~~~~~~~~\n      |                        _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpv4chb0sb.cpp:90:24: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   90 |         __m128i le_Z = _mm_cmple_epi8(chunk, upper_Z);\n      |                        ^~~~~~~~~~~~~~\n      |                        _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8xms325k.cpp:83:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   83 |         __m128i result_vec = _mm_blendv_epi8(vec, sorted_vec, _mm_set1_epi32(mask));\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp73cel62h.cpp:56:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'popcnt'\n   56 |                 count += _mm_popcnt_u32(mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6urigyay.cpp:51:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i mod11 = _mm_rem_epi32(numbers, div11);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmp6urigyay.cpp:55:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   55 |         __m128i mod13 = _mm_rem_epi32(numbers, div13);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwy0qypec.cpp:47:26: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i rem_11 = _mm_rem_epi32(nums, vec_11);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpwy0qypec.cpp:51:26: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i rem_13 = _mm_rem_epi32(nums, vec_13);\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpshhg3k4j.cpp:54:28: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   54 |             __m128i quot = _mm_div_epu32(temp, div11);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpshhg3k4j.cpp:65:28: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   65 |             __m128i quot = _mm_div_epu32(temp, div13);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpshhg3k4j.cpp:79:30: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   79 |             __m128i digits = _mm_div_epu32(temp, ten);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4kb1dmfo.cpp:56:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'fizz_buzz_simd' that is compiled without support for 'popcnt'\n   56 |                 count += _mm_popcnt_u32(mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzrcs6rbf.cpp:54:32: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i quotient_vec = _mm_div_epi32(x_vec, base_vec);\n      |                                ^~~~~~~~~~~~~\n      |                                _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1tp1vuqi.cpp:47:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i reversed = _mm_shuffle_epi8(right, _mm_set_epi8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6g16lydb.cpp:42:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i back_rev = _mm_shuffle_epi8(back, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxsurun62.cpp:42:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i back_rev = _mm_shuffle_epi8(back, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplnno6sk6.cpp:47:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i right_rev = _mm_shuffle_epi8(right, _mm_setr_epi8(15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvqm7xr_m.cpp:42:33: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i reversed_back = _mm_shuffle_epi8(back, _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx7caklhk.cpp:60:30: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   60 |             int open_count = _mm_popcnt_u32(open_mask);\n      |                              ^\n[REDACTED]/tmpx7caklhk.cpp:61:31: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   61 |             int close_count = _mm_popcnt_u32(close_mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe1_d3xs3.cpp:59:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   59 |         count += _mm_popcnt_u32(open_bits);\n      |                  ^\n[REDACTED]/tmpe1_d3xs3.cpp:61:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   61 |         count -= _mm_popcnt_u32(close_bits);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj3re09_5.cpp:59:30: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   59 |             int open_count = _mm_popcnt_u32(open_mask);\n      |                              ^\n[REDACTED]/tmpj3re09_5.cpp:60:31: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   60 |             int close_count = _mm_popcnt_u32(close_mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplfp8ovqx.cpp:64:56: error: argument to '__builtin_ia32_psrldqi128_byteshift' must be a constant integer\n   64 |             sum = _mm_add_epi32(sum, _mm_cvtepi8_epi32(_mm_srli_si128(vals, j)));\n      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2895:13: note: expanded from macro '_mm_srli_si128'\n 2895 |   ((__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a),          \\\n      |             ^\n 2896 |                                                 (int)(imm)))\n      |                                                 ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpus4nu11m.cpp:53:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   53 |         int open_count = _mm_popcnt_u32(_mm_movemask_epi8(open_mask));\n      |                          ^\n[REDACTED]/tmpus4nu11m.cpp:54:27: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'popcnt'\n   54 |         int close_count = _mm_popcnt_u32(_mm_movemask_epi8(close_mask));\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp26actj04.cpp:47:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |             __m128i vowel = _mm_shuffle_epi8(vowels_lower, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmp26actj04.cpp:54:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   54 |             __m128i vowel = _mm_shuffle_epi8(vowels_upper, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmp26actj04.cpp:62:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   62 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6i3kwd7u.cpp:47:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |             __m128i vowel = _mm_shuffle_epi8(vowels_lower, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmp6i3kwd7u.cpp:54:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   54 |             __m128i vowel = _mm_shuffle_epi8(vowels_upper, _mm_set1_epi8(j));\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdeqobz18.cpp:47:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |             __m128i vowel = _mm_shuffle_epi8(vowels_lower, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpdeqobz18.cpp:54:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   54 |             __m128i vowel = _mm_shuffle_epi8(vowels_upper, _mm_set1_epi8(j));\n      |                             ^\n[REDACTED]/tmpdeqobz18.cpp:62:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   62 |         vowel_count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzhdlb0g0.cpp:57:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   57 |         count += _mm_popcnt_u32(matches);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp89_24naf.cpp:48:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i masked_vals = _mm_blendv_epi8(_mm_set1_epi32(INT_MAX), vals, is_even);\n      |                               ^\n[REDACTED]/tmp89_24naf.cpp:55:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   55 |         min_even_val = _mm_blendv_epi8(min_even_val, masked_vals, cmp);\n      |                        ^\n[REDACTED]/tmp89_24naf.cpp:58:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i idx_update = _mm_blendv_epi8(min_even_idx, idxs, cmp);\n      |                              ^\n[REDACTED]/tmp89_24naf.cpp:60:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   60 |         min_even_idx = _mm_blendv_epi8(idx_update, idxs, _mm_and_si128(equal_cmp, equal_idx_cmp));\n      |                        ^\n4 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz1ddekoc.cpp:48:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   48 |         __m128i masked_vals = _mm_blendv_epi8(_mm_set1_epi32(INT_MAX), vals, is_even);\n      |                               ^\n[REDACTED]/tmpz1ddekoc.cpp:55:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   55 |         min_even_val = _mm_blendv_epi8(min_even_val, masked_vals, cmp);\n      |                        ^\n[REDACTED]/tmpz1ddekoc.cpp:59:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   59 |         min_even_idx = _mm_blendv_epi8(min_even_idx, idxs, idx_update_mask);\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdbzj7gtb.cpp:64:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   64 |         min_val = _mm_min_epu32(masked_values, min_val);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp84i2t3is.cpp:47:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i masked_vals = _mm_blendv_epi8(_mm_set1_epi32(INT_MAX), vals, even_mask);\n      |                               ^\n[REDACTED]/tmp84i2t3is.cpp:51:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   51 |         min_val = _mm_blendv_epi8(min_val, masked_vals, cmp);\n      |                   ^\n[REDACTED]/tmp84i2t3is.cpp:52:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   52 |         min_idx = _mm_blendv_epi8(min_idx, idxs, cmp);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnk9r09cl.cpp:56:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |             int val = _mm_extract_epi32(values, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3l12n3cm.cpp:48:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   48 |     __m128i temp = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                    ^\n[REDACTED]/tmp3l12n3cm.cpp:49:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   49 |     temp = _mm_hadd_epi32(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwiberlkm.cpp:48:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   48 |     __m128i temp = _mm_hadd_epi32(sum, sum);\n      |                    ^\n[REDACTED]/tmpwiberlkm.cpp:49:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   49 |     temp = _mm_hadd_epi32(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps57maawb.cpp:48:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   48 |     __m128i temp = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                    ^\n[REDACTED]/tmps57maawb.cpp:49:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   49 |     temp = _mm_hadd_epi32(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsooa4wmi.cpp:51:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   51 |         changes += _mm_popcnt_u32(~mask & 0xF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd3afe20x.cpp:61:19: error: use of undeclared identifier '_mm_cmple_epu32'\n   61 |     __m128i cmp = _mm_cmple_epu32(sum1_vec, sum2_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb3hdfglr.cpp:54:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i cmp = _mm_cmpeq_epi64(vec_temp, vec_x);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_yuuhlw0.cpp:49:26: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   49 |     __m128i cmp_result = _mm_cmpeq_epi64(vec_temp, vec_x);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzor3yiey.cpp:44:26: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i cmp_eq = _mm_cmpeq_epi64(vec_result, vec_x);\n      |                          ^\n[REDACTED]/tmpzor3yiey.cpp:50:26: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   50 |         __m128i cmp_gt = _mm_cmpgt_epi64(vec_result, vec_x);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpux_tw845.cpp:45:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   45 |         if (_mm_cvtsi128_si64(_mm_cmpeq_epi64(vec_temp, vec_x))) {\n      |                               ^\n[REDACTED]/tmpux_tw845.cpp:48:31: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   48 |         if (_mm_cvtsi128_si64(_mm_cmpgt_epi64(vec_temp, vec_x))) {\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplf6tc4d7.cpp:48:73: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   48 |         if (_mm_movemask_epi8(overflow_check) != 0 || _mm_movemask_epi8(_mm_cmplt_epi64(next, vec_x)) != 0) return false;\n      |                                                                         ^~~~~~~~~~~~~~~\n      |                                                                         _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplybqs5pc.cpp:49:68: error: subscripted value is not an array, pointer, or vector\n   49 |             __m128i prime = _mm_set1_epi8(_mm_cvtsi128_si32(primes)[j]);\n      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~^~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9fgxqa3h.cpp:47:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'hex_key_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i values = _mm_blendv_epi8(values_letters, values_digits, mask_digits);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqawfmldx.cpp:55:23: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   55 |             int val = _mm_extract_epi8(digit_val, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb36dmygk.cpp:49:46: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'hex_key_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i values = _mm_sub_epi8(chars, _mm_blendv_epi8(\n      |                                              ^\n[REDACTED]/tmpb36dmygk.cpp:55:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   55 |         __m128i prime_flags = _mm_shuffle_epi8(lookup_vec, values);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxwpre87v.cpp:55:18: error: use of undeclared identifier '_popcnt_u32'\n   55 |         count += _popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr2kgbfc3.cpp:51:19: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   51 |         char c1 = _mm_extract_epi8(chars, 0);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpr2kgbfc3.cpp:52:19: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   52 |         char c2 = _mm_extract_epi8(chars, 1);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpr2kgbfc3.cpp:53:19: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   53 |         char c3 = _mm_extract_epi8(chars, 2);\n      |                   ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpr2kgbfc3.cpp:62:18: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   62 |             c1 = _mm_extract_epi8(chars, 1);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpr2kgbfc3.cpp:63:18: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   63 |             c2 = _mm_extract_epi8(chars, 2);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmpr2kgbfc3.cpp:64:18: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   64 |             c3 = _mm_extract_epi8(chars, 3);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n6 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp39ki3n24.cpp:66:35: error: use of undeclared identifier 'c4'\n   66 |             if (c2 == c3 || c2 == c4 || c3 == c4) return false;\n      |                                   ^\n[REDACTED]/tmp39ki3n24.cpp:66:47: error: use of undeclared identifier 'c4'\n   66 |             if (c2 == c3 || c2 == c4 || c3 == c4) return false;\n      |                                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpohflqajk.cpp:46:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   46 |             __m128i div = _mm_shuffle_epi32(divisors, _MM_SHUFFLE(j, j, j, j));\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmpohflqajk.cpp:47:32: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   47 |             __m128i quotient = _mm_div_epu32(len_vec, div);\n      |                                ^~~~~~~~~~~~~\n      |                                _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyewv5am2.cpp:41:29: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   41 |         __m128i quotients = _mm_div_epu32(vec_len, vec_i);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgmccc_25.cpp:54:30: error: use of undeclared identifier '_mm_rem_epu32'\n   54 |         __m128i remainders = _mm_rem_epu32(len_vec, divisors);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy3a89w1l.cpp:43:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   43 |             int div = _mm_extract_epi32(divisors, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp16m0utp1.cpp:47:25: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   47 |     __m128i quotients = _mm_div_epu32(len_vec, divisors);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp16m0utp1.cpp:59:21: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   59 |         quotients = _mm_div_epu32(len_vec, divisors);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpobwkq1hm.cpp:59:63: error: vector condition type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) and result type '__attribute__((__vector_size__(2 * sizeof(char)))) char' (vector of 2 'char' values) do not have elements of the same size\n   59 |         result[pos--] = (_mm_cmpeq_epi32(bit, vec_zero) == 0) ? '1' : '0';\n      |                                                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpki4pmarg.cpp:53:23: error: use of undeclared identifier '_mm_setzero_si0'; did you mean '_mm_setzero_si64'?\n   53 |     __m128i sum_vec = _mm_setzero_si0();\n      |                       ^~~~~~~~~~~~~~~\n      |                       _mm_setzero_si64\n/usr/lib/llvm-18/lib/clang/18/include/mmintrin.h:1288:1: note: '_mm_setzero_si64' declared here\n 1288 | _mm_setzero_si64(void)\n      | ^\n[REDACTED]/tmpki4pmarg.cpp:53:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type '__m64' (vector of 1 'long long' value)\n   53 |     __m128i sum_vec = _mm_setzero_si0();\n      |             ^         ~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp397tgh3o.cpp:63:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i result_chars = _mm_blendv_epi8(shifted, wrap, overflow);\n      |                                ^\n[REDACTED]/tmp397tgh3o.cpp:66:24: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   66 |         result_chars = _mm_blendv_epi8(chars, result_chars, is_lower);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5qm4rgmg.cpp:64:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128i final = _mm_blendv_epi8(chars, shifted, is_lower);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuiayevw9.cpp:65:25: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128i final = _mm_blendv_epi8(chars, shifted, is_lower);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_fvndr4u.cpp:65:26: error: no matching function for call to '_mm_or_si128'\n   65 |         __m128i vowels = _mm_or_si128(\n      |                          ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2646:46: note: candidate function not viable: requires 2 arguments, but 1 was provided\n 2646 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_or_si128(__m128i __a,\n      |                                              ^            ~~~~~~~~~~~~\n 2647 |                                                           __m128i __b) {\n      |                                                           ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0i8_n50e.cpp:88:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   88 |                 if (!_mm_test_all_ones(_mm_or_si128(_mm_andnot_si128(is_alpha, _mm_set1_epi8(-1)), is_upper_check))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n[REDACTED]/tmp0i8_n50e.cpp:93:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'check_dict_case_simd' that is compiled without support for 'sse4.1'\n   93 |                 if (!_mm_test_all_ones(_mm_or_si128(_mm_andnot_si128(is_alpha, _mm_set1_epi8(-1)), is_lower_check))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp70xuyduc.cpp:77:17: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   77 |                 _mm_cmpge_epi8(str_chunk, lower_a),\n      |                 ^~~~~~~~~~~~~~\n      |                 _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp70xuyduc.cpp:78:17: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   78 |                 _mm_cmple_epi8(str_chunk, lower_z)\n      |                 ^~~~~~~~~~~~~~\n      |                 _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp70xuyduc.cpp:82:17: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   82 |                 _mm_cmpge_epi8(str_chunk, upper_A),\n      |                 ^~~~~~~~~~~~~~\n      |                 _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp70xuyduc.cpp:83:17: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   83 |                 _mm_cmple_epi8(str_chunk, upper_Z)\n      |                 ^~~~~~~~~~~~~~\n      |                 _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp70xuyduc.cpp:90:17: error: value of type '__m128i' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   90 |             if (is_upper) {\n      |                 ^~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzfrncify.cpp:62:81: error: taking the address of a temporary object of type 'reference' (aka 'std::_Bit_reference') [-Waddress-of-temporary]\n   62 |                 __m128i mask = _mm_loadu_si128(reinterpret_cast<const __m128i*>(&is_prime[j]));\n      |                                                                                 ^~~~~~~~~~~~\n[REDACTED]/tmpzfrncify.cpp:64:61: error: taking the address of a temporary object of type 'reference' (aka 'std::_Bit_reference') [-Waddress-of-temporary]\n   64 |                 _mm_storeu_si128(reinterpret_cast<__m128i*>(&is_prime[j]), mask);\n      |                                                             ^~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp54joxez1.cpp:75:28: error: taking the address of a temporary object of type 'reference' (aka 'std::_Bit_reference') [-Waddress-of-temporary]\n   75 |                 int* ptr = &is_prime[0] + j;\n      |                            ^~~~~~~~~~~~\n[REDACTED]/tmp54joxez1.cpp:75:22: error: cannot initialize a variable of type 'int *' with an rvalue of type 'reference *' (aka 'std::_Bit_reference *')\n   75 |                 int* ptr = &is_prime[0] + j;\n      |                      ^     ~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa7g0cfvp.cpp:66:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   66 |         count += _mm_popcnt_u32(_mm_movemask_epi8(count_vec));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjawh138g.cpp:46:51: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i vec_stones = _mm_add_epi32(vec_n, _mm_mullo_epi32(vec_indices, vec_increment));\n      |                                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwcrf0pli.cpp:46:54: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i vec_values = _mm_add_epi32(vec_base, _mm_mullo_epi32(vec_indices, vec_increment));\n      |                                                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr2_c6i58.cpp:51:24: error: no matching function for call to '_mm_set_epi64x'\n   51 |         __m128i nums = _mm_set_epi64x(i + 2, i, i + 3, i + 1);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_111_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg36wfdd0.cpp:64:34: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   64 |             __m128i div_result = _mm_div_epu32(results, modulo);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcv7x_u3c.cpp:63:45: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   63 |             temp = _mm_and_si128(mask_even, _mm_mullo_epi32(temp, j_vec));\n      |                                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1n33tfan.cpp:62:27: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   62 |                 results = _mm_insert_epi32(results, static_cast<int>(fact), j);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmp1n33tfan.cpp:65:27: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   65 |                 results = _mm_insert_epi32(results, sum, j);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ct6htdt.cpp:77:22: error: use of undeclared identifier '_mm_mod_epi32'\n   77 |         factorials = _mm_mod_epi32(factorials, modulo);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_e8nsyde.cpp:67:28: error: use of undeclared identifier '_mm_cmple_epu32'\n   67 |             __m128i mask = _mm_cmple_epu32(indices, j_vec); // Compare unsigned\n      |                            ^\n[REDACTED]/tmp_e8nsyde.cpp:70:20: error: use of undeclared identifier '_mm_mod_epu32'\n   70 |             fact = _mm_mod_epu32(fact, mod);\n      |                    ^\n[REDACTED]/tmp_e8nsyde.cpp:82:15: error: use of undeclared identifier '_mm_mod_epu32'\n   82 |         vec = _mm_mod_epu32(vec, mod);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm7_g3sra.cpp:59:24: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   59 |             reversed = _mm_insert_epi32(reversed, rev, num - i);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6s2l459j.cpp:44:30: error: use of undeclared identifier '_mm_cmple_epi32'; did you mean '_mm_cmplt_epi32'?\n   44 |         __m128i valid_mask = _mm_cmple_epi32(numbers, n_vec);\n      |                              ^~~~~~~~~~~~~~~\n      |                              _mm_cmplt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3180:46: note: '_mm_cmplt_epi32' declared here\n 3180 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi32(__m128i __a,\n      |                                              ^\n[REDACTED]/tmp6s2l459j.cpp:49:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   49 |         __m128i tens = _mm_div_epi32(numbers, _mm_set1_epi32(10));\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpely28tvk.cpp:45:25: error: use of undeclared identifier '_mm_cmple_epu32'\n   45 |         __m128i valid = _mm_cmple_epu32(nums, _mm_set1_epi32(n));\n      |                         ^\n[REDACTED]/tmpely28tvk.cpp:54:29: error: use of undeclared identifier '_mm_mod_epu32'\n   54 |             __m128i digit = _mm_mod_epu32(temp, vec_ten);\n      |                             ^\n[REDACTED]/tmpely28tvk.cpp:56:20: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   56 |             temp = _mm_div_epu32(temp, vec_ten);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpely28tvk.cpp:64:43: error: use of undeclared identifier '_mm_mod_epu32'\n   64 |         __m128i is_even = _mm_cmpeq_epi32(_mm_mod_epu32(nums, _mm_set1_epi32(2)), _mm_setzero_si128());\n      |                                           ^\n4 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp05520rzk.cpp:58:20: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   58 |             temp = _mm_div_epu32(temp, ten);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5e6x85x9.cpp:78:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   78 |         count += _mm_popcnt_u32(mask_bits);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpng6loomz.cpp:69:23: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   69 |             abs_vec = _mm_div_epu32(abs_vec, _mm_set1_epi32(10));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph0r2qxdl.cpp:72:40: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   72 |                 __m128i shifted_curr = _mm_alignr_epi8(next_vec, curr_vec, 4);\n      |                                        ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_116_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpydszmv1a.cpp:47:23: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   47 |         odd_count1 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(vcmp)));\n      |                       ^\n[REDACTED]/tmpydszmv1a.cpp:61:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'myexchange_simd' that is compiled without support for 'popcnt'\n   61 |         even_count2 += _mm_popcnt_u32(_mm_movemask_ps(_mm_castsi128_ps(vcmp)));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpreeijcwu.cpp:66:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   66 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_compare));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppjmg8gun.cpp:80:30: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   80 |                 odd_count += _mm_extract_epi8(odd_mask, j) & 1;\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmwk9l64l.cpp:70:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   70 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(cmp));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ol05p83.cpp:81:26: error: use of undeclared identifier '_popcnt_u32'\n   81 |             odd_count += _popcnt_u32(mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu65r_do1.cpp:68:26: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   68 |             odd_count += _mm_popcnt_u32(_mm_movemask_epi8(odd_mask));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_lkwokzj.cpp:50:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   50 |         min_sum = _mm_min_epi64(min_sum, curr_sum);\n      |                   ^\n[REDACTED]/tmp_lkwokzj.cpp:54:20: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   54 |         curr_sum = _mm_min_epi64(curr_sum, temp);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf4ek4cws.cpp:48:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   48 |         min_sum = _mm_min_epi64(min_sum, current_sum);\n      |                   ^\n[REDACTED]/tmpf4ek4cws.cpp:63:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   63 |         min_sum = _mm_min_epi64(min_sum, current_sum);\n      |                   ^\n[REDACTED]/tmpf4ek4cws.cpp:76:25: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   76 |             local_min = _mm_min_epi64(local_min, _mm_set1_epi64x(local_sum));\n      |                         ^\n[REDACTED]/tmpf4ek4cws.cpp:80:25: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   80 |             local_min = _mm_min_epi64(local_min, _mm_set1_epi64x(local_sum));\n      |                         ^\n[REDACTED]/tmpf4ek4cws.cpp:82:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   82 |         min_sum = _mm_min_epi64(min_sum, local_min);\n      |                   ^\n5 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn9szjqy5.cpp:47:27: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   47 |             min_sum_vec = _mm_min_epi64(min_sum_vec, prefix_sum);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk6ba29sh.cpp:47:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   47 |             min_sum_vec = _mm_min_epi32(min_sum_vec, prefix_sum);\n      |                           ^\n[REDACTED]/tmpk6ba29sh.cpp:53:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   53 |             min_sum_vec = _mm_min_epi32(min_sum_vec, prefix_sum);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp403exhj.cpp:49:25: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   49 |             local_min = _mm_min_epi64(local_min, prefix_sum);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqn57iv1n.cpp:42:24: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   42 |                 mask = _mm_insert_epi32(mask, 0xFFFFFFFF, j);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdoa9f10j.cpp:59:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   59 |         sign_prod = _mm_mullo_epi32(sign_prod, signs);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8gpwwfwo.cpp:52:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   52 |         sign_prod_vec = _mm_mullo_epi32(sign_prod_vec, sign);\n      |                         ^\n[REDACTED]/tmp8gpwwfwo.cpp:55:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   55 |         __m128i abs_data = _mm_abs_epi32(data);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2pg7c_w_.cpp:54:36: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   54 |         sign = _mm_and_si128(sign, _mm_cmpneq_epi32(vec, zero));\n      |                                    ^~~~~~~~~~~~~~~~\n      |                                    _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprdgih7gm.cpp:58:21: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   58 |         sign_prod = _mm_mullo_epi32(sign_prod, sign);\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8ew__6xo.cpp:52:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   52 |         sign_prod_vec = _mm_mullo_epi32(sign_prod_vec, sign);\n      |                         ^\n[REDACTED]/tmp8ew__6xo.cpp:55:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   55 |         __m128i abs_data = _mm_abs_epi32(data);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_jnj6h3g.cpp:85:28: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   85 |                 min_vals = _mm_min_epu32(min_vals, curr_val);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpen0_kprc.cpp:94:18: error: no member named 'function' in namespace 'std'\n   94 |             std::function<void(int, int, int)> dfs = [&](int i, int j, int step) {\n      |             ~~~~~^\n[REDACTED]/tmpen0_kprc.cpp:94:35: error: expected '(' for function-style cast or type construction\n   94 |             std::function<void(int, int, int)> dfs = [&](int i, int j, int step) {\n      |                                ~~~^\n[REDACTED]/tmpen0_kprc.cpp:94:40: error: expected '(' for function-style cast or type construction\n   94 |             std::function<void(int, int, int)> dfs = [&](int i, int j, int step) {\n      |                                     ~~~^\n[REDACTED]/tmpen0_kprc.cpp:94:45: error: expected '(' for function-style cast or type construction\n   94 |             std::function<void(int, int, int)> dfs = [&](int i, int j, int step) {\n      |                                          ~~~^\n[REDACTED]/tmpen0_kprc.cpp:94:48: error: use of undeclared identifier 'dfs'\n   94 |             std::function<void(int, int, int)> dfs = [&](int i, int j, int step) {\n      |                                                ^\n[REDACTED]/tmpen0_kprc.cpp:140:25: error: use of undeclared identifier 'dfs'\n  140 |                         dfs(ni, nj, step + 1);\n      |                         ^\n[REDACTED]/tmpen0_kprc.cpp:145:13: error: use of undeclared identifier 'dfs'\n  145 |             dfs(si, sj, 1);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsevex4q4.cpp:69:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   69 |         __m128i masked_digits = _mm_blendv_epi8(one_vec, digits_vec, odd_mask);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphb0y27y2.cpp:63:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i masked_chunk = _mm_blendv_epi8(one, chunk, is_odd);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuxyreei3.cpp:37:43: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   37 |         __m128i vec_int = _mm_cvtps_epi32(_mm_ceil_ps(vec));\n      |                                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpuxyreei3.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpuxyreei3.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpuxyreei3.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5m0sfanc.cpp:35:43: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128i vec_int = _mm_cvtps_epi32(_mm_ceil_ps(vec));\n      |                                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp5m0sfanc.cpp:37:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i vec_sq = _mm_mullo_epi32(vec_int, vec_int);\n      |                          ^\n[REDACTED]/tmp5m0sfanc.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5m0sfanc.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5m0sfanc.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpasan3mjs.cpp:43:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   43 |         __m128 ceil_v = _mm_ceil_ps(v);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpasan3mjs.cpp:49:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i sq = _mm_mullo_epi32(int_v, int_v);\n      |                      ^\n[REDACTED]/tmpasan3mjs.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:77:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   77 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:77:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   77 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:78:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   78 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:78:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   78 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:79:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   79 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:79:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   79 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:80:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   80 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:80:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   80 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:81:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   81 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:81:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   81 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpasan3mjs.cpp:82:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   82 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpasan3mjs.cpp:82:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   82 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvzzny343.cpp:37:43: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   37 |         __m128i vec_int = _mm_cvtps_epi32(_mm_ceil_ps(vec));\n      |                                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpvzzny343.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpvzzny343.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpvzzny343.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzy68rzci.cpp:42:44: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   42 |         __m128i ceil_vec = _mm_cvtps_epi32(_mm_ceil_ps(vec));\n      |                                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpzy68rzci.cpp:44:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i sqr_vec = _mm_mullo_epi32(ceil_vec, ceil_vec);\n      |                           ^\n[REDACTED]/tmpzy68rzci.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpzy68rzci.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpzy68rzci.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp749s8e4g.cpp:46:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmp749s8e4g.cpp:51:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsxhs4uxo.cpp:46:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   46 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmpsxhs4uxo.cpp:51:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   51 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjwouutdp.cpp:49:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmpjwouutdp.cpp:50:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   50 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9kighjwy.cpp:48:23: error: always_inline function '_mm_max_epu32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   48 |             max_neg = _mm_max_epu32(max_neg, neg_vec);\n      |                       ^\n[REDACTED]/tmp9kighjwy.cpp:54:23: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   54 |             min_pos = _mm_min_epu32(min_pos, _mm_or_si128(pos_vec, _mm_andnot_si128(pos_mask, _mm_set1_epi32(INT_MAX))));\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuvgd65s5.cpp:49:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         max_neg = _mm_max_epi32(max_neg, neg_candidates);\n      |                   ^\n[REDACTED]/tmpuvgd65s5.cpp:50:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   50 |         min_pos = _mm_min_epi32(min_pos, pos_candidates);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm6ozv5we.cpp:42:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'special_factorial_simd' that is compiled without support for 'sse4.1'\n   42 |         vec_factorials = _mm_mullo_epi32(vec_factorials, vec_i);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4sf7ebe8.cpp:61:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   61 |                 val_vec = _mm_mullo_epi32(val_vec, val_vec);\n      |                           ^\n[REDACTED]/tmp4sf7ebe8.cpp:67:34: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   67 |                 __m128i square = _mm_mullo_epi32(val_vec, val_vec);\n      |                                  ^\n[REDACTED]/tmp4sf7ebe8.cpp:68:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   68 |                 val_vec = _mm_mullo_epi32(square, val_vec);\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpehd3uvje.cpp:60:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i sq_vec = _mm_mullo_epi32(vec, vec); // Square all elements\n      |                          ^\n[REDACTED]/tmpehd3uvje.cpp:61:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i cube_vec = _mm_mullo_epi32(sq_vec, vec); // Cube = square * original\n      |                            ^\n[REDACTED]/tmpehd3uvje.cpp:65:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   65 |         if (m3_0) result = _mm_insert_epi32(result, _mm_extract_epi32(sq_vec, 0), 0);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:66:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   66 |         if (m3_1) result = _mm_insert_epi32(result, _mm_extract_epi32(sq_vec, 1), 1);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:67:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   67 |         if (m3_2) result = _mm_insert_epi32(result, _mm_extract_epi32(sq_vec, 2), 2);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:68:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   68 |         if (m3_3) result = _mm_insert_epi32(result, _mm_extract_epi32(sq_vec, 3), 3);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:70:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   70 |         if (m4_0) result = _mm_insert_epi32(result, _mm_extract_epi32(cube_vec, 0), 0);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:71:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   71 |         if (m4_1) result = _mm_insert_epi32(result, _mm_extract_epi32(cube_vec, 1), 1);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:72:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   72 |         if (m4_2) result = _mm_insert_epi32(result, _mm_extract_epi32(cube_vec, 2), 2);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpehd3uvje.cpp:73:28: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   73 |         if (m4_3) result = _mm_insert_epi32(result, _mm_extract_epi32(cube_vec, 3), 3);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n10 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt9nv3idh.cpp:48:24: error: use of undeclared identifier '_mm_rem_epu32'\n   48 |         __m128i mod3 = _mm_rem_epu32(indices, three);\n      |                        ^\n[REDACTED]/tmpt9nv3idh.cpp:52:24: error: use of undeclared identifier '_mm_rem_epu32'\n   52 |         __m128i mod4 = _mm_rem_epu32(indices, four);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpme5z67n3.cpp:42:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw65o7lld.cpp:49:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   49 |             temp = _mm_div_epi32(temp, _mm_set1_epi32(10));\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpw65o7lld.cpp:54:30: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i last_digit = _mm_div_epi32(abs_vec, _mm_set1_epi32(10));\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcwarfl4z.cpp:48:23: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   48 |             abs_vec = _mm_div_epu32(abs_vec, _mm_set1_epi32(10));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpcwarfl4z.cpp:53:34: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   53 |         __m128i last_digit_vec = _mm_div_epu32(vec, _mm_set1_epi32(10));\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5_pnq2t4.cpp:49:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   49 |             int val = abs_vec.m128i_i32[j];\n      |                       ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp5_pnq2t4.cpp:51:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |             first_digit.m128i_i32[j] = val;\n      |             ~~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxf1s3fx6.cpp:45:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8ka84b6f.cpp:85:31: error: use of undeclared identifier '_mm_rem_epu64'\n   85 |                 __m128i mod = _mm_rem_epu64(sum, three);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz2ws3ezd.cpp:77:27: error: use of undeclared identifier '_mm_rem_epu32'\n   77 |         __m128i rem_val = _mm_rem_epu32(val, vec3);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuf33uujx.cpp:83:31: error: use of undeclared identifier '_mm_rem_epu64'\n   83 |                 __m128i mod = _mm_rem_epu64(sum, three);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf7wvm785.cpp:47:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   47 |         if (!_mm_testz_si128(cmp, cmp)) {\n      |              ^\n[REDACTED]/tmpf7wvm785.cpp:53:9: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   53 |     if (_mm_testz_si128(cmp, cmp)) {\n      |         ^\n[REDACTED]/tmpf7wvm785.cpp:59:12: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   59 |     return _mm_testz_si128(_mm_cmpeq_epi32(vec_n, vec_two), vec_n) ? x : result[0];\n      |            ^\n3 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_t1kqkcs.cpp:45:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i div = _mm_div_epi32(n_vec, i_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6_jlydgz.cpp:60:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   60 |         __m128i div_vec = _mm_div_epi32(n_vec, i_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnn1xs_l8.cpp:67:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   67 |         __m128i squared = _mm_mullo_epi32(int_vec, int_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj7_ky05m.cpp:69:14: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse3'\n   69 |     sum_ps = _mm_hadd_ps(sum_ps, sum_ps);\n      |              ^\n[REDACTED]/tmpj7_ky05m.cpp:70:14: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse3'\n   70 |     sum_ps = _mm_hadd_ps(sum_ps, sum_ps);\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpufr168wr.cpp:72:5: error: no matching function for call to '_mm_store_ss'\n   72 |     _mm_store_ss(&sum, &sum_vec);\n      |     ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1970:1: note: candidate function not viable: no known conversion from 'double *' to 'float *' for 1st argument\n 1970 | _mm_store_ss(float *__p, __m128 __a)\n      | ^            ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1y86y9ry.cpp:42:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfy98ekdv.cpp:37:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   37 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfftcfbxr.cpp:42:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2zf35afo.cpp:37:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   37 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}

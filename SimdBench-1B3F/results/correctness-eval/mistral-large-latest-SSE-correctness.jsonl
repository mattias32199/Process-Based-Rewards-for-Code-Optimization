{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo8uwmdk8.cpp:43:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i vresult = _mm_div_epi32(vtmp4, vseven);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2g6yqn5c.cpp:44:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   44 |         vresult = _mm_div_epi32(vresult, vseven);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_47ps355.cpp:43:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         vresult = _mm_div_epi32(vresult, vseven);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu2ew1utc.cpp:43:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i vresult = _mm_div_epi32(vtmp4, vseven);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeajfb5qr.cpp:44:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   44 |         vresult = _mm_div_epi32(vresult, vseven);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1e59c4sk.cpp:37:17: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   37 |         v_sum = _mm_srai_epi64(_mm_slli_epi64(v_sum, 1), 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyu7sfc9a.cpp:38:27: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i vresult = _mm_srai_epi64(_mm_add_epi64(vsum, vtwo), 1);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsrbv4u0b.cpp:38:26: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i result = _mm_srai_epi64(_mm_add_epi64(sum, half_vec), 1);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9aldf6ia.cpp:38:28: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i v_result = _mm_srai_epi64(_mm_add_epi64(v_add, v_two), 1);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpko_nbbze.cpp:38:26: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i result = _mm_srai_epi64(_mm_add_epi64(sum, half_vec), 1);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp563uwpnk.cpp:43:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |         min_vec = _mm_min_epi32(min_vec, even_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb0ewef6a.cpp:42:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   42 |         min_vec = _mm_min_epi32(min_vec, even_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw2oia1jd.cpp:43:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |         min_vec = _mm_min_epi32(min_vec, even_vec);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqthetn9a.cpp:36:35: error: no matching function for call to '_mm_srai_epi32'\n   36 |         __m128i arith_shift_vec = _mm_srai_epi32(src_vec, shift_vec);\n      |                                   ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2853:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2853 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srai_epi32(__m128i __a,\n      |                                              ^\n 2854 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp26x6ungy.cpp:45:35: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   45 |             max_idx = i + (size_t)_mm_extract_epi8(idx, _mm_bsrli_si128(mask, 0));\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1030:53: note: expanded from macro '_mm_extract_epi8'\n 1030 |                                                     (int)(N)))\n      |                                                     ^~~~~~~~\n[REDACTED]/tmp26x6ungy.cpp:51:22: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   51 |         int8_t val = _mm_extract_epi8(max_val, i);\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9j7o90dm.cpp:50:25: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   50 |     int8_t max_scalar = _mm_extract_epi8(max_val, 0);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpouxb2f7g.cpp:51:29: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   51 |     int8_t max_val_scalar = _mm_extract_epi8(max_val, 0);\n      |                             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe7ub6ogn.cpp:47:35: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   47 |             max_idx = i + (size_t)_mm_extract_epi8(index, _mm_bsrli_si128(mask, 0));\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1030:53: note: expanded from macro '_mm_extract_epi8'\n 1030 |                                                     (int)(N)))\n      |                                                     ^~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl62xq357.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i result = _mm_blendv_epi8(src2_vector, src1_vector, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp27t19ssj.cpp:41:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i result = _mm_blendv_epi8(src2_vector, src1_vector, compare_result);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4xd30co1.cpp:41:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i result_vector = _mm_blendv_epi8(src2_vector, src1_vector, compare_result);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_wf9sdkn.cpp:32:23: error: no matching function for call to '_mm_set_epi32'\n   32 |     __m128i index_v = _mm_set_epi32(7, 6, 5, 4, 3, 2, 1, 0);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvck2zj3h.cpp:60:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'population_count_simd' that is compiled without support for 'popcnt'\n   60 |         dst[i] = _mm_popcnt_u32(src[i]);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjsgvxpjn.cpp:42:50: warning: implicit conversion from 'int' to 'char' changes value from 128 to -128 [-Wconstant-conversion]\n   42 |     const __m128i onetwentyeight = _mm_set1_epi8(128);\n      |                                    ~~~~~~~~~~~~~ ^~~\n[REDACTED]/tmpjsgvxpjn.cpp:144:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'population_count_simd' that is compiled without support for 'popcnt'\n  144 |         dst[i] = _mm_popcnt_u32(src[i]);\n      |                  ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj5_mpv9h.cpp:47:66: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   47 |                 __m128d maskA = _mm_cmpgt_pd(_mm_set1_pd(100.0), _mm_abs_pd(a));\n      |                                                                  ^~~~~~~~~~\n      |                                                                  _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpj5_mpv9h.cpp:48:66: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   48 |                 __m128d maskB = _mm_cmpgt_pd(_mm_set1_pd(100.0), _mm_abs_pd(b));\n      |                                                                  ^~~~~~~~~~\n      |                                                                  _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpww0i3wl6.cpp:57:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   57 |             _sum = _mm_hadd_pd(_sum, _sum);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo0i1x6oq.cpp:56:27: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   56 |             __m128d sum = _mm_hadd_pd(c, c);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7h2k6c1m.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuxshaydi.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpklm0k5zm.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3bldff6m.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3byukhr2.cpp:34:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_round_ps(sum, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppz45usk0.cpp:48:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |         __m128 roundResult = _mm_ceil_ps(mulResult);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppu80vkbl.cpp:53:18: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   53 |         result = _mm_round_ps(result, _MM_FROUND_CEIL);\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpen58ob01.cpp:47:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |         __m128 roundedResult = _mm_ceil_ps(mulResult);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkhn7hil2.cpp:44:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   44 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwtb_f5p0.cpp:44:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   44 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpai_1duyb.cpp:44:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   44 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw49x0mg_.cpp:44:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   44 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ilt68jm.cpp:44:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_mul_round_int_simd' that is compiled without support for 'sse3'\n   44 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1whqu470.cpp:40:23: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             rounded = _mm_floor_ps(rounded);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjvx1mdno.cpp:38:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |             __m128 rounded = _mm_round_ps(data, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpjvx1mdno.cpp:40:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             quartered = _mm_round_ps(quartered, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4mn5l3ct.cpp:38:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |             __m128 rounded = _mm_round_ps(data, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9f78ed9j.cpp:39:30: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |             __m128 rounded = _mm_round_ps(scaled, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfcxj1guw.cpp:40:23: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   40 |             rounded = _mm_floor_ps(rounded);\n      |                       ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4852go1r.cpp:45:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   45 |         xmm3 = _mm_floor_ps(xmm3);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplwl2cwmz.cpp:46:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   46 |     __m128d temp = _mm_hadd_pd(sum1, sum1);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprskjf47z.cpp:43:24: error: no matching function for call to '_mm_loadh_pd'\n   43 |         __m128d data = _mm_loadh_pd(&mat[i], _mm_setzero_pd());\n      |                        ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1673:46: note: candidate function not viable: no known conversion from 'const double *' to '__m128d' (vector of 2 'double' values) for 1st argument\n 1673 | static __inline__ __m128d __DEFAULT_FN_ATTRS _mm_loadh_pd(__m128d __a,\n      |                                              ^            ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzt_h7m8j.cpp:60:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   60 |     __m128d temp = _mm_hadd_pd(sum1, sum1);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw0lfzxty.cpp:45:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   45 |     __m128d temp = _mm_hadd_pd(sum1, sum1);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp60_d2mbm.cpp:37:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   37 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbautj2ua.cpp:38:24: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   38 |         __m128i _rem = _mm_rem_epi16(_src, _base);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdq0bduqh.cpp:38:24: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   38 |         __m128i _rem = _mm_rem_epi16(_src, _base);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx__dgr52.cpp:37:24: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   37 |         __m128i _rem = _mm_rem_epi16(_src, _base);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7u7ls1ia.cpp:38:27: error: use of undeclared identifier '_mm_rem_epi16'; did you mean '_mm_rot_epi16'?\n   38 |         __m128i rem_vec = _mm_rem_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_rot_epi16\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:210:1: note: '_mm_rot_epi16' declared here\n  210 | _mm_rot_epi16(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpelsvwkrb.cpp:46:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   46 |         __m128i mask = _mm_movemask_epi8(eq);\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpelsvwkrb.cpp:48:18: error: no matching function for call to '_mm_popcnt_u32'\n   48 |         count += _mm_popcnt_u32(mask);\n      |                  ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpelsvwkrb.cpp:56:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   56 |         __m128i mask = _mm_movemask_epi8(eq);\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpelsvwkrb.cpp:58:18: error: no matching function for call to '_mm_popcnt_u32'\n   58 |         count += _mm_popcnt_u32(mask & ((1 << remaining) - 1));\n      |                  ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/popcntintrin.h:33:1: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'unsigned int' for 1st argument\n   33 | _mm_popcnt_u32(unsigned int __A)\n      | ^              ~~~~~~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2265w4ii.cpp:44:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   44 |         __m128i mask = _mm_movemask_epi8(eq);\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxkf9gca0.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(_mm_movemask_epi8(eq));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmparke9txn.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(_mm_movemask_epi8(eq));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprcv_li84.cpp:43:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   43 |         count += _mm_popcnt_u32(_mm_movemask_epi8(eq));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppgylj4bd.cpp:34:24: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i prod = _mm_mul_epi32(va, vx);\n      |                        ^\n[REDACTED]/tmppgylj4bd.cpp:35:26: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i abs_vy = _mm_abs_epi64(vy);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph5i91asr.cpp:34:24: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i prod = _mm_mul_epi32(va, vx);\n      |                        ^\n[REDACTED]/tmph5i91asr.cpp:35:26: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i abs_vy = _mm_abs_epi64(vy);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppen3ij6t.cpp:34:24: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i prod = _mm_mul_epi32(va, vx);\n      |                        ^\n[REDACTED]/tmppen3ij6t.cpp:35:26: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i abs_vy = _mm_abs_epi64(vy);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz3x389o1.cpp:34:23: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i vax = _mm_mul_epi32(va, vx);\n      |                       ^\n[REDACTED]/tmpz3x389o1.cpp:35:26: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i vabs_y = _mm_abs_epi64(vy);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcqs322_5.cpp:34:24: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i prod = _mm_mul_epi32(va, vx);\n      |                        ^\n[REDACTED]/tmpcqs322_5.cpp:35:26: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   35 |         __m128i abs_vy = _mm_abs_epi64(vy);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxz1s9rm2.cpp:52:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   52 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpxz1s9rm2.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1dughrr4.cpp:52:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   52 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmp1dughrr4.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy_nfv7nx.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpy_nfv7nx.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5c2gocfs.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmp5c2gocfs.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr5d8e7uz.cpp:53:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   53 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpr5d8e7uz.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmi0kzstu.cpp:55:59: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 mOut = _mm_blendv_ps(mD, _mm_blendv_ps(mC, _mm_blendv_ps(mB, mA, _mm_castsi128_ps(mCond1And2)), _mm_castsi128_ps(mCond1AndNotCond2)), _mm_castsi128_ps(mNotCond1AndCond2));\n      |                                                           ^\n[REDACTED]/tmpmi0kzstu.cpp:55:41: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 mOut = _mm_blendv_ps(mD, _mm_blendv_ps(mC, _mm_blendv_ps(mB, mA, _mm_castsi128_ps(mCond1And2)), _mm_castsi128_ps(mCond1AndNotCond2)), _mm_castsi128_ps(mNotCond1AndCond2));\n      |                                         ^\n[REDACTED]/tmpmi0kzstu.cpp:55:23: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_multi_select_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128 mOut = _mm_blendv_ps(mD, _mm_blendv_ps(mC, _mm_blendv_ps(mB, mA, _mm_castsi128_ps(mCond1And2)), _mm_castsi128_ps(mCond1AndNotCond2)), _mm_castsi128_ps(mNotCond1AndCond2));\n      |                       ^\n3 errors generated.\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpop7951da.cpp:55:45: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   55 |         _mm_storeu_si128((__m128i*)&out[i], _mm_shuffle_epi8(v, _mm_setzero_si128()));\n      |                                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptano__jd.cpp:41:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   41 |             __m128i abs_a = _mm_abs_epi32(a);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb1u3ln9f.cpp:41:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   41 |             __m128i abs_a = _mm_abs_epi32(a);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4jjo49su.cpp:41:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   41 |             __m128i abs_a = _mm_abs_epi32(a);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm7d267hm.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpm7d267hm.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpm7d267hm.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpm7d267hm.cpp:45:40: error: no matching function for call to '_mm_slli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpm7d267hm.cpp:45:72: error: no matching function for call to '_mm_srli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpovm8gok3.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpovm8gok3.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpovm8gok3.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpovm8gok3.cpp:44:40: error: no matching function for call to '_mm_slli_epi32'\n   44 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpovm8gok3.cpp:44:72: error: no matching function for call to '_mm_srli_epi32'\n   44 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6evnu_i2.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp6evnu_i2.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp6evnu_i2.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp6evnu_i2.cpp:45:40: error: no matching function for call to '_mm_slli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(src_chunk, rotate), _mm_srli_epi32(src_chunk, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmp6evnu_i2.cpp:45:75: error: no matching function for call to '_mm_srli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(src_chunk, rotate), _mm_srli_epi32(src_chunk, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                                                           ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5ax04pui.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp5ax04pui.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp5ax04pui.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp5ax04pui.cpp:44:40: error: no matching function for call to '_mm_slli_epi32'\n   44 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmp5ax04pui.cpp:44:72: error: no matching function for call to '_mm_srli_epi32'\n   44 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(srcVec, rotate), _mm_srli_epi32(srcVec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbkc1u__u.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpbkc1u__u.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpbkc1u__u.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpbkc1u__u.cpp:45:40: error: no matching function for call to '_mm_slli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(src_vec, rotate), _mm_srli_epi32(src_vec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2742:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2742 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_slli_epi32(__m128i __a,\n      |                                              ^\n 2743 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpbkc1u__u.cpp:45:73: error: no matching function for call to '_mm_srli_epi32'\n   45 |         __m128i rotated = _mm_or_si128(_mm_slli_epi32(src_vec, rotate), _mm_srli_epi32(src_vec, _mm_sub_epi32(_mm_set1_epi32(32), rotate)));\n      |                                                                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvnsej86i.cpp:47:53: error: use of undeclared identifier '_mm_cvtps_epi30'; did you mean '_mm_cvtps_epi32'?\n   47 |         result = _mm_or_si128(result, _mm_and_si128(_mm_cvtps_epi30(cmp_gt), _mm_set1_epi32(1)));\n      |                                                     ^~~~~~~~~~~~~~~\n      |                                                     _mm_cvtps_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3264:46: note: '_mm_cvtps_epi32' declared here\n 3264 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtps_epi32(__m128 __a) {\n      |                                              ^\n[REDACTED]/tmpvnsej86i.cpp:48:53: error: use of undeclared identifier '_mm_cvtps_epi30'; did you mean '_mm_cvtps_epi32'?\n   48 |         result = _mm_or_si128(result, _mm_and_si128(_mm_cvtps_epi30(cmp_lt), _mm_set1_epi32(-1)));\n      |                                                     ^~~~~~~~~~~~~~~\n      |                                                     _mm_cvtps_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3264:46: note: '_mm_cvtps_epi32' declared here\n 3264 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtps_epi32(__m128 __a) {\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf465zmli.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpf465zmli.cpp:34:42: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   34 |     const __m128 float_max = _mm_set1_ps(INT32_MAX);\n      |                              ~~~~~~~~~~~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpf465zmli.cpp:45:32: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i max_int_vals = _mm_min_epi32(int_vals, int32_max);\n      |                                ^\n[REDACTED]/tmpf465zmli.cpp:46:32: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i min_int_vals = _mm_max_epi32(max_int_vals, int32_min);\n      |                                ^\n2 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp13e6wuby.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) B[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp13e6wuby.cpp:34:42: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   34 |     const __m128 float_max = _mm_set1_ps(INT32_MAX);\n      |                              ~~~~~~~~~~~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp13e6wuby.cpp:57:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   57 |         if (val > INT32_MAX) {\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmp13e6wuby.cpp:49:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   49 |         int_vals = _mm_min_epi32(int_vals, int_max);\n      |                    ^\n[REDACTED]/tmp13e6wuby.cpp:50:20: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'float_to_int_saturate_simd' that is compiled without support for 'sse4.1'\n   50 |         int_vals = _mm_max_epi32(int_vals, int_min);\n      |                    ^\n3 warnings and 2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpas2bjoq4.cpp:50:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   50 |         f = _mm_blendv_ps(f, max_val_f, _mm_castpd_ps(max_mask));\n      |             ^\n[REDACTED]/tmpas2bjoq4.cpp:51:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   51 |         f = _mm_blendv_ps(f, min_val_f, _mm_castpd_ps(min_mask));\n      |             ^\n[REDACTED]/tmpas2bjoq4.cpp:67:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   67 |         f = _mm_blendv_ps(f, max_val_f, _mm_castpd_ps(max_mask));\n      |             ^\n[REDACTED]/tmpas2bjoq4.cpp:68:13: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   68 |         f = _mm_blendv_ps(f, min_val_f, _mm_castpd_ps(min_mask));\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp77rkq39b.cpp:45:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   45 |         a = _mm_blendv_pd(a, max_val_d, max_cmp);\n      |             ^\n[REDACTED]/tmp77rkq39b.cpp:46:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   46 |         a = _mm_blendv_pd(a, min_val_d, min_cmp);\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpemfvh7ca.cpp:45:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   45 |         a = _mm_blendv_pd(a, max_val_d, max_cmp);\n      |             ^\n[REDACTED]/tmpemfvh7ca.cpp:46:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   46 |         a = _mm_blendv_pd(a, min_val_d, min_cmp);\n      |             ^\n[REDACTED]/tmpemfvh7ca.cpp:59:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   59 |         a = _mm_blendv_pd(a, max_val_d, max_cmp);\n      |             ^\n[REDACTED]/tmpemfvh7ca.cpp:60:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   60 |         a = _mm_blendv_pd(a, min_val_d, min_cmp);\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpad9j3whd.cpp:45:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   45 |         a = _mm_blendv_pd(a, max_val_d, max_cmp);\n      |             ^\n[REDACTED]/tmpad9j3whd.cpp:46:13: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   46 |         a = _mm_blendv_pd(a, min_val_d, min_cmp);\n      |             ^\n[REDACTED]/tmpad9j3whd.cpp:53:15: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   53 |         a_f = _mm_blendv_ps(a_f, max_val_f, max_cmp);\n      |               ^\n[REDACTED]/tmpad9j3whd.cpp:54:15: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'double_to_float_saturate_simd' that is compiled without support for 'sse4.1'\n   54 |         a_f = _mm_blendv_ps(a_f, min_val_f, min_cmp);\n      |               ^\n4 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuq77xzc6.cpp:52:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128 result_v = _mm_blendv_ps(A_v, norm_v, control_mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq_myxptt.cpp:51:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128 result = _mm_blendv_ps(a, norm, ctrl_mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3rv6tgs2.cpp:52:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128 result_v = _mm_blendv_ps(A_v, norm_v, mask_v);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeahugks7.cpp:39:19: error: use of undeclared identifier '_mm_cvtsi128_ss'\n   39 |         float f = _mm_cvtsi128_ss(v);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg5uxdcam.cpp:62:9: error: no matching function for call to '_mm_storeu_ps'\n   62 |         _mm_storeu_ps(&diff_vec[i], result);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7jwtcn1g.cpp:37:51: error: use of undeclared identifier '_mm_castsi128_si64'; did you mean '_mm_cvtsi128_si64'?\n   37 |         __m128i dst_vals_low = _mm_cvtepu32_epi64(_mm_castsi128_si64(src_vals));\n      |                                                   ^~~~~~~~~~~~~~~~~~\n      |                                                   _mm_cvtsi128_si64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3339:48: note: '_mm_cvtsi128_si64' declared here\n 3339 | static __inline__ long long __DEFAULT_FN_ATTRS _mm_cvtsi128_si64(__m128i __a) {\n      |                                                ^\n[REDACTED]/tmp7jwtcn1g.cpp:37:32: error: no matching function for call to '_mm_cvtepu32_epi64'\n   37 |         __m128i dst_vals_low = _mm_cvtepu32_epi64(_mm_castsi128_si64(src_vals));\n      |                                ^~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1428:46: note: candidate function not viable: no known conversion from 'long long' to '__m128i' (vector of 2 'long long' values) for 1st argument\n 1428 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cvtepu32_epi64(__m128i __V) {\n      |                                              ^                  ~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzd95_hjt.cpp:41:23: error: no matching function for call to '_mm_set_epi16'\n   41 |         __m128i idx = _mm_set_epi16(index[i+3], index[i+2], index[i+1], index[i]);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3514:1: note: candidate function not viable: requires 8 arguments, but 4 were provided\n 3514 | _mm_set_epi16(short __w7, short __w6, short __w5, short __w4, short __w3,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3515 |               short __w2, short __w1, short __w0) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp84weildj.cpp:41:23: error: no matching function for call to '_mm_set_epi16'\n   41 |         __m128i idx = _mm_set_epi16(index[i+3], index[i+2], index[i+1], index[i]);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3514:1: note: candidate function not viable: requires 8 arguments, but 4 were provided\n 3514 | _mm_set_epi16(short __w7, short __w6, short __w5, short __w4, short __w3,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3515 |               short __w2, short __w1, short __w0) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp84weildj.cpp:47:15: error: no matching function for call to '_mm_set_epi16'\n   47 |         idx = _mm_set_epi16(index[i+7], index[i+6], index[i+5], index[i+4]);\n      |               ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3514:1: note: candidate function not viable: requires 8 arguments, but 4 were provided\n 3514 | _mm_set_epi16(short __w7, short __w6, short __w5, short __w4, short __w3,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3515 |               short __w2, short __w1, short __w0) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5p0o08f4.cpp:41:23: error: no matching function for call to '_mm_set_epi16'\n   41 |         __m128i idx = _mm_set_epi16(index[i+3], index[i+2], index[i+1], index[i]);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3514:1: note: candidate function not viable: requires 8 arguments, but 4 were provided\n 3514 | _mm_set_epi16(short __w7, short __w6, short __w5, short __w4, short __w3,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3515 |               short __w2, short __w1, short __w0) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj0l3dlyt.cpp:69:30: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'simple_conv2d_simd' that is compiled without support for 'sse3'\n   69 |             __m128d result = _mm_hadd_pd(sum, sum);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwsla_w3g.cpp:42:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   42 |         min_val = _mm_min_epi32(min_val, sum);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplfk4ear0.cpp:55:21: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   55 |             chunk = _mm_insert_epi32(chunk, operations[size - remaining + i], i);\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpasubjjkf.cpp:66:27: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   66 |     __m128d sum_vec_hor = _mm_hadd_pd(sum_vec, sum_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  cannot create std::vector larger than max_size()\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  vector::reserve\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxqp8ynpq.cpp:47:34: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   47 |         sum = _mm_add_epi32(sum, _mm_cvtepi16_epi32(chunk));\n      |                                  ^\n[REDACTED]/tmpxqp8ynpq.cpp:48:38: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   48 |         temp = _mm_mullo_epi32(prod, _mm_cvtepi16_epi32(chunk));\n      |                                      ^\n[REDACTED]/tmpxqp8ynpq.cpp:48:16: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   48 |         temp = _mm_mullo_epi32(prod, _mm_cvtepi16_epi32(chunk));\n      |                ^\n3 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpaf5aeka9.cpp:47:34: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   47 |         sum = _mm_add_epi32(sum, _mm_cvtepi16_epi32(num));\n      |                                  ^\n[REDACTED]/tmpaf5aeka9.cpp:49:38: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   49 |         temp = _mm_mullo_epi32(prod, _mm_cvtepi16_epi32(num));\n      |                                      ^\n[REDACTED]/tmpaf5aeka9.cpp:49:16: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_product_simd' that is compiled without support for 'sse4.1'\n   49 |         temp = _mm_mullo_epi32(prod, _mm_cvtepi16_epi32(num));\n      |                ^\n3 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3d98cz0b.cpp:46:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         current_max = _mm_max_epi32(current_max, chunk);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgn5fyl_8.cpp:45:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   45 |         max_val = _mm_max_epi32(max_val, chunk);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpclb4kelh.cpp:46:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         current_max = _mm_max_epi32(current_max, chunk);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu3rqgb49.cpp:45:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   45 |         current_max = _mm_max_epi32(current_max, chunk);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6gao19zx.cpp:46:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   46 |         current_max = _mm_max_epi32(current_max, chunk);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwmbxqrez.cpp:50:25: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   50 |             v_lengths = _mm_insert_epi32(v_lengths, static_cast<int>(length), j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2a4gqsau.cpp:48:25: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   48 |             v_lengths = _mm_insert_epi32(v_lengths, static_cast<int>(length), j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr0q40p7l.cpp:47:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'longest_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128i max_len = _mm_max_epi32(len1, len2);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj7kix2dp.cpp:48:25: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   48 |             v_lengths = _mm_insert_epi32(v_lengths, static_cast<int>(length), j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxoocw2fy.cpp:50:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   50 |             lengths = _mm_insert_epi32(lengths, static_cast<int>(len), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj7j7hh2h.cpp:43:20: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'uint64_t' (aka 'unsigned long') of different size\n   43 |             return (uint64_t)_b;\n      |                    ^~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "timed out"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0sdyccqr.cpp:39:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   39 |     while (_mm_movemask_epi8(_mm_cmpeq_epi64(_b, _mm_setzero_si128())) != 0xFFFF) {\n      |                              ^\n[REDACTED]/tmp0sdyccqr.cpp:40:40: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i tmp = _mm_andnot_si128(_mm_cmpeq_epi64(_mm_setzero_si128(), _mm_and_si128(_a, _mm_set1_epi64x(1))) , _b);\n      |                                        ^\n[REDACTED]/tmp0sdyccqr.cpp:41:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   41 |         _b = _mm_andnot_si128(_mm_cmpeq_epi64(_mm_setzero_si128(), _mm_and_si128(_b, _mm_set1_epi64x(1))) , _a);\n      |                               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqpli13x.cpp:40:86: error: no matching function for call to '_mm_set_epi64x'\n   40 |         __m128i remainder = _mm_sub_epi64(_mm_min_epu64(a_vec, b_vec), _mm_and_si128(_mm_set_epi64x(1), _mm_xor_si128(a_vec, b_vec)));\n      |                                                                                      ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 1 was provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb_4tjco3.cpp:39:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   39 |     while (_mm_movemask_epi8(_mm_cmpeq_epi64(_b, _mm_setzero_si128())) == 0) {\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn15vnj9s.cpp:53:42: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   53 |             __m128 abs_diff = _mm_max_ps(_mm_abs_ps(diff1), _mm_abs_ps(diff2));\n      |                                          ^~~~~~~~~~\n      |                                          _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpn15vnj9s.cpp:53:61: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   53 |             __m128 abs_diff = _mm_max_ps(_mm_abs_ps(diff1), _mm_abs_ps(diff2));\n      |                                                             ^~~~~~~~~~\n      |                                                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi8w86rui.cpp:32:24: error: no matching function for call to '_mm_set_epi64x'\n   32 |     __m128i divisors = _mm_set_epi64x(7, 5, 3, 2);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpi8w86rui.cpp:37:20: error: no matching function for call to '_mm_set_epi64x'\n   37 |         divisors = _mm_set_epi64x(i+3, i+2, i+1, i);\n      |                    ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpi8w86rui.cpp:40:82: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   40 |         __m128i mod = _mm_and_si128(_mm_sub_epi64(n_vec, _mm_mul_epu32(divisors, _mm_div_epi64(n_vec, divisors))), rem);\n      |                                                                                  ^~~~~~~~~~~~~\n      |                                                                                  _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwr0o6837.cpp:32:24: error: no matching function for call to '_mm_set_epi64x'\n   32 |     __m128i divisors = _mm_set_epi64x(n-1, n-2, n-3, n-4);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpwr0o6837.cpp:37:63: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   37 |     remainders = _mm_sub_epi64(n_vec, _mm_mul_epu32(divisors, _mm_div_epu32(n_vec, divisors)));\n      |                                                               ^~~~~~~~~~~~~\n      |                                                               _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0c2uyv9p.cpp:40:27: error: use of undeclared identifier '_mm_rem_epu64'\n   40 |         __m128i rem_vec = _mm_rem_epu64(n_vec, i_vec);\n      |                           ^\n[REDACTED]/tmp0c2uyv9p.cpp:41:36: error: use of undeclared identifier '_mm_rem_epu64'\n   41 |         __m128i rem_plus_one_vec = _mm_rem_epu64(n_vec, i_plus_one_vec);\n      |                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr4m4v_ss.cpp:31:24: error: no matching function for call to '_mm_set_epi64x'\n   31 |     __m128i divisors = _mm_set_epi64x(n-1, n-2, n-3, n-4);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpedccyqf1.cpp:31:24: error: no matching function for call to '_mm_set_epi64x'\n   31 |     __m128i divisors = _mm_set_epi64x(n-1, n-2, n-3, n-4);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpedccyqf1.cpp:37:20: error: no matching function for call to '_mm_set_epi64x'\n   37 |         divisors = _mm_set_epi64x(i, i-1, i-2, i-3);\n      |                    ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpedccyqf1.cpp:38:115: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   38 |         remainders = _mm_and_si128(_mm_cmpgt_epi64(n_vec, divisors), _mm_sub_epi64(n_vec, _mm_mul_epu32(divisors, _mm_div_epu32(n_vec, divisors))));\n      |                                                                                                                   ^~~~~~~~~~~~~\n      |                                                                                                                   _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_fdv65ms.cpp:67:21: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |             int i = _mm_extract_epi32(_i, j);\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp_fdv65ms.cpp:69:40: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   69 |                 _mm_store_si128(&_rem, _mm_insert_epi32(_rem, n / i, j));\n      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmzbzz7lt.cpp:64:18: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   64 |             _n = _mm_div_epi32(_n, _i);\n      |                  ^~~~~~~~~~~~~\n      |                  _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq3jask13.cpp:64:14: error: no matching function for call to '_mm_srli_epi32'\n   64 |         _n = _mm_srli_epi32(_n, _two);\n      |              ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n[REDACTED]/tmpq3jask13.cpp:77:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   77 |             _rem = _mm_div_epi32(_rem, _i);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfinj5gmq.cpp:48:27: error: use of undeclared identifier '_mm_rem_epi64'\n   48 |         __m128i v_mod_i = _mm_rem_epi64(v_n, v_i);\n      |                           ^\n[REDACTED]/tmpfinj5gmq.cpp:49:36: error: use of undeclared identifier '_mm_rem_epi64'\n   49 |         __m128i v_mod_i_plus_two = _mm_rem_epi64(v_n, v_i_plus_two);\n      |                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppjyufw6q.cpp:53:29: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i v_cmp_two = _mm_cmpeq_epi64(v_mod_two, _mm_setzero_si128());\n      |                             ^\n[REDACTED]/tmppjyufw6q.cpp:54:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i v_cmp_three = _mm_cmpeq_epi64(v_mod_three, _mm_setzero_si128());\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk938rzch.cpp:51:26: error: use of undeclared identifier '_mm_rem_epi64'\n   51 |         __m128i v_mod2 = _mm_rem_epi64(v_n, _mm_add_epi64(v_i, v_two));\n      |                          ^\n[REDACTED]/tmpk938rzch.cpp:52:26: error: use of undeclared identifier '_mm_rem_epi64'\n   52 |         __m128i v_mod3 = _mm_rem_epi64(v_n, _mm_add_epi64(v_i, v_three));\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6vgv1ifg.cpp:48:27: error: use of undeclared identifier '_mm_rem_epi64'\n   48 |         __m128i v_rem_i = _mm_rem_epi64(v_n, v_i);\n      |                           ^\n[REDACTED]/tmp6vgv1ifg.cpp:49:36: error: use of undeclared identifier '_mm_rem_epi64'\n   49 |         __m128i v_rem_i_plus_two = _mm_rem_epi64(v_n, v_i_plus_two);\n      |                                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmyxkvq2a.cpp:53:29: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i v_cmp_two = _mm_cmpeq_epi64(v_mod_two, _mm_setzero_si128());\n      |                             ^\n[REDACTED]/tmpmyxkvq2a.cpp:54:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_prime_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i v_cmp_three = _mm_cmpeq_epi64(v_mod_three, _mm_setzero_si128());\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmple7wskd5.cpp:57:41: error: use of undeclared identifier '_mm_cmpgt_epu8'; did you mean '_mm_cmpgt_epi8'?\n   57 |         __m128i isUpper = _mm_and_si128(_mm_cmpgt_epu8(_mm_subs_epu8(upperMask, chunk), _mm_setzero_si128()), upperCase);\n      |                                         ^~~~~~~~~~~~~~\n      |                                         _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl1i7rgt0.cpp:57:41: error: use of undeclared identifier '_mm_cmpgt_epu8'; did you mean '_mm_cmpgt_epi8'?\n   57 |         __m128i isUpper = _mm_and_si128(_mm_cmpgt_epu8(_mm_subs_epu8(upperMask, chunk), _mm_setzero_si128()), upperCase);\n      |                                         ^~~~~~~~~~~~~~\n      |                                         _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdjm7vh3w.cpp:47:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         __m128i div11 = _mm_div_epi32(nums, _11);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpdjm7vh3w.cpp:48:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   48 |         __m128i div13 = _mm_div_epi32(nums, _13);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1w7brovi.cpp:46:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i div11 = _mm_div_epi32(nums, eleven);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1w7brovi.cpp:47:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         __m128i div13 = _mm_div_epi32(nums, thirteen);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1w7brovi.cpp:53:17: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   53 |             if (_mm_extract_epi32(mask, j)) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1tzy301p.cpp:46:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i div11 = _mm_div_epi32(numbers, eleven);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1tzy301p.cpp:47:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         __m128i div13 = _mm_div_epi32(numbers, thirteen);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0is0t_1j.cpp:46:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i div11 = _mm_div_epi32(numbers, eleven);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp0is0t_1j.cpp:47:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         __m128i div13 = _mm_div_epi32(numbers, thirteen);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5x8jze4x.cpp:46:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   46 |         __m128i div11 = _mm_div_epi32(nums, eleven);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp5x8jze4x.cpp:47:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   47 |         __m128i div13 = _mm_div_epi32(nums, thirteen);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp5x8jze4x.cpp:53:17: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   53 |             if (_mm_extract_epi32(mask, j)) {\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpemz2helt.cpp:63:14: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   63 |         _x = _mm_div_epi64(_x, _base);\n      |              ^~~~~~~~~~~~~\n      |              _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvtlh0zin.cpp:41:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   41 |         back = _mm_shuffle_epi8(back, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv20lurs3.cpp:48:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   48 |         back = _mm_shuffle_epi8(back, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2t0j34ez.cpp:49:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp = _mm_cmpeq_epi8(a, _mm_shuffle_epi8(b, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)));\n      |                                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdpfn0xlq.cpp:48:15: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   48 |         end = _mm_shuffle_epi8(end, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv5_ijugf.cpp:50:23: error: use of undeclared identifier '_mm_rem_epi8'; did you mean '_mm_rot_epi8'?\n   50 |         vec_decoded = _mm_rem_epi8(vec_decoded, vec_alphabet_size);\n      |                       ^~~~~~~~~~~~\n      |                       _mm_rot_epi8\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:204:1: note: '_mm_rot_epi8' declared here\n  204 | _mm_rot_epi8(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx_kobv_f.cpp:63:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   63 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgmp7i5j2.cpp:57:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   57 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjxohyrax.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdsktqlje.cpp:59:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   59 |         count += _mm_popcnt_u32(local_count);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1o8k74v8.cpp:62:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   62 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx0e6d9zq.cpp:45:41: error: no matching function for call to '_mm_cmpgt_epi8'\n   45 |         __m128i isUpper = _mm_and_si128(_mm_cmpgt_epi8(_mm_subs_epu8(chunk, upperCaseMask)), _mm_cmplt_epi8(chunk, lowerCaseMask));\n      |                                         ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: candidate function not viable: requires 2 arguments, but 1 was provided\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^              ~~~~~~~~~~~~\n 3079 |                                                             __m128i __b) {\n      |                                                             ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmputl6b1zi.cpp:42:44: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   42 |         __m128i upperCheck = _mm_and_si128(_mm_cmpge_epi8(chunk, upperMask), _mm_cmple_epi8(chunk, lowerMask));\n      |                                            ^~~~~~~~~~~~~~\n      |                                            _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmputl6b1zi.cpp:42:78: error: use of undeclared identifier '_mm_cmple_epi8'; did you mean '_mm_cmplt_epi8'?\n   42 |         __m128i upperCheck = _mm_and_si128(_mm_cmpge_epi8(chunk, upperMask), _mm_cmple_epi8(chunk, lowerMask));\n      |                                                                              ^~~~~~~~~~~~~~\n      |                                                                              _mm_cmplt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3140:46: note: '_mm_cmplt_epi8' declared here\n 3140 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi8(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_qcb2e68.cpp:45:29: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i min_chunk = _mm_min_epu32(chunk, min_val);\n      |                             ^\n[REDACTED]/tmp_qcb2e68.cpp:48:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   48 |         min_val = _mm_min_epu32(min_chunk, min_val);\n      |                   ^\n[REDACTED]/tmp_qcb2e68.cpp:49:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   49 |         min_idx = _mm_min_epu32(min_chunk_idx, min_idx);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpclouy0d8.cpp:46:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i currentMin = _mm_min_epi32(chunk, minVal);\n      |                              ^\n[REDACTED]/tmpclouy0d8.cpp:49:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   49 |         minVal = _mm_blendv_epi8(minVal, currentMin, updateMask);\n      |                  ^\n[REDACTED]/tmpclouy0d8.cpp:50:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   50 |         minIdx = _mm_blendv_epi8(minIdx, currentIdx, updateMask);\n      |                  ^\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzg2wgtz5.cpp:45:29: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i min_chunk = _mm_min_epu32(chunk, min_val);\n      |                             ^\n[REDACTED]/tmpzg2wgtz5.cpp:47:19: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   47 |         min_idx = _mm_min_epu32(min_idx_chunk, min_idx);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpktglfn4y.cpp:46:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i curr_min = _mm_min_epi32(chunk, min_val);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2krcvdyx.cpp:46:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   46 |         minVal = _mm_blendv_epi8(minVal, evenChunk, cmp);\n      |                  ^\n[REDACTED]/tmp2krcvdyx.cpp:47:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   47 |         minIdx = _mm_blendv_epi8(minIdx, _mm_add_epi32(idx, _mm_set1_epi32(i)), cmp);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsiyyc8s0.cpp:55:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |             int val = _mm_extract_epi32(v, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphy_npx16.cpp:46:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   46 |         changes += _mm_popcnt_u32(~mask & 0xFFFF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjd_heih8.cpp:43:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   43 |         changes += _mm_popcnt_u32(~mask & 0xFFFF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwe991wvg.cpp:45:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   45 |         changes += _mm_popcnt_u32(~mask & 0xFFFF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvpxb5ezu.cpp:45:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   45 |         changes += _mm_popcnt_u32(~mask & 0xFFFF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_miycwu8.cpp:45:20: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'popcnt'\n   45 |         changes += _mm_popcnt_u32(~mask & 0xFFFF);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp252witcm.cpp:56:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'total_match_simd' that is compiled without support for 'ssse3'\n   56 |     sum1 = _mm_hadd_epi32(sum1, sum1);\n      |            ^\n[REDACTED]/tmp252witcm.cpp:57:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'total_match_simd' that is compiled without support for 'ssse3'\n   57 |     sum2 = _mm_hadd_epi32(sum2, sum2);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpculibpdv.cpp:45:27: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i cmp_vec = _mm_cmpeq_epi64(power_vec, x_vec);\n      |                           ^\n[REDACTED]/tmpculibpdv.cpp:49:63: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   49 |         if (_mm_movemask_epi8(_mm_packs_epi16(_mm_packs_epi32(_mm_cmpgt_epi64(power_vec, x_vec), _mm_cmpgt_epi64(power_vec, x_vec)), _mm_cmpgt_epi64(power_vec, x_vec))) == 0xFFFF) {\n      |                                                               ^\n[REDACTED]/tmpculibpdv.cpp:49:98: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   49 |         if (_mm_movemask_epi8(_mm_packs_epi16(_mm_packs_epi32(_mm_cmpgt_epi64(power_vec, x_vec), _mm_cmpgt_epi64(power_vec, x_vec)), _mm_cmpgt_epi64(power_vec, x_vec))) == 0xFFFF) {\n      |                                                                                                  ^\n[REDACTED]/tmpculibpdv.cpp:49:134: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   49 |         if (_mm_movemask_epi8(_mm_packs_epi16(_mm_packs_epi32(_mm_cmpgt_epi64(power_vec, x_vec), _mm_cmpgt_epi64(power_vec, x_vec)), _mm_cmpgt_epi64(power_vec, x_vec))) == 0xFFFF) {\n      |                                                                                                                                      ^\n4 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5xy5l2vv.cpp:50:63: error: use of undeclared identifier '_mm_cmplt_epu64'\n   50 |         if (_mm_movemask_epi8(_mm_packs_epi16(_mm_packs_epi32(_mm_cmplt_epu64(power_vec, x_vec), _mm_setzero_si128()), _mm_setzero_si128())) == 0) {\n      |                                                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8e5vr7kz.cpp:47:39: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   47 |         result = _mm_or_si128(result, _mm_cmpeq_epi64(power, x_vec));\n      |                                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy1l5jicf.cpp:38:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   38 |     primeMask = _mm_insert_epi8(primeMask, '2', 0);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:39:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   39 |     primeMask = _mm_insert_epi8(primeMask, '3', 1);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:40:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   40 |     primeMask = _mm_insert_epi8(primeMask, '5', 2);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:41:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   41 |     primeMask = _mm_insert_epi8(primeMask, '7', 3);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:42:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   42 |     primeMask = _mm_insert_epi8(primeMask, 'B', 4);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:43:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   43 |     primeMask = _mm_insert_epi8(primeMask, 'D', 5);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpy1l5jicf.cpp:53:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   53 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n7 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdtp41v7m.cpp:38:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   38 |     primeMask = _mm_insert_epi8(primeMask, '2', 0);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:39:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   39 |     primeMask = _mm_insert_epi8(primeMask, '3', 1);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:40:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   40 |     primeMask = _mm_insert_epi8(primeMask, '5', 2);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:41:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   41 |     primeMask = _mm_insert_epi8(primeMask, '7', 3);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:42:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   42 |     primeMask = _mm_insert_epi8(primeMask, 'B', 4);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:43:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   43 |     primeMask = _mm_insert_epi8(primeMask, 'D', 5);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpdtp41v7m.cpp:50:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   50 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n7 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbil_abh3.cpp:42:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   42 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm01nhweg.cpp:41:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   41 |         count += _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbeiem6v4.cpp:49:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   49 |         count += _mm_popcnt_u32(_mm_movemask_epi8(result));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkef6s1ku.cpp:51:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   51 |         prev2 = _mm_insert_epi8(prev2, s[i], 15);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmpkef6s1ku.cpp:53:17: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   53 |         prev1 = _mm_insert_epi8(prev1, s[i + 1], 15);\n      |                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_102_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_102_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_102_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo_9rb0p6.cpp:51:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i v_rem_two = _mm_rem_epi32(v_len, v_mod_two);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpo_9rb0p6.cpp:52:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   52 |         __m128i v_rem_three = _mm_rem_epi32(v_len, v_mod_three);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeyyl225r.cpp:55:16: error: no member named 'bitset' in namespace 'std'\n   55 |     ss << std::bitset<64>(result);\n      |           ~~~~~^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyszsqdat.cpp:57:17: error: no member named 'bitset' in namespace 'std'\n   57 |     oss << std::bitset<64>(total_sum);\n      |            ~~~~~^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppw61el_2.cpp:47:18: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   47 |         digits = _mm_shuffle_epi8(digits, shuffle);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu4a6uypk.cpp:49:56: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   49 |         __m128i corrected = _mm_or_si128(_mm_and_si128(_mm_cmpge_epi8(wrapped, alphaEnd), _mm_sub_epi8(wrapped, _mm_set1_epi8(26))), _mm_andnot_si128(_mm_cmpge_epi8(wrapped, alphaEnd), wrapped));\n      |                                                        ^~~~~~~~~~~~~~\n      |                                                        _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpu4a6uypk.cpp:49:151: error: use of undeclared identifier '_mm_cmpge_epi8'; did you mean '_mm_cmpgt_epi8'?\n   49 |         __m128i corrected = _mm_or_si128(_mm_and_si128(_mm_cmpge_epi8(wrapped, alphaEnd), _mm_sub_epi8(wrapped, _mm_set1_epi8(26))), _mm_andnot_si128(_mm_cmpge_epi8(wrapped, alphaEnd), wrapped));\n      |                                                                                                                                                       ^~~~~~~~~~~~~~\n      |                                                                                                                                                       _mm_cmpgt_epi8\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3078:46: note: '_mm_cmpgt_epi8' declared here\n 3078 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi8(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8ux1tlc3.cpp:46:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   46 |     vowels = _mm_insert_epi8(vowels, 'e', 1);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:47:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   47 |     vowels = _mm_insert_epi8(vowels, 'i', 2);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:48:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   48 |     vowels = _mm_insert_epi8(vowels, 'o', 3);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:49:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   49 |     vowels = _mm_insert_epi8(vowels, 'u', 4);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:50:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   50 |     vowels = _mm_insert_epi8(vowels, 'A', 5);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:51:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   51 |     vowels = _mm_insert_epi8(vowels, 'E', 6);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:52:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   52 |     vowels = _mm_insert_epi8(vowels, 'I', 7);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:53:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   53 |     vowels = _mm_insert_epi8(vowels, 'O', 8);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:54:14: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   54 |     vowels = _mm_insert_epi8(vowels, 'U', 9);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:57:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   57 |     replacements = _mm_insert_epi8(replacements, 'g', 1);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:58:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   58 |     replacements = _mm_insert_epi8(replacements, 'k', 2);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:59:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   59 |     replacements = _mm_insert_epi8(replacements, 'q', 3);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:60:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   60 |     replacements = _mm_insert_epi8(replacements, 'w', 4);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:61:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   61 |     replacements = _mm_insert_epi8(replacements, 'C', 5);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:62:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   62 |     replacements = _mm_insert_epi8(replacements, 'G', 6);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:63:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   63 |     replacements = _mm_insert_epi8(replacements, 'K', 7);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:64:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   64 |     replacements = _mm_insert_epi8(replacements, 'Q', 8);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp8ux1tlc3.cpp:65:20: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   65 |     replacements = _mm_insert_epi8(replacements, 'W', 9);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n18 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpchaxwi4j.cpp:36:1: error: expected unqualified-id\n   36 | ```cpp\n      | ^\n[REDACTED]/tmpchaxwi4j.cpp:74:1: error: expected unqualified-id\n   74 | ```\n      | ^\n[REDACTED]/tmpchaxwi4j.cpp:108:28: error: use of undeclared identifier 'check_dict_case_simd'; did you mean 'check_dict_case'?\n  108 |         bool result_simd = check_dict_case_simd(dict);\n      |                            ^~~~~~~~~~~~~~~~~~~~\n      |                            check_dict_case\n[REDACTED]/tmpchaxwi4j.cpp:20:6: note: 'check_dict_case' declared here\n   20 | bool check_dict_case(std::map<std::string, std::string> dict) {\n      |      ^\n[REDACTED]/tmpchaxwi4j.cpp:119:17: error: use of undeclared identifier 'humaneval_check'\n  119 |     bool pass = humaneval_check() && correctness_check(ITERATIONS);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdgskyjb6.cpp:36:1: error: expected unqualified-id\n   36 | ```cpp\n      | ^\n[REDACTED]/tmpdgskyjb6.cpp:84:1: error: expected unqualified-id\n   84 | ```\n      | ^\n[REDACTED]/tmpdgskyjb6.cpp:118:28: error: use of undeclared identifier 'check_dict_case_simd'; did you mean 'check_dict_case'?\n  118 |         bool result_simd = check_dict_case_simd(dict);\n      |                            ^~~~~~~~~~~~~~~~~~~~\n      |                            check_dict_case\n[REDACTED]/tmpdgskyjb6.cpp:20:6: note: 'check_dict_case' declared here\n   20 | bool check_dict_case(std::map<std::string, std::string> dict) {\n      |      ^\n[REDACTED]/tmpdgskyjb6.cpp:129:17: error: use of undeclared identifier 'humaneval_check'\n  129 |     bool pass = humaneval_check() && correctness_check(ITERATIONS);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppaa9b1b8.cpp:36:1: error: expected unqualified-id\n   36 | ```cpp\n      | ^\n[REDACTED]/tmppaa9b1b8.cpp:85:1: error: expected unqualified-id\n   85 | ```\n      | ^\n[REDACTED]/tmppaa9b1b8.cpp:119:28: error: use of undeclared identifier 'check_dict_case_simd'; did you mean 'check_dict_case'?\n  119 |         bool result_simd = check_dict_case_simd(dict);\n      |                            ^~~~~~~~~~~~~~~~~~~~\n      |                            check_dict_case\n[REDACTED]/tmppaa9b1b8.cpp:20:6: note: 'check_dict_case' declared here\n   20 | bool check_dict_case(std::map<std::string, std::string> dict) {\n      |      ^\n[REDACTED]/tmppaa9b1b8.cpp:130:17: error: use of undeclared identifier 'humaneval_check'\n  130 |     bool pass = humaneval_check() && correctness_check(ITERATIONS);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt125q7b9.cpp:36:1: error: expected unqualified-id\n   36 | ```cpp\n      | ^\n[REDACTED]/tmpt125q7b9.cpp:85:1: error: expected unqualified-id\n   85 | ```\n      | ^\n[REDACTED]/tmpt125q7b9.cpp:119:28: error: use of undeclared identifier 'check_dict_case_simd'; did you mean 'check_dict_case'?\n  119 |         bool result_simd = check_dict_case_simd(dict);\n      |                            ^~~~~~~~~~~~~~~~~~~~\n      |                            check_dict_case\n[REDACTED]/tmpt125q7b9.cpp:20:6: note: 'check_dict_case' declared here\n   20 | bool check_dict_case(std::map<std::string, std::string> dict) {\n      |      ^\n[REDACTED]/tmpt125q7b9.cpp:130:17: error: use of undeclared identifier 'humaneval_check'\n  130 |     bool pass = humaneval_check() && correctness_check(ITERATIONS);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprsfyzybp.cpp:36:1: error: expected unqualified-id\n   36 | ```cpp\n      | ^\n[REDACTED]/tmprsfyzybp.cpp:94:1: error: expected unqualified-id\n   94 | ```\n      | ^\n[REDACTED]/tmprsfyzybp.cpp:128:28: error: use of undeclared identifier 'check_dict_case_simd'; did you mean 'check_dict_case'?\n  128 |         bool result_simd = check_dict_case_simd(dict);\n      |                            ^~~~~~~~~~~~~~~~~~~~\n      |                            check_dict_case\n[REDACTED]/tmprsfyzybp.cpp:20:6: note: 'check_dict_case' declared here\n   20 | bool check_dict_case(std::map<std::string, std::string> dict) {\n      |      ^\n[REDACTED]/tmprsfyzybp.cpp:139:17: error: use of undeclared identifier 'humaneval_check'\n  139 |     bool pass = humaneval_check() && correctness_check(ITERATIONS);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk6mm87de.cpp:52:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   52 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz1gqooeg.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_upper_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(mask_value);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg3cqyy_0.cpp:52:25: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   52 |     __m128i total_sum = _mm_hadd_epi64(sum, sum);\n      |                         ^~~~~~~~~~~~~~\n      |                         _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcq_uhedz.cpp:52:25: error: use of undeclared identifier '_mm_hadd_epi64'; did you mean '_mm_add_epi64'?\n   52 |     __m128i total_sum = _mm_hadd_epi64(sum, sum);\n      |                         ^~~~~~~~~~~~~~\n      |                         _mm_add_epi64\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2096:46: note: '_mm_add_epi64' declared here\n 2096 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_add_epi64(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmugnfx58.cpp:63:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   63 |             temp_fact = _mm_mullo_epi32(temp_fact, _mm_set1_epi32(j));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe7_r196f.cpp:66:16: error: no matching function for call to '_mm_srai_epi32'\n   66 |         fact = _mm_srai_epi32(fact, mod);\n      |                ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2853:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2853 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srai_epi32(__m128i __a,\n      |                                              ^\n 2854 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6l9fmq_5.cpp:61:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   61 |             fact = _mm_mullo_epi32(fact, idx);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmmfbsuiv.cpp:58:20: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   58 |             fact = _mm_mullo_epi32(fact, _mm_set1_epi32(i));\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd55nv_54.cpp:63:16: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   63 |         even = _mm_mullo_epi32(even, fact);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptfa_hv_7.cpp:59:31: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   59 |                 palindromes = _mm_insert_epi32(palindromes, num, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd4dfpo6f.cpp:51:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   51 |             int num = _mm_extract_epi32(nums, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpd4dfpo6f.cpp:60:31: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   60 |                 palindromes = _mm_insert_epi32(palindromes, num, j);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu58iyzrm.cpp:50:51: error: use of undeclared identifier 'reverse_int'\n   50 |         __m128i nums_rev = _mm_set_epi32(0, 0, 0, reverse_int(i));\n      |                                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmsw499no.cpp:44:24: error: no matching function for call to '_mm_set_epi32'\n   44 |         __m128i nums = _mm_set_epi32(0, i + 3 <= n ? i + 3 : 0, i + 2 <= n ? i + 2 : 0, i + 1 <= n ? i + 1 : 0, i);\n      |                        ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 5 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpmsw499no.cpp:45:45: error: use of undeclared identifier 'reverse_int'\n   45 |         __m128i rev_nums = _mm_set_epi32(0, reverse_int(i + 3 <= n ? i + 3 : 0), reverse_int(i + 2 <= n ? i + 2 : 0), reverse_int(i + 1 <= n ? i + 1 : 0), reverse_int(i));\n      |                                             ^\n[REDACTED]/tmpmsw499no.cpp:45:82: error: use of undeclared identifier 'reverse_int'\n   45 |         __m128i rev_nums = _mm_set_epi32(0, reverse_int(i + 3 <= n ? i + 3 : 0), reverse_int(i + 2 <= n ? i + 2 : 0), reverse_int(i + 1 <= n ? i + 1 : 0), reverse_int(i));\n      |                                                                                  ^\n[REDACTED]/tmpmsw499no.cpp:45:119: error: use of undeclared identifier 'reverse_int'\n   45 |         __m128i rev_nums = _mm_set_epi32(0, reverse_int(i + 3 <= n ? i + 3 : 0), reverse_int(i + 2 <= n ? i + 2 : 0), reverse_int(i + 1 <= n ? i + 1 : 0), reverse_int(i));\n      |                                                                                                                       ^\n[REDACTED]/tmpmsw499no.cpp:45:156: error: use of undeclared identifier 'reverse_int'\n   45 |         __m128i rev_nums = _mm_set_epi32(0, reverse_int(i + 3 <= n ? i + 3 : 0), reverse_int(i + 2 <= n ? i + 2 : 0), reverse_int(i + 1 <= n ? i + 1 : 0), reverse_int(i));\n      |                                                                                                                                                            ^\n5 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp43080k2s.cpp:63:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   63 |         count += _mm_popcnt_u32(maskInt & 0b00000000000000000000000011110000);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb7cb4iom.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3q7fkfip.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzmrbqkhk.cpp:64:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   64 |         count += _mm_popcnt_u32(mask);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppi4vn5td.cpp:65:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'count_nums_simd' that is compiled without support for 'popcnt'\n   65 |         count += _mm_popcnt_u32(localCount & 0x1111);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp21axj3zv.cpp:73:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmp21axj3zv.cpp:78:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   78 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmp21axj3zv.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmp21axj3zv.cpp:88:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   88 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmp21axj3zv.cpp:93:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   93 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n5 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpasrp54dn.cpp:73:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpasrp54dn.cpp:78:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   78 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpasrp54dn.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpasrp54dn.cpp:88:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   88 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpasrp54dn.cpp:93:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   93 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n5 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpozbgasvr.cpp:73:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpozbgasvr.cpp:78:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   78 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpozbgasvr.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpozbgasvr.cpp:88:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   88 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpozbgasvr.cpp:93:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   93 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n5 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo4l5uy19.cpp:73:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpo4l5uy19.cpp:78:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   78 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpo4l5uy19.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpo4l5uy19.cpp:88:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   88 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmpo4l5uy19.cpp:93:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   93 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n5 errors generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphwer9gm2.cpp:73:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   73 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmphwer9gm2.cpp:78:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   78 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmphwer9gm2.cpp:83:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   83 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmphwer9gm2.cpp:88:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   88 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n[REDACTED]/tmphwer9gm2.cpp:93:22: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'odd_count_simd' that is compiled without support for 'popcnt'\n   93 |             count += _mm_popcnt_u32(mask);\n      |                      ^\n5 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkgjkdg9a.cpp:53:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         if (vCurrentSum.m128i_i64[0] < 0) {\n      |             ~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4ijsg99q.cpp:53:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         if (vCurrentSum.m128i_i64[0] < 0) {\n      |             ~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp42687qjx.cpp:50:28: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   50 |         if (i < n) vNums = _mm_insert_epi64(vNums, nums[i], 0);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmp42687qjx.cpp:51:32: error: '__builtin_ia32_vec_set_v2di' needs target feature sse4.1\n   51 |         if (i + 1 < n) vNums = _mm_insert_epi64(vNums, nums[i + 1], 1);\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:986:13: note: expanded from macro '_mm_insert_epi64'\n  986 |   ((__m128i)__builtin_ia32_vec_set_v2di((__v2di)(__m128i)(X), (long long)(I),  \\\n      |             ^\n[REDACTED]/tmp42687qjx.cpp:54:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   54 |         vMinSum = _mm_min_epi64(vMinSum, vCurrentSum);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfgsn_tve.cpp:54:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |         if (vCurrentSum.m128i_i64[0] < 0) {\n      |             ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpfgsn_tve.cpp:57:47: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   57 |         if (i + 1 < nums.size() && vCurrentSum.m128i_i64[1] < 0) {\n      |                                    ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpfgsn_tve.cpp:58:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   58 |             vCurrentSum.m128i_i64[1] = 0;\n      |             ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpfgsn_tve.cpp:61:18: error: no matching function for call to 'min'\n   61 |         minSum = std::min(minSum, _mm_extract_epi64(vMinSum, 0));\n      |                  ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpfgsn_tve.cpp:63:22: error: no matching function for call to 'min'\n   63 |             minSum = std::min(minSum, _mm_extract_epi64(vMinSum, 1));\n      |                      ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('int64_t' (aka 'long') vs. 'long long')\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'int64_t' (aka 'long')\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp62xzz8e4.cpp:59:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   59 |         if (vCurrentSum.m128i_i64[0] < 0) {\n      |             ~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ryi2g77.cpp:62:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   62 |         __m128i div = _mm_div_epi32(sum, capacity_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_bh5easu.cpp:51:40: error: use of undeclared identifier '_mm_cvtsi128_ss'\n   51 |             _mm_store_ss(&partial_sum, _mm_cvtsi128_ss(sum));\n      |                                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy4w6zn67.cpp:41:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_chunk = _mm_abs_epi32(chunk);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpui3wnxrw.cpp:50:16: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   50 |         prod = _mm_mul_epi32(prod, sign_chunk);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8x87mzlz.cpp:46:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i abs_chunk = _mm_abs_epi32(chunk);\n      |                             ^\n[REDACTED]/tmp8x87mzlz.cpp:51:16: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   51 |         prod = _mm_mul_epi32(prod, sign_bits);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuf9pizdl.cpp:46:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i abs_chunk = _mm_abs_epi32(chunk);\n      |                             ^\n[REDACTED]/tmpuf9pizdl.cpp:51:16: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   51 |         prod = _mm_mul_epi32(prod, sign_chunk);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7uawbyfb.cpp:45:29: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i abs_chunk = _mm_abs_epi32(chunk);\n      |                             ^\n[REDACTED]/tmp7uawbyfb.cpp:50:16: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   50 |         prod = _mm_mul_epi32(prod, sign_bits);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8pyeenev.cpp:50:16: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   50 |         prod = _mm_mul_epi32(prod, signs);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppyurgy0k.cpp:84:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   84 |                     vMin = _mm_min_epi32(vMin, v);\n      |                            ^\n[REDACTED]/tmppyurgy0k.cpp:88:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   88 |                     vMin = _mm_min_epi32(vMin, v);\n      |                            ^\n[REDACTED]/tmppyurgy0k.cpp:92:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   92 |                     vMin = _mm_min_epi32(vMin, v);\n      |                            ^\n[REDACTED]/tmppyurgy0k.cpp:96:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   96 |                     vMin = _mm_min_epi32(vMin, v);\n      |                            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2hmkzg30.cpp:90:36: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   90 |                             vMin = _mm_min_epi32(vMin, vValue);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpynu_2c3v.cpp:87:36: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   87 |                             vMin = _mm_min_epi32(vMin, vValue);\n      |                                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5laf0bfp.cpp:90:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   90 |                 minPathVec = _mm_min_epi32(minPathVec, pathVec);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8nhm6je6.cpp:89:27: error: argument to '__builtin_ia32_vec_set_v8hi' must be a constant integer\n   89 |                 pathVec = _mm_insert_epi16(pathVec, minNeighbor, step);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4189:13: note: expanded from macro '_mm_insert_epi16'\n 4189 |   ((__m128i)__builtin_ia32_vec_set_v8hi((__v8hi)(__m128i)(a), (int)(b),        \\\n      |             ^\n 4190 |                                         (int)(imm)))\n      |                                         ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbkuak7_b.cpp:55:13: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   55 |         if (_mm_extract_epi8(is_odd, i)) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp01f2blnr.cpp:50:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   50 |         product = _mm_mullo_epi32(product, digit_vec);\n      |                   ^\n[REDACTED]/tmp01f2blnr.cpp:53:22: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'digits_simd' that is compiled without support for 'ssse3'\n   53 |     __m128i result = _mm_hadd_epi32(product, product);\n      |                      ^\n[REDACTED]/tmp01f2blnr.cpp:54:14: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'digits_simd' that is compiled without support for 'ssse3'\n   54 |     result = _mm_hadd_epi32(result, result);\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpboxm6zri.cpp:49:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   49 |         product = _mm_mullo_epi32(product, odd_digit);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdc4mgfyp.cpp:49:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   49 |         product = _mm_mullo_epi32(product, odd_digit);\n      |                   ^\n[REDACTED]/tmpdc4mgfyp.cpp:52:22: error: always_inline function '_mm_packus_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   52 |     __m128i result = _mm_packus_epi32(product, zero);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpira6dnro.cpp:49:19: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   49 |         product = _mm_mullo_epi32(product, _mm_or_si128(odd_digit, _mm_set1_epi32(1)));\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpszbf_lt3.cpp:39:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         temp = _mm_ceil_ps(data);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpszbf_lt3.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpszbf_lt3.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpszbf_lt3.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwwzsz983.cpp:39:32: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         temp = _mm_cvtps_epi32(_mm_ceil_ps(data));\n      |                                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpwwzsz983.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpwwzsz983.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpwwzsz983.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7nuozr0q.cpp:38:16: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   38 |         temp = _mm_ceil_ps(data);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7nuozr0q.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp7nuozr0q.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp7nuozr0q.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp_983fb9.cpp:39:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 ceil_data = _mm_ceil_ps(data);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpp_983fb9.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpp_983fb9.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpp_983fb9.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_avg58q1.cpp:39:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   39 |         __m128 ceil_data = _mm_ceil_ps(data);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_avg58q1.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp_avg58q1.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp_avg58q1.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt7xnjttu.cpp:43:20: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   43 |             prev = _mm_alignr_epi8(prev, _mm_set1_epi32(INT_MIN), 12);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpt7xnjttu.cpp:67:16: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   67 |         prev = _mm_alignr_epi8(prev, _mm_set1_epi32(INT_MIN), 12);\n      |                ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcxf4m3d7.cpp:55:16: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         vmin = _mm_max_epi32(vmin, vneg);\n      |                ^\n[REDACTED]/tmpcxf4m3d7.cpp:56:16: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         vmax = _mm_min_epi32(vmax, vpos);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg1tefah4.cpp:55:16: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         vmax = _mm_max_epi32(vmax, _mm_and_si128(vmask_neg, v));\n      |                ^\n[REDACTED]/tmpg1tefah4.cpp:56:16: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         vmin = _mm_min_epi32(vmin, _mm_and_si128(vmask_pos, v));\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbrtecq_q.cpp:49:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i vpos = _mm_max_epi32(v, vzero);\n      |                        ^\n[REDACTED]/tmpbrtecq_q.cpp:50:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i vneg = _mm_min_epi32(v, vzero);\n      |                        ^\n[REDACTED]/tmpbrtecq_q.cpp:52:20: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         vpos_min = _mm_min_epi32(vpos_min, vpos);\n      |                    ^\n[REDACTED]/tmpbrtecq_q.cpp:53:20: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |         vneg_max = _mm_max_epi32(vneg_max, vneg);\n      |                    ^\n4 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyc9crb_4.cpp:59:16: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   59 |         vmin = _mm_max_epi32(vmin, vmax_neg);\n      |                ^\n[REDACTED]/tmpyc9crb_4.cpp:60:16: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   60 |         vmax = _mm_min_epi32(vmax, vmin_pos);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8fwmr2y8.cpp:55:16: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         vmax = _mm_max_epi32(vmax, _mm_and_si128(vcmp_neg, v));\n      |                ^\n[REDACTED]/tmp8fwmr2y8.cpp:56:16: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   56 |         vmin = _mm_min_epi32(vmin, _mm_and_si128(vcmp_pos, v));\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph_gdmbt0.cpp:39:21: error: use of undeclared identifier '_mm_mul_epu64'\n   39 |         factorial = _mm_mul_epu64(factorial, multiplier);\n      |                     ^\n[REDACTED]/tmph_gdmbt0.cpp:40:18: error: use of undeclared identifier '_mm_mul_epu64'\n   40 |         result = _mm_mul_epu64(result, factorial);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpefec7xzz.cpp:39:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i v_sq = _mm_mullo_epi32(v, v);\n      |                        ^\n[REDACTED]/tmpefec7xzz.cpp:40:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i v_cb = _mm_mullo_epi32(v_sq, v);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc7jcwbu4.cpp:39:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmpc7jcwbu4.cpp:40:49: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i cubes = _mm_mullo_epi32(values, _mm_mullo_epi32(values, values));\n      |                                                 ^\n[REDACTED]/tmpc7jcwbu4.cpp:40:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i cubes = _mm_mullo_epi32(values, _mm_mullo_epi32(values, values));\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxgi6k8ec.cpp:39:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i squares = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmpxgi6k8ec.cpp:40:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                         ^\n[REDACTED]/tmpxgi6k8ec.cpp:40:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i cubes = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkqdi2_2x.cpp:39:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i v_sq = _mm_mullo_epi32(v, v);\n      |                        ^\n[REDACTED]/tmpkqdi2_2x.cpp:40:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i v_cb = _mm_mullo_epi32(v_sq, v);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkjj6h3al.cpp:42:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i squared = _mm_mullo_epi32(values, values);\n      |                           ^\n[REDACTED]/tmpkjj6h3al.cpp:43:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                                         ^\n[REDACTED]/tmpkjj6h3al.cpp:43:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(values, values), values);\n      |                         ^\n3 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnyhyqtgr.cpp:45:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n[REDACTED]/tmpnyhyqtgr.cpp:55:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   55 |         count += _mm_popcnt_u32(mask_value & 0x1111);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6u0l9e5y.cpp:48:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i vAbsNums = _mm_abs_epi32(vNums);\n      |                            ^\n[REDACTED]/tmp6u0l9e5y.cpp:59:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   59 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7r0kplg9.cpp:47:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i absChunk = _mm_abs_epi32(chunk);\n      |                            ^\n[REDACTED]/tmp7r0kplg9.cpp:82:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   82 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjf17motn.cpp:49:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i vAbsNums = _mm_abs_epi32(vNums);\n      |                            ^\n[REDACTED]/tmpjf17motn.cpp:77:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   77 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0safd0n0.cpp:46:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i absChunk = _mm_abs_epi32(chunk);\n      |                            ^\n[REDACTED]/tmp0safd0n0.cpp:68:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'popcnt'\n   68 |         count += _mm_popcnt_u32(mask & 0x0F0F0F0F);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdkajv9ze.cpp:39:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i mul_vec = _mm_mullo_epi32(j_vec, j_vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv4m16xdn.cpp:43:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i div_vec = _mm_div_epi32(n_vec, j_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpv4m16xdn.cpp:51:28: error: use of undeclared identifier '_mm_sqrt_epi32'; did you mean '_mm_set1_epi32'?\n   51 |         __m128i sqrt_vec = _mm_sqrt_epi32(j_vec);\n      |                            ^~~~~~~~~~~~~~\n      |                            _mm_set1_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3618:46: note: '_mm_set1_epi32' declared here\n 3618 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set1_epi32(int __i) {\n      |                                              ^\n[REDACTED]/tmpv4m16xdn.cpp:51:43: error: cannot initialize a parameter of type 'int' with an lvalue of type '__m128i' (vector of 2 'long long' values)\n   51 |         __m128i sqrt_vec = _mm_sqrt_epi32(j_vec);\n      |                                           ^~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3618:65: note: passing argument to parameter '__i' here\n 3618 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set1_epi32(int __i) {\n      |                                                                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp285zrg5q.cpp:52:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   52 |     __m128i result_vec = _mm_blendv_epi8(y_vec, x_vec, prime_vec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyeao6aaa.cpp:58:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'x_or_y_simd' that is compiled without support for 'sse4.1'\n   58 |     __m128i result_vec = _mm_blendv_epi8(y_vec, x_vec, prime_vec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1xyot_f8.cpp:43:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i quotient = _mm_div_epi32(n_vec, j);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp1xyot_f8.cpp:54:52: error: use of undeclared identifier '_mm_sqrt_epi32'; did you mean '_mm_set1_epi32'?\n   54 |         __m128i compare_limit = _mm_cmpeq_epi32(j, _mm_sqrt_epi32(n_vec));\n      |                                                    ^~~~~~~~~~~~~~\n      |                                                    _mm_set1_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3618:46: note: '_mm_set1_epi32' declared here\n 3618 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set1_epi32(int __i) {\n      |                                              ^\n[REDACTED]/tmp1xyot_f8.cpp:54:67: error: cannot initialize a parameter of type 'int' with an lvalue of type '__m128i' (vector of 2 'long long' values)\n   54 |         __m128i compare_limit = _mm_cmpeq_epi32(j, _mm_sqrt_epi32(n_vec));\n      |                                                                   ^~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3618:65: note: passing argument to parameter '__i' here\n 3618 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set1_epi32(int __i) {\n      |                                                                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_v6nhk7c.cpp:44:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i vSquare = _mm_mullo_epi32(vIntData, vIntData);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwor397mo.cpp:56:5: error: no matching function for call to '_mm_store_ss'\n   56 |     _mm_store_ss(&result, sum2);\n      |     ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1970:1: note: candidate function not viable: no known conversion from 'uint64_t *' (aka 'unsigned long *') to 'float *' for 1st argument\n 1970 | _mm_store_ss(float *__p, __m128 __a)\n      | ^            ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpajue8lgj.cpp:46:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i squared = _mm_mullo_epi32(intData, intData);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp11_7297g.cpp:42:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i squared = _mm_mullo_epi32(intData, intData);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1e1nzgsm.cpp:55:5: error: no matching function for call to '_mm_store_ss'\n   55 |     _mm_store_ss(&result, sums);\n      |     ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1970:1: note: candidate function not viable: no known conversion from 'uint64_t *' (aka 'unsigned long *') to 'float *' for 1st argument\n 1970 | _mm_store_ss(float *__p, __m128 __a)\n      | ^            ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk1zutvz_.cpp:40:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd5sy5iu8.cpp:42:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_uxzjm14.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk1_wfesd.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1nmug74_.cpp:42:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}

{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpol1p7333.cpp:45:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd_am5o4n.cpp:35:28: error: always_inline function '_mm_cvtepi8_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i mask_vec = _mm_cvtepi8_epi64(_mm_loadu_si128((__m128i*)&mask[i]));\n      |                            ^\n[REDACTED]/tmpd_am5o4n.cpp:38:28: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i mask_cmp = _mm_cmpeq_epi64(mask_vec, _mm_setzero_si128());\n      |                            ^\n[REDACTED]/tmpd_am5o4n.cpp:46:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, mask_cmp);\n      |                          ^\n3 errors generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfeqcv_lz.cpp:49:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, mask_vec);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps122w5ll.cpp:35:28: error: no matching function for call to '_mm_set_epi8'\n   35 |         __m128i mask_vec = _mm_set_epi8(\n      |                            ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 24 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe90o0437.cpp:35:28: error: always_inline function '_mm_cvtepi8_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i mask_vec = _mm_cvtepi8_epi64(_mm_loadu_si128((__m128i*)&mask[i]));\n      |                            ^\n[REDACTED]/tmpe90o0437.cpp:38:28: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i mask_cmp = _mm_cmpeq_epi64(mask_vec, _mm_set1_epi64x(1));\n      |                            ^\n[REDACTED]/tmpe90o0437.cpp:45:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'conditional_move_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i result = _mm_blendv_epi8(dst_vec, src_vec, mask_cmp);\n      |                          ^\n3 errors generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_oxo4gdl.cpp:54:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         v_result = _mm_div_epi32(v_result, v_divisor);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe1flcu9p.cpp:56:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   56 |         v_result = _mm_div_epi32(v_result, v_divisor);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_f9ksc_k.cpp:56:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   56 |         v_result = _mm_div_epi32(v_result, v_divisor);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgflexs2g.cpp:56:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   56 |         v_result = _mm_div_epi32(v_result, v_divisor);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpejmc6fel.cpp:58:28: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   58 |         __m128i v_result = _mm_div_epi32(v_sum, v_divisor);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz79p7996.cpp:41:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   41 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpz79p7996.cpp:42:22: error: argument to '__builtin_ia32_insertps128' must be a constant integer\n   42 |             values = _mm_insert_ps(values, _mm_load_ss(&src[index]), j << 4); // Gather value from src\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:838:32: note: expanded from macro '_mm_insert_ps'\n  838 | #define _mm_insert_ps(X, Y, N) __builtin_ia32_insertps128((X), (Y), (N))\n      |                                ^                                    ~~~\n[REDACTED]/tmpz79p7996.cpp:60:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   60 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpz79p7996.cpp:61:39: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   61 |             _mm_store_ss(&dst[index], _mm_shuffle_ps(values, values, j)); // Scatter value to dst\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp5arr58o.cpp:41:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   41 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpp5arr58o.cpp:42:24: error: argument to '__builtin_ia32_insertps128' must be a constant integer\n   42 |             gathered = _mm_insert_ps(gathered, _mm_load_ss(&src[index]), j << 4); // Gather values\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:838:32: note: expanded from macro '_mm_insert_ps'\n  838 | #define _mm_insert_ps(X, Y, N) __builtin_ia32_insertps128((X), (Y), (N))\n      |                                ^                                    ~~~\n[REDACTED]/tmpp5arr58o.cpp:60:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   60 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpp5arr58o.cpp:61:39: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   61 |             _mm_store_ss(&dst[index], _mm_shuffle_ps(values, values, j)); // Scatter values\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzn5xfpi3.cpp:41:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   41 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpzn5xfpi3.cpp:43:22: error: argument to '__builtin_ia32_insertps128' must be a constant integer\n   43 |             values = _mm_insert_ps(values, val, j << 4); // Insert into correct position\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:838:32: note: expanded from macro '_mm_insert_ps'\n  838 | #define _mm_insert_ps(X, Y, N) __builtin_ia32_insertps128((X), (Y), (N))\n      |                                ^                                    ~~~\n[REDACTED]/tmpzn5xfpi3.cpp:61:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   61 |             int index = _mm_extract_epi32(idx, j); // Extract each index\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpzn5xfpi3.cpp:62:39: error: argument to '__builtin_ia32_shufps' must be a constant integer\n   62 |             _mm_store_ss(&dst[index], _mm_shuffle_ps(values, values, j)); // Scatter value to dst\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:2618:12: note: expanded from macro '_mm_shuffle_ps'\n 2618 |   ((__m128)__builtin_ia32_shufps((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), \\\n      |            ^\n 2619 |                                  (int)(mask)))\n      |                                  ~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgqkw2cqj.cpp:44:20: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'range_reverse_simd' that is compiled without support for 'ssse3'\n   44 |             back = _mm_shuffle_epi8(back, mask);\n      |                    ^\n1 error generated.\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa7886z__.cpp:44:28: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128d v_result = _mm_blendv_pd(v_src, v_scaled, v_cmp);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmx0s_v3v.cpp:44:28: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128d v_result = _mm_blendv_pd(v_src, v_scaled, v_cmp); // Blend based on comparison\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptzn5cwio.cpp:42:32: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128d v_result = _mm_blendv_pd(v_src, v_scaled, v_cmp);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdlfrx_9r.cpp:47:28: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   47 |         __m128d v_result = _mm_blendv_pd(v_src, v_scaled, v_cmp); // Blend based on comparison\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp534kf8ht.cpp:43:28: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128d v_result = _mm_blendv_pd(v_src, v_scaled, v_cmp); // Blend based on comparison\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_9_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoyeuqsi0.cpp:46:28: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   46 |         __m128i v_result = _mm_srai_epi64(v_sum, 1);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsusuglve.cpp:46:28: error: use of undeclared identifier '_mm_div_epi64_round_zero'\n   46 |         __m128i v_result = _mm_div_epi64_round_zero(v_sum, v_two);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1b7z2mg_.cpp:42:28: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   42 |         __m128i v_result = _mm_srai_epi64(v_sum, 1);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptl2kfsjq.cpp:46:27: error: use of undeclared identifier '_mm_div_epi64_round_to_zero'\n   46 |         __m128i vresult = _mm_div_epi64_round_to_zero(vsum, vtwo);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp895uysbv.cpp:44:29: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   44 |         __m128i v_shifted = _mm_srai_epi64(_mm_add_epi64(v_sum, v_two), 1);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphne2vpvy.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_vec = _mm_min_epi32(min_vec, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphdwxi3w8.cpp:40:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   40 |         min_vec = _mm_min_epi32(min_vec, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwj6zj06r.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_vec = _mm_min_epi32(min_vec, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcgfd9ln_.cpp:39:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   39 |         min_vec = _mm_min_epi32(min_vec, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbo2j0pzv.cpp:43:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   43 |         min_vec = _mm_min_epi32(min_vec, even_elements);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeug2cfe4.cpp:42:43: error: use of undeclared identifier '_mm_castsi128_si128'\n   42 |         __m128i ulogical = _mm_srli_epi32(_mm_castsi128_si128(vsrc), shift);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnhzo7ush.cpp:40:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_vals = _mm_blendv_epi8(max_vals, src_vals, cmp);\n      |                    ^\n[REDACTED]/tmpnhzo7ush.cpp:41:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         indices = _mm_blendv_epi8(indices, current_indices, cmp);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgbzfmv_s.cpp:40:20: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_vals = _mm_max_epi8(max_vals, src_vals);\n      |                    ^\n[REDACTED]/tmpgbzfmv_s.cpp:41:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         indices = _mm_blendv_epi8(indices, current_indices, mask);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm6krpcrd.cpp:40:20: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   40 |         max_vals = _mm_max_epi8(max_vals, data);\n      |                    ^\n[REDACTED]/tmpm6krpcrd.cpp:41:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   41 |         indices = _mm_blendv_epi8(indices, _mm_add_epi8(initial_indices, _mm_set1_epi8(i)), cmp);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw0ztba8t.cpp:48:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   48 |         max_idx_vec = _mm_blendv_epi8(max_idx_vec, idx_vec, cmp_mask);\n      |                       ^\n[REDACTED]/tmpw0ztba8t.cpp:49:19: error: always_inline function '_mm_max_epi8' requires target feature 'sse4.1', but would be inlined into function 'argmax_simd' that is compiled without support for 'sse4.1'\n   49 |         max_vec = _mm_max_epi8(max_vec, src_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_15_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsixhjjec.cpp:51:27: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   51 |             __m128i pop = _mm_shuffle_epi8(lookup, byte);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_17_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_19_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyt2gx4cn.cpp:62:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         __m128 v_rounded = _mm_ceil_ps(v_mul);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpyt2gx4cn.cpp:65:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128 v_result = _mm_blendv_ps(v_neg_one, v_rounded, v_condition);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb754qv_2.cpp:62:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         __m128 v_rounded = _mm_ceil_ps(v_mul);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpb754qv_2.cpp:65:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128 v_result = _mm_blendv_ps(v_neg_one, v_rounded, v_condition);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7tf0o4ut.cpp:61:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   61 |         __m128 v_ceil = _mm_ceil_ps(v_mul);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp7tf0o4ut.cpp:64:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   64 |         __m128 v_result = _mm_blendv_ps(v_neg_one, v_ceil, v_mask);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_x37n241.cpp:62:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         __m128 v_rounded = _mm_ceil_ps(v_mul);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp_x37n241.cpp:65:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128 v_result = _mm_blendv_ps(v_neg_one, v_rounded, v_combined_mask);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz2t78zpp.cpp:62:28: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |         __m128 v_rounded = _mm_ceil_ps(v_mul);\n      |                            ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:56:24: note: expanded from macro '_mm_ceil_ps'\n   56 | #define _mm_ceil_ps(X) _mm_round_ps((X), _MM_FROUND_CEIL)\n      |                        ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpz2t78zpp.cpp:65:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128 v_result = _mm_blendv_ps(v_neg_one, v_rounded, v_combined_mask);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_22_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_23_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplg9nvf23.cpp:78:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   78 |             col0 = _mm_floor_ps(col0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmplg9nvf23.cpp:79:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   79 |             col1 = _mm_floor_ps(col1);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmplg9nvf23.cpp:80:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   80 |             col2 = _mm_floor_ps(col2);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmplg9nvf23.cpp:81:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   81 |             col3 = _mm_floor_ps(col3);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpguh6q3je.cpp:66:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   66 |             col0 = _mm_round_ps(col0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpguh6q3je.cpp:67:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   67 |             col1 = _mm_round_ps(col1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpguh6q3je.cpp:68:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   68 |             col2 = _mm_round_ps(col2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpguh6q3je.cpp:69:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   69 |             col3 = _mm_round_ps(col3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprenum0ug.cpp:62:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   62 |             row0 = _mm_floor_ps(row0);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmprenum0ug.cpp:63:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   63 |             row1 = _mm_floor_ps(row1);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmprenum0ug.cpp:64:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   64 |             row2 = _mm_floor_ps(row2);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmprenum0ug.cpp:65:20: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   65 |             row3 = _mm_floor_ps(row3);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphaknnohn.cpp:86:60: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   86 |                     (dst_idx_base + 3 < rows * cols) ? col3.m128_f32[x] : 0.0f,\n      |                                                        ~~~~^~~~~~~~~\n[REDACTED]/tmphaknnohn.cpp:87:60: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   87 |                     (dst_idx_base + 2 < rows * cols) ? col2.m128_f32[x] : 0.0f,\n      |                                                        ~~~~^~~~~~~~~\n[REDACTED]/tmphaknnohn.cpp:88:60: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   88 |                     (dst_idx_base + 1 < rows * cols) ? col1.m128_f32[x] : 0.0f,\n      |                                                        ~~~~^~~~~~~~~\n[REDACTED]/tmphaknnohn.cpp:89:60: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   89 |                     (dst_idx_base + 0 < rows * cols) ? col0.m128_f32[x] : 0.0f\n      |                                                        ~~~~^~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_26_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_27_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmk7w72av.cpp:42:25: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_average_simd' that is compiled without support for 'sse3'\n   42 |     sum = _mm_cvtsd_f64(_mm_hadd_pd(sum_vec, sum_vec));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxyvtra77.cpp:56:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   56 |             if (!_mm_testz_si128(cmp, cmp)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps2eumydk.cpp:56:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   56 |             if (!_mm_testz_si128(cmp, cmp)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcvrxdg1j.cpp:56:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   56 |             if (!_mm_testz_si128(cmp, cmp)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpru2crbmd.cpp:56:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_sorted_verify_simd' that is compiled without support for 'sse4.1'\n   56 |             if (!_mm_testz_si128(cmp, cmp)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3_xi6mx5.cpp:41:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   41 |         __m128i quotient = _mm_div_epi16(vsrc, vbase);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgv4rlt41.cpp:41:29: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   41 |         __m128i vquotient = _mm_div_epi16(vsrc, vbase);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl0y2pty4.cpp:41:28: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   41 |         __m128i quotient = _mm_div_epi16(vsrc, vbase);\n      |                            ^~~~~~~~~~~~~\n      |                            _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5xq6_yx6.cpp:41:29: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   41 |         __m128i vquotient = _mm_div_epi16(vsrc, vbase);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2izjupxu.cpp:41:29: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   41 |         __m128i vquotient = _mm_div_epi16(vsrc, vbase);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzzp1c766.cpp:49:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   49 |         equal_count += _mm_popcnt_u32(_mm_movemask_epi8(v_equal_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9j6tb9kd.cpp:49:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   49 |         equal_count += _mm_popcnt_u32(_mm_movemask_epi8(v_equal_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpket6ejf_.cpp:49:24: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   49 |         equal_count += _mm_popcnt_u32(_mm_movemask_epi8(v_equal_mask));\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplt3l2_u0.cpp:39:24: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i vmul = _mm_mullo_epi64(vx, va);\n      |                        ^\n[REDACTED]/tmplt3l2_u0.cpp:43:24: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   43 |         __m128i vabs = _mm_abs_epi64(vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0lfejxob.cpp:38:24: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i vmul = _mm_mullo_epi64(vx, va);\n      |                        ^\n[REDACTED]/tmp0lfejxob.cpp:42:24: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   42 |         __m128i vabs = _mm_abs_epi64(vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ig07cb8.cpp:39:24: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   39 |         __m128i vmul = _mm_mullo_epi64(vx, va);\n      |                        ^\n[REDACTED]/tmp6ig07cb8.cpp:43:24: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   43 |         __m128i vabs = _mm_abs_epi64(vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5b7gbo8v.cpp:39:24: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i vmul = _mm_mul_epi32(va, vx);\n      |                        ^\n[REDACTED]/tmp5b7gbo8v.cpp:45:24: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   45 |         __m128i vabs = _mm_abs_epi64(vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppj6yllh9.cpp:38:24: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   38 |         __m128i vmul = _mm_mullo_epi64(vx, va);\n      |                        ^\n[REDACTED]/tmppj6yllh9.cpp:42:24: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   42 |         __m128i vabs = _mm_abs_epi64(vy);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkyr6m2mg.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpkyr6m2mg.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9c25d5vj.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmp9c25d5vj.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmmeis1ek.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpmmeis1ek.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdiwovwb1.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpdiwovwb1.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpejb3tghr.cpp:51:3: error: typedef redefinition with different types ('struct MinMaxPair' vs 'struct MinMaxPair')\n   51 | } MinMaxPair;\n      |   ^\n[REDACTED]/tmpejb3tghr.cpp:23:3: note: previous definition is here\n   23 | } MinMaxPair;\n      |   ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5u3xzw_8.cpp:70:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   70 |                 if (!_mm_test_all_ones(_mm_cmpeq_epi32(current_block, reference_block[i]))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwrfttmo7.cpp:73:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   73 |                 if (!_mm_test_all_ones(_mm_cmpeq_epi32(current_block, reference_block[i]))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1mhjul7t.cpp:70:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   70 |                 if (!_mm_test_all_ones(_mm_cmpeq_epi32(current_block, reference_block[i]))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk2qrmdd6.cpp:70:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   70 |                 if (!_mm_test_all_ones(_mm_cmpeq_epi32(current, reference[i]))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5txfbm4q.cpp:70:22: error: always_inline function '_mm_testc_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_blocks_equal_simd' that is compiled without support for 'sse4.1'\n   70 |                 if (!_mm_test_all_ones(_mm_cmpeq_epi32(current_block, reference_block[i]))) {\n      |                      ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1148:30: note: expanded from macro '_mm_test_all_ones'\n 1148 | #define _mm_test_all_ones(V) _mm_testc_si128((V), _mm_set1_epi32(-1))\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfo68hjgn.cpp:27:27: warning: absolute value function 'fabsf' given an argument of type 'double' but has parameter of type 'float' which may cause truncation of value [-Wabsolute-value]\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^\n[REDACTED]/tmpfo68hjgn.cpp:27:27: note: use function 'std::abs' instead\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^~~~~\n      |                           std::abs\n[REDACTED]/tmpfo68hjgn.cpp:61:18: error: always_inline function '_mm_testz_pd' requires target feature 'avx', but would be inlined into function 'vector_block_equal_simd' that is compiled without support for 'avx'\n   61 |             if (!_mm_testz_pd(mask1, mask1) || !_mm_testz_pd(mask2, mask2)) {\n      |                  ^\n[REDACTED]/tmpfo68hjgn.cpp:61:49: error: always_inline function '_mm_testz_pd' requires target feature 'avx', but would be inlined into function 'vector_block_equal_simd' that is compiled without support for 'avx'\n   61 |             if (!_mm_testz_pd(mask1, mask1) || !_mm_testz_pd(mask2, mask2)) {\n      |                                                 ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkaiy5hjw.cpp:48:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   48 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptlx4g4hh.cpp:38:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i squareA = _mm_maddubs_epi16(vecA, vecA);\n      |                           ^\n[REDACTED]/tmptlx4g4hh.cpp:39:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i squareB = _mm_maddubs_epi16(vecB, vecB);\n      |                           ^\n[REDACTED]/tmptlx4g4hh.cpp:45:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i product = _mm_maddubs_epi16(vecA, vecB);\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbvg9yb01.cpp:38:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i squareA = _mm_maddubs_epi16(vecA, vecA);\n      |                           ^\n[REDACTED]/tmpbvg9yb01.cpp:39:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i squareB = _mm_maddubs_epi16(vecB, vecB);\n      |                           ^\n[REDACTED]/tmpbvg9yb01.cpp:42:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   42 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squareA));\n      |                                                  ^\n[REDACTED]/tmpbvg9yb01.cpp:43:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   43 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squareA, 8)));\n      |                                                  ^\n[REDACTED]/tmpbvg9yb01.cpp:44:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   44 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(squareB));\n      |                                                  ^\n[REDACTED]/tmpbvg9yb01.cpp:45:50: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   45 |         sum_squares = _mm_add_epi32(sum_squares, _mm_cvtepi16_epi32(_mm_srli_si128(squareB, 8)));\n      |                                                  ^\n[REDACTED]/tmpbvg9yb01.cpp:48:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i product = _mm_maddubs_epi16(vecA, vecB);\n      |                           ^\n[REDACTED]/tmpbvg9yb01.cpp:51:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   51 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(product));\n      |                                                    ^\n[REDACTED]/tmpbvg9yb01.cpp:52:52: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'squarediff_simd' that is compiled without support for 'sse4.1'\n   52 |         sum_products = _mm_add_epi32(sum_products, _mm_cvtepi16_epi32(_mm_srli_si128(product, 8)));\n      |                                                    ^\n9 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpatn7pnb1.cpp:42:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i squareA = _mm_maddubs_epi16(vecA, vecA);\n      |                           ^\n[REDACTED]/tmpatn7pnb1.cpp:43:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i squareB = _mm_maddubs_epi16(vecB, vecB);\n      |                           ^\n[REDACTED]/tmpatn7pnb1.cpp:49:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i product = _mm_maddubs_epi16(vecA, vecB);\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuxgiupwu.cpp:42:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i squareA = _mm_maddubs_epi16(vecA, vecA);\n      |                           ^\n[REDACTED]/tmpuxgiupwu.cpp:43:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i squareB = _mm_maddubs_epi16(vecB, vecB);\n      |                           ^\n[REDACTED]/tmpuxgiupwu.cpp:49:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i product = _mm_maddubs_epi16(vecA, vecB);\n      |                           ^\n[REDACTED]/tmpuxgiupwu.cpp:58:24: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   58 |         __m128i temp = _mm_hadd_epi32(sum_squares, sum_squares);\n      |                        ^\n[REDACTED]/tmpuxgiupwu.cpp:59:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   59 |         temp = _mm_hadd_epi32(temp, temp);\n      |                ^\n[REDACTED]/tmpuxgiupwu.cpp:66:24: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   66 |         __m128i temp = _mm_hadd_epi32(sum_products, sum_products);\n      |                        ^\n[REDACTED]/tmpuxgiupwu.cpp:67:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   67 |         temp = _mm_hadd_epi32(temp, temp);\n      |                ^\n7 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg7sk7c_3.cpp:39:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i squareA = _mm_maddubs_epi16(vecA, vecA);\n      |                           ^\n[REDACTED]/tmpg7sk7c_3.cpp:40:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i squareB = _mm_maddubs_epi16(vecB, vecB);\n      |                           ^\n[REDACTED]/tmpg7sk7c_3.cpp:46:27: error: always_inline function '_mm_maddubs_epi16' requires target feature 'ssse3', but would be inlined into function 'squarediff_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i product = _mm_maddubs_epi16(vecA, vecB);\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_42_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpejjkkl51.cpp:51:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   51 |         __m128i result = _mm_blendv_epi8(zeros, ones, both_positive);\n      |                          ^\n[REDACTED]/tmpejjkkl51.cpp:52:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   52 |         result = _mm_blendv_epi8(result, neg_ones, both_negative);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_43_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzykbxxld.cpp:56:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'sse4.1'\n   56 |         count = _mm_mullo_epi32(count, _mm_set1_epi32(0x01010101));\n      |                 ^\n[REDACTED]/tmpzykbxxld.cpp:60:26: error: always_inline function '_mm_packus_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i packed = _mm_packus_epi32(count, count);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2oxtpou7.cpp:69:26: error: always_inline function '_mm_packus_epi32' requires target feature 'sse4.1', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'sse4.1'\n   69 |         __m128i result = _mm_packus_epi32(count, count); // Pack 32-bit counts into 8-bit values\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "runtime failed: corrupted size vs. prev_size\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj5m3vuwe.cpp:43:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   43 |             __m128i mod_result = _mm_rem_epi32(vec_a, div_by_3); // Compute remainder\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp76ccr3k9.cpp:44:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |             __m128i mod_result = _mm_rem_epi32(vec_a, div_by_3);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzijflkuo.cpp:44:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |             __m128i mod_result = _mm_rem_epi32(vec_a, div_by_3);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpybmdor5w.cpp:44:34: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |             __m128i mod_result = _mm_rem_epi32(vec_a, div_by_3);\n      |                                  ^~~~~~~~~~~~~\n      |                                  _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpprsu9g60.cpp:43:31: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   43 |             __m128i mod_vec = _mm_rem_epi32(a_vec, div_by_3); // Compute a % 3 for all elements\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwape_tcv.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpwape_tcv.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpwape_tcv.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpwape_tcv.cpp:60:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i result = _mm_blendv_epi8(negated_src, rotated_src, cmp_result);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph4t9ql_j.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmph4t9ql_j.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmph4t9ql_j.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmph4t9ql_j.cpp:61:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i result = _mm_blendv_epi8(negated, rotated, condition);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmped62o9jl.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmped62o9jl.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmped62o9jl.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmped62o9jl.cpp:60:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i result = _mm_blendv_epi8(negated_src, rotated_src, condition);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8g8dv2lr.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmp8g8dv2lr.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmp8g8dv2lr.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmp8g8dv2lr.cpp:54:32: error: always_inline function '_mm_sllv_epi32' requires target feature 'avx2', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'avx2'\n   54 |         __m128i rotated_left = _mm_sllv_epi32(src_vec, rotate_bits_vec);\n      |                                ^\n[REDACTED]/tmp8g8dv2lr.cpp:55:33: error: always_inline function '_mm_srlv_epi32' requires target feature 'avx2', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'avx2'\n   55 |         __m128i rotated_right = _mm_srlv_epi32(src_vec, _mm_sub_epi32(_mm_set1_epi32(32), rotate_bits_vec));\n      |                                 ^\n[REDACTED]/tmp8g8dv2lr.cpp:59:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i result = _mm_blendv_epi8(negated, rotated, condition);\n      |                          ^\n1 warning and 3 errors generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoujkw448.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpoujkw448.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpoujkw448.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpoujkw448.cpp:60:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i result = _mm_blendv_epi8(negated_src, rotated_src, cmp_result);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9zhgy9gl.cpp:60:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i v_result = _mm_blendv_epi8(v_zero, v_one, v_gt_mask);\n      |                            ^\n[REDACTED]/tmp9zhgy9gl.cpp:61:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   61 |         v_result = _mm_blendv_epi8(v_result, v_neg_one, v_lt_mask);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpheofpeqr.cpp:60:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i v_result = _mm_blendv_epi8(v_zero, v_one, v_gt_mask);\n      |                            ^\n[REDACTED]/tmpheofpeqr.cpp:61:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   61 |         v_result = _mm_blendv_epi8(v_result, v_neg_one, v_lt_mask);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqkc7ovw1.cpp:52:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i v_result = _mm_blendv_epi8(v_zero, v_one, v_mask_gt);\n      |                            ^\n[REDACTED]/tmpqkc7ovw1.cpp:53:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   53 |         v_result = _mm_blendv_epi8(v_result, v_neg_one, v_mask_lt);\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_51_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnne_o49e.cpp:23:19: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]\n   23 |         if (val > INT32_MAX) C[i] = INT32_MAX;\n      |                 ~ ^~~~~~~~~\n/usr/include/stdint.h:112:22: note: expanded from macro 'INT32_MAX'\n  112 | # define INT32_MAX              (2147483647)\n      |                                  ^~~~~~~~~~\n[REDACTED]/tmpnne_o49e.cpp:45:25: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   45 |         __m128 vround = _mm_round_ps(vdiv, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: malloc(): invalid size (unsorted)\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0cu3a3qo.cpp:37:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i vec_low = _mm_cvtepi16_epi32(vec);          // Convert lower 4 values\n      |                           ^\n[REDACTED]/tmp0cu3a3qo.cpp:38:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i vec_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8)); // Convert upper 4 values\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl6bvs6sd.cpp:38:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i vec_low = _mm_cvtepi16_epi32(vec);         // Convert lower 4 values\n      |                           ^\n[REDACTED]/tmpl6bvs6sd.cpp:39:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i vec_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8)); // Convert upper 4 values\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu9pozryq.cpp:37:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i vec_lo = _mm_cvtepi16_epi32(vec);          // Convert lower 4 values\n      |                          ^\n[REDACTED]/tmpu9pozryq.cpp:38:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i vec_hi = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8)); // Convert upper 4 values\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyvi8vhe6.cpp:38:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i lo = _mm_cvtepi16_epi32(v);          // Convert lower 4 values\n      |                      ^\n[REDACTED]/tmpyvi8vhe6.cpp:39:22: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i hi = _mm_cvtepi16_epi32(_mm_srli_si128(v, 8)); // Convert upper 4 values\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb13twyuq.cpp:37:27: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i vec_low = _mm_cvtepi16_epi32(vec);          // Convert lower 4 values\n      |                           ^\n[REDACTED]/tmpb13twyuq.cpp:38:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i vec_high = _mm_cvtepi16_epi32(_mm_srli_si128(vec, 8)); // Convert upper 4 values\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4np166v7.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, norm_val, ctrl_gt_zero);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoyfyvvxd.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, norm_vec, ctrl_gt_zero);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8t4o_4xg.cpp:58:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result_v = _mm_blendv_ps(a_v, norm_v, ctrl_gt_zero);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp22hptmb0.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, normalized, control_gt_zero);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyf8ushws.cpp:58:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128 result = _mm_blendv_ps(a_vec, normalized, control_gt_zero);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_56_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeejzjn05.cpp:56:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128 result = _mm_blendv_ps(zero, diffs_float, mask);\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwq9fg7ox.cpp:49:29: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i condition = _mm_cvtepi8_epi32(_mm_loadu_si128((__m128i*)(cond + i)));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbg7ugfug.cpp:49:29: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'conditional_diff_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128i condition = _mm_cvtepi8_epi32(_mm_loadu_si128((__m128i*)&cond[i]));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8w9kumo7.cpp:45:47: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   45 |         __m128i diffs = _mm_sub_epi32(a_curr, _mm_alignr_epi8(a_prev, a_prev, 4));\n      |                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmhvlnlqu.cpp:40:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i low_part = _mm_cvtepu32_epi64(src_vec);\n      |                            ^\n[REDACTED]/tmpmhvlnlqu.cpp:41:29: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i high_part = _mm_cvtepu32_epi64(_mm_srli_si128(src_vec, 8));\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbsor40kf.cpp:40:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i low_part = _mm_cvtepu32_epi64(src_vec);\n      |                            ^\n[REDACTED]/tmpbsor40kf.cpp:43:29: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i high_part = _mm_cvtepu32_epi64(_mm_srli_si128(src_vec, 8));\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbsl6p_dn.cpp:40:28: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i low_part = _mm_cvtepu32_epi64(src_vec);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyie4uzby.cpp:44:29: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i index_low = _mm_cvtepi16_epi32(index_vec); // Lower 4 indices\n      |                             ^\n[REDACTED]/tmpyie4uzby.cpp:45:30: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i index_high = _mm_cvtepi16_epi32(_mm_srli_si128(index_vec, 8)); // Upper 4 indices\n      |                              ^\n[REDACTED]/tmpyie4uzby.cpp:57:20: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   57 |     __m128d temp = _mm_hadd_pd(sum_vec, sum_vec);\n      |                    ^\n3 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfin4qwul.cpp:44:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i idx_32lo = _mm_cvtepi16_epi32(idx_vec);\n      |                            ^\n[REDACTED]/tmpfin4qwul.cpp:45:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i idx_32hi = _mm_cvtepi16_epi32(_mm_shuffle_epi32(idx_vec, 0xE));\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3152icj5.cpp:45:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i idx_lo = _mm_cvtepi16_epi32(idx_vec);\n      |                          ^\n[REDACTED]/tmp3152icj5.cpp:46:26: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i idx_hi = _mm_cvtepi16_epi32(_mm_srli_si128(idx_vec, 8));\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_dcp93ri.cpp:53:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   53 |         if (!_mm_testz_si128(negative_mask, negative_mask)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9uuds9bq.cpp:51:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   51 |         if (!_mm_testz_si128(is_negative, is_negative)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsirt5jys.cpp:51:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   51 |         if (!_mm_testz_si128(sign_bits, sign_bits)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprfgxufe4.cpp:53:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   53 |         if (!_mm_testz_si128(negative_mask, negative_mask)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkm0e7pvu.cpp:51:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_zero_simd' that is compiled without support for 'sse4.1'\n   51 |         if (!_mm_testz_si128(sign_bits, sign_bits)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfmizecqu.cpp:54:26: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   54 |     sum += _mm_cvtsd_f64(_mm_hadd_pd(sum_vec, sum_vec));\n      |                          ^\n[REDACTED]/tmpfmizecqu.cpp:55:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   55 |     count += _mm_cvtsd_f64(_mm_hadd_pd(count_vec, count_vec));\n      |                            ^\n[REDACTED]/tmpfmizecqu.cpp:76:30: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   76 |     mad_sum += _mm_cvtsd_f64(_mm_hadd_pd(mad_vec, mad_vec));\n      |                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp27uuji1j.cpp:53:26: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   53 |     sum += _mm_cvtsd_f64(_mm_hadd_pd(sum_vec, sum_vec));\n      |                          ^\n[REDACTED]/tmp27uuji1j.cpp:76:30: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   76 |     mad_sum += _mm_cvtsd_f64(_mm_hadd_pd(mad_sum_vec, mad_sum_vec));\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgd8crrys.cpp:54:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   54 |     sum_vec = _mm_hadd_pd(sum_vec, sum_vec);\n      |               ^\n[REDACTED]/tmpgd8crrys.cpp:56:17: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   56 |     count_vec = _mm_hadd_pd(count_vec, count_vec);\n      |                 ^\n[REDACTED]/tmpgd8crrys.cpp:78:19: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'mean_absolute_deviation_simd' that is compiled without support for 'sse3'\n   78 |     mad_sum_vec = _mm_hadd_pd(mad_sum_vec, mad_sum_vec);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpew6fi245.cpp:57:43: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   57 |             __m128i mul = _mm_mullo_epi16(_mm_shuffle_epi32(v, j), p);\n      |                                           ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmpew6fi245.cpp:58:17: error: argument to '__builtin_ia32_pblendw128' must be a constant integer\n   58 |             p = _mm_blend_epi16(p, mul, 1 << j);\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:522:13: note: expanded from macro '_mm_blend_epi16'\n  522 |   ((__m128i)__builtin_ia32_pblendw128((__v8hi)(__m128i)(V1),                   \\\n      |             ^\n  523 |                                       (__v8hi)(__m128i)(V2), (int)(M)))\n      |                                                              ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb7_e4hhc.cpp:54:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   54 |         current_max = _mm_max_epi32(current_max, nums);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppn7rp0oi.cpp:56:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i rolling_max = _mm_max_epi32(prev_max, current);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphbgpu0li.cpp:67:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   67 |         max_vector = _mm_max_epi32(max_vector, current_chunk);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmap2atgw.cpp:61:31: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i rolling_max = _mm_max_epi32(prev_max, curr_vals);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6l5ryqwg.cpp:66:34: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128i new_max_vector = _mm_max_epi32(max_vector, current_chunk);\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_69_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptjyrsykg.cpp:36:22: error: use of undeclared identifier '_mm_rem_epi64'\n   36 |         vremainder = _mm_rem_epi64(vn, vdivisor);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj63disvu.cpp:37:22: error: use of undeclared identifier '_mm_rem_epi64'\n   37 |         vremainder = _mm_rem_epi64(vn, vdivisor);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4waxsa4l.cpp:36:30: error: use of undeclared identifier '_mm_rem_epi64'\n   36 |         __m128i vremainder = _mm_rem_epi64(vn, vdivisor);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg4xbgwn2.cpp:36:30: error: use of undeclared identifier '_mm_rem_epu64'\n   36 |         __m128i vremainder = _mm_rem_epu64(vn, vdivisor);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf2x9k6_q.cpp:36:30: error: use of undeclared identifier '_mm_rem_epi64'\n   36 |         __m128i vremainder = _mm_rem_epi64(vn, vdivisor);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkem2n7zl.cpp:54:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i vquotient = _mm_div_epi32(vn, vfactor); // Approximation for division\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1o96646r.cpp:54:29: error: use of undeclared identifier '_mm_div_epi32'\n   54 |         __m128i vquotient = _mm_div_epi32(vn, vfactor, &vremainder);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdc1fr6nq.cpp:54:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i vquotient = _mm_div_epi32(vn, vfactor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmkkackxg.cpp:54:29: error: use of undeclared identifier '_mm_div_epi32'\n   54 |         __m128i vquotient = _mm_div_epi32(vn, vfactor, &vremainder);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpropugz0e.cpp:54:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |         __m128i vquotient = _mm_div_epi32(vn, vfactor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_75_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqvfu2orp.cpp:37:20: error: use of undeclared identifier '_mm_setr_epi64x'\n   37 |     __m128i base = _mm_setr_epi64x(5, 7); // Start testing from 5 and 7\n      |                    ^\n[REDACTED]/tmpqvfu2orp.cpp:42:24: error: use of undeclared identifier '_mm_rem_epi64'\n   42 |         __m128i mod1 = _mm_rem_epi64(num, _mm_unpacklo_epi64(divisors, zero));\n      |                        ^\n[REDACTED]/tmpqvfu2orp.cpp:43:24: error: use of undeclared identifier '_mm_rem_epi64'\n   43 |         __m128i mod2 = _mm_rem_epi64(num, _mm_unpackhi_epi64(divisors, zero));\n      |                        ^\n3 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp81ckipb4.cpp:46:24: error: use of undeclared identifier '_mm_rem_epi64'\n   46 |         __m128i mod1 = _mm_rem_epi64(vn, vi);\n      |                        ^\n[REDACTED]/tmp81ckipb4.cpp:47:24: error: use of undeclared identifier '_mm_rem_epi64'\n   47 |         __m128i mod2 = _mm_rem_epi64(vn, _mm_add_epi64(vi, vtwo));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpovfunovw.cpp:48:24: error: use of undeclared identifier '_mm_rem_epi64'\n   48 |         __m128i mod1 = _mm_rem_epi64(num, divisor1);\n      |                        ^\n[REDACTED]/tmpovfunovw.cpp:49:24: error: use of undeclared identifier '_mm_rem_epi64'\n   49 |         __m128i mod2 = _mm_rem_epi64(num, divisor2);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp972g_2te.cpp:46:24: error: use of undeclared identifier '_mm_rem_epi64'\n   46 |         __m128i mod1 = _mm_rem_epi64(vn, vi);\n      |                        ^\n[REDACTED]/tmp972g_2te.cpp:47:24: error: use of undeclared identifier '_mm_rem_epi64'\n   47 |         __m128i mod2 = _mm_rem_epi64(vn, _mm_add_epi64(vi, vtwo));\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn56eivy3.cpp:48:25: error: use of undeclared identifier '_mm_rem_epi64'\n   48 |         __m128i mod_i = _mm_rem_epi64(vn, vi);\n      |                         ^\n[REDACTED]/tmpn56eivy3.cpp:49:34: error: use of undeclared identifier '_mm_rem_epi64'\n   49 |         __m128i mod_i_plus_two = _mm_rem_epi64(vn, vi_plus_two);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy5ueujkd.cpp:79:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   79 |         __m128i v_result = _mm_blendv_epi8(v_chars, v_toggled, v_is_alpha);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfejz8mf3.cpp:78:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   78 |         __m128i finalChunk = _mm_blendv_epi8(chunk, toggleCase, alphaMask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpepigpzrg.cpp:82:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   82 |         __m128i v_result = _mm_blendv_epi8(v_chars, v_toggle_case, v_is_letter);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9etoz9ev.cpp:87:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   87 |         __m128i v_result = _mm_blendv_epi8(v_chars, v_toggled, v_is_alpha);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4b51oa4w.cpp:88:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   88 |         __m128i v_flipped = _mm_blendv_epi8(v_flipped_upper, v_flipped_lower, v_is_lower);\n      |                             ^\n[REDACTED]/tmp4b51oa4w.cpp:91:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solve_simd' that is compiled without support for 'sse4.1'\n   91 |         v_chars = _mm_blendv_epi8(v_chars, v_flipped, v_is_letter);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdigumeh5.cpp:67:29: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |             l[indices[j]] = _mm_extract_epi32(sorted_vals, j - i);\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpximdlb6d.cpp:66:41: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   66 |                     result[i + j * 3] = _mm_extract_epi32(sorted_vals, j);\n      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdiu59uu_.cpp:75:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   75 |         __m128i blended = _mm_blendv_epi8(original, sorted, is_div_by_3);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3ed2nx2z.cpp:72:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   72 |                 values = _mm_blendv_epi8(values, _mm_set1_epi32(sorted_value), mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_79_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_80_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3m5x89nl.cpp:74:15: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'sort_even_simd' that is compiled without support for 'sse4.1'\n   74 |         vec = _mm_blendv_ps(vec, sorted_evens, _mm_castsi128_ps(mask));\n      |               ^\n1 error generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_83_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbz4awjcf.cpp:46:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'pairs_sum_to_zero_simd' that is compiled without support for 'sse4.1'\n   46 |             if (!_mm_test_all_zeros(sum, sum)) {\n      |                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp17eh5p0w.cpp:58:28: error: use of undeclared identifier '_mm_div_epu64'\n   58 |         __m128i quotient = _mm_div_epu64(vx, vbase, &remainder);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr5l0d9n9.cpp:59:26: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'change_base_simd' that is compiled without support for 'ssse3'\n   59 |         __m128i result = _mm_shuffle_epi8(vdigits, mask);\n      |                          ^\n[REDACTED]/tmpr5l0d9n9.cpp:61:27: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   61 |         buffer[--index] = _mm_extract_epi8(result, 0);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa1h43tr6.cpp:56:22: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   56 |         vremainder = _mm_rem_epi32(vx, vbase);\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv8s_pw6a.cpp:56:22: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   56 |         vremainder = _mm_rem_epi32(vremainder, vbase); // Compute x % base\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl9e44beb.cpp:58:28: error: use of undeclared identifier '_mm_div_epu64'\n   58 |         __m128i quotient = _mm_div_epu64(vx, vbase, &remainder);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg3x9hsip.cpp:45:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   45 |         back = _mm_shuffle_epi8(back, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgl40b8z8.cpp:49:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   49 |         back = _mm_shuffle_epi8(back, mask);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy1brr6z7.cpp:51:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   51 |         back = _mm_shuffle_epi8(back, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6bj2khfp.cpp:55:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   55 |         back = _mm_shuffle_epi8(back, mask);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpub6mfl_i.cpp:51:16: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   51 |         back = _mm_shuffle_epi8(back, _mm_setr_epi8(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0));\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7c0edh4o.cpp:38:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   38 |         if (!_mm_testz_si128(cmp, cmp)) { // Check if any element is greater than threshold\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj2_kqmr4.cpp:38:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   38 |         if (!_mm_testz_si128(cmp, cmp)) { // Check if any element is greater than threshold\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphsmkcsqi.cpp:38:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   38 |         if (!_mm_testz_si128(cmp, cmp)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg2orakro.cpp:38:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   38 |         if (!_mm_testz_si128(cmp, cmp)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnmtelfn_.cpp:65:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   65 |         if (!_mm_testz_si128(negativeCheck, negativeCheck)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_s7bh67f.cpp:67:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   67 |         if (!_mm_testz_si128(negative_mask, negative_mask)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsgdqthm1.cpp:45:23: error: use of undeclared identifier '_mm_setzero_si16'\n   45 |     __m128i balance = _mm_setzero_si16();\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqyy_oa_p.cpp:67:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   67 |         if (!_mm_testz_si128(negative_check, negative_check)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpptiw6s33.cpp:65:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   65 |         if (!_mm_testz_si128(negative_mask, negative_mask)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmr35akiw.cpp:66:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   66 |         if (!_mm_testz_si128(negative_check, negative_check)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpor3fvenl.cpp:66:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   66 |         if (!_mm_testz_si128(negative_check, negative_check)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_91_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2ks_qtyd.cpp:42:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:43:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp5 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp6 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(5)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp7 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(6)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp8 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(7)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:50:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i cmp9 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(8)));\n      |                                              ^\n[REDACTED]/tmp2ks_qtyd.cpp:51:47: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i cmp10 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(9)));\n      |                                               ^\n10 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdhif47ui.cpp:42:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:43:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp5 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp6 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(5)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp7 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(6)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp8 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(7)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:50:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i cmp9 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(8)));\n      |                                              ^\n[REDACTED]/tmpdhif47ui.cpp:51:47: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i cmp10 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(9)));\n      |                                               ^\n10 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7gqsxwoh.cpp:42:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:43:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp5 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp6 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(5)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp7 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(6)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp8 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(7)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:50:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i cmp9 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(8)));\n      |                                              ^\n[REDACTED]/tmp7gqsxwoh.cpp:51:47: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i cmp10 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(9)));\n      |                                               ^\n10 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyvcuvb43.cpp:42:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:43:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp5 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp6 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(5)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp7 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(6)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp8 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(7)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:50:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   50 |         __m128i cmp9 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(8)));\n      |                                              ^\n[REDACTED]/tmpyvcuvb43.cpp:51:47: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'ssse3'\n   51 |         __m128i cmp10 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(9)));\n      |                                               ^\n10 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz2iey0mu.cpp:50:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   50 |         __m128i mod = _mm_rem_epi32(values, two);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2o42tefz.cpp:53:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   53 |         __m128i masked_values = _mm_blendv_epi8(_mm_set1_epi32(0x7FFFFFFF), values, is_even);\n      |                                 ^\n[REDACTED]/tmp2o42tefz.cpp:57:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   57 |         min_val_vec = _mm_blendv_epi8(min_val_vec, masked_values, cmp);\n      |                       ^\n[REDACTED]/tmp2o42tefz.cpp:61:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'pluck_simd' that is compiled without support for 'sse4.1'\n   61 |         min_idx_vec = _mm_blendv_epi8(min_idx_vec, indices, cmp);\n      |                       ^\n3 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9h7zbvia.cpp:54:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |             int val = _mm_extract_epi32(v_vals, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm61yo17u.cpp:54:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   54 |             int val = _mm_extract_epi32(v_vals, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8u7ac36i.cpp:55:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |             int val = _mm_extract_epi32(v_vals, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3el684j5.cpp:56:25: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |             int index = _mm_extract_epi32(v_indices, j);\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkb2tergi.cpp:56:23: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   56 |             int idx = _mm_extract_epi32(v_indices, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqb115wzl.cpp:62:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   62 |     vsum = _mm_hadd_epi32(vsum, vsum);\n      |            ^\n[REDACTED]/tmpqb115wzl.cpp:63:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   63 |     vsum = _mm_hadd_epi32(vsum, vsum);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_98_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy2on5nfv.cpp:44:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i cmp = _mm_cmpeq_epi64(vpower, vx);\n      |                       ^\n[REDACTED]/tmpy2on5nfv.cpp:48:26: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   48 |         __m128i cmp_gt = _mm_cmpgt_epi64(vpower, vx);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpburo3r27.cpp:44:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i cmp = _mm_cmpeq_epi64(vpower, vx);\n      |                       ^\n[REDACTED]/tmpburo3r27.cpp:48:26: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   48 |         __m128i cmp_gt = _mm_cmpgt_epi64(vpower, vx);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg_oea2ay.cpp:43:16: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   43 |         vcmp = _mm_cmpeq_epi64(vpow, vx); // Compare for equality\n      |                ^\n[REDACTED]/tmpg_oea2ay.cpp:51:33: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   51 |         __m128i overflow_mask = _mm_cmpgt_epi64(vpow, vx);\n      |                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqb5g3rb_.cpp:43:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i cmp = _mm_cmpeq_epi64(vpower, vx);\n      |                       ^\n[REDACTED]/tmpqb5g3rb_.cpp:47:31: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   47 |         if (_mm_movemask_epi8(_mm_cmpgt_epi64(vpower, vx))) {\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_o2lbmz6.cpp:43:16: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   43 |         vcmp = _mm_cmpeq_epi64(vpow, vx); // Compare for equality\n      |                ^\n[REDACTED]/tmp_o2lbmz6.cpp:51:27: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   51 |         __m128i vcmp_gt = _mm_cmpgt_epi64(vpow, vx);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnzxfkowh.cpp:53:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i prime_check = _mm_shuffle_epi8(prime_mask, indices);\n      |                               ^\n[REDACTED]/tmpnzxfkowh.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(_mm_movemask_epi8(prime_check));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoxtxxv1z.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmpoxtxxv1z.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmpoxtxxv1z.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmpoxtxxv1z.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmpoxtxxv1z.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp5 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmpoxtxxv1z.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp6 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(5)));\n      |                                              ^\n6 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp2djvj4e.cpp:53:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i prime_check = _mm_shuffle_epi8(prime_mask, indices);\n      |                               ^\n[REDACTED]/tmpp2djvj4e.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'hex_key_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(_mm_movemask_epi8(prime_check));\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi95o16vs.cpp:44:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i cmp1 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(0)));\n      |                                              ^\n[REDACTED]/tmpi95o16vs.cpp:45:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i cmp2 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(1)));\n      |                                              ^\n[REDACTED]/tmpi95o16vs.cpp:46:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   46 |         __m128i cmp3 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(2)));\n      |                                              ^\n[REDACTED]/tmpi95o16vs.cpp:47:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i cmp4 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(3)));\n      |                                              ^\n[REDACTED]/tmpi95o16vs.cpp:48:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i cmp5 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(4)));\n      |                                              ^\n[REDACTED]/tmpi95o16vs.cpp:49:46: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'hex_key_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i cmp6 = _mm_cmpeq_epi8(input, _mm_shuffle_epi8(prime_chars, _mm_set1_epi8(5)));\n      |                                              ^\n6 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnrvc625_.cpp:41:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   41 |         __m128i cmp1 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 15));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpnrvc625_.cpp:42:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         __m128i cmp2 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 14));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpnrvc625_.cpp:46:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   46 |         if (!_mm_testz_si128(or_result, or_result)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptj2popig.cpp:41:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   41 |         __m128i cmp1 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 15));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmptj2popig.cpp:42:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         __m128i cmp2 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 14));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmptj2popig.cpp:48:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   48 |         if (!_mm_testz_si128(cmp_or, cmp_or)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvhe7cgqr.cpp:41:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   41 |         __m128i cmp1 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 15));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpvhe7cgqr.cpp:42:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         __m128i cmp2 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 14));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpvhe7cgqr.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_testz_si128(or_result, or_result)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptffmrkxb.cpp:41:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   41 |         __m128i cmp1 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 15));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmptffmrkxb.cpp:42:51: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         __m128i cmp2 = _mm_cmpeq_epi8(curr_chunk, _mm_alignr_epi8(curr_chunk, prev_chunk, 14));\n      |                                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmptffmrkxb.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_testz_si128(or_result, or_result)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwvrruvdh.cpp:41:46: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   41 |         __m128i cmp1 = _mm_cmpeq_epi8(chunk, _mm_alignr_epi8(chunk, prev_chunk, 15));\n      |                                              ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpwvrruvdh.cpp:42:46: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         __m128i cmp2 = _mm_cmpeq_epi8(chunk, _mm_alignr_epi8(chunk, prev_chunk, 14));\n      |                                              ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpwvrruvdh.cpp:48:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   48 |         if (!_mm_testz_si128(cmp, cmp)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5fb9hfk8.cpp:44:27: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |     __m128i mod_results = _mm_rem_epi32(vlen, divisors);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3lu3cu3o.cpp:55:27: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   55 |             mod_results = _mm_insert_epi32(mod_results, remainder, i);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy74dw6gf.cpp:44:27: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   44 |     __m128i mod_results = _mm_rem_epi32(vlen, divisors);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxuhf0nym.cpp:43:23: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   43 |     __m128i results = _mm_div_epu32(vlen, divisors);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpxuhf0nym.cpp:46:26: error: use of undeclared identifier '_mm_rem_epu32'\n   46 |     __m128i remainders = _mm_rem_epu32(vlen, divisors);\n      |                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp926w5rl7.cpp:43:9: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'prime_length_simd' that is compiled without support for 'sse4.1'\n   43 |     if (_mm_test_all_zeros(mod_two, vec_one)) {\n      |         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxxqsv3sr.cpp:49:30: error: use of undeclared identifier '_mm_rem_epu8'\n   49 |         __m128i vremainder = _mm_rem_epu8(vdigits, vmod);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpscs2uefp.cpp:71:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   71 |         __m128i output = _mm_blendv_epi8(input, rotated, is_alpha);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp50y6_d_d.cpp:69:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   69 |         __m128i output = _mm_blendv_epi8(input, shifted, is_alpha);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb_onwyx0.cpp:66:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128i output = _mm_blendv_epi8(input, shifted_lower, is_lower);\n      |                          ^\n[REDACTED]/tmpb_onwyx0.cpp:67:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   67 |         output = _mm_blendv_epi8(output, shifted_upper, is_upper);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdtlazvl0.cpp:63:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   63 |         shifted = _mm_blendv_epi8(shifted, wrapped_lower, lower_overflow);\n      |                   ^\n[REDACTED]/tmpdtlazvl0.cpp:67:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   67 |         shifted = _mm_blendv_epi8(shifted, wrapped_upper, upper_overflow);\n      |                   ^\n[REDACTED]/tmpdtlazvl0.cpp:71:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encrypt_simd' that is compiled without support for 'sse4.1'\n   71 |         shifted = _mm_blendv_epi8(input, shifted, mask);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiinrffkl.cpp:63:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i final_chunk = _mm_blendv_epi8(swapped_case, vowel_replacement, is_vowel);\n      |                               ^\n1 error generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2imqki3e.cpp:63:61: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i replacement = _mm_blendv_epi8(case_swapped, _mm_blendv_epi8(replace_lower, replace_upper, is_vowel_upper), replace_mask);\n      |                                                             ^\n[REDACTED]/tmp2imqki3e.cpp:63:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i replacement = _mm_blendv_epi8(case_swapped, _mm_blendv_epi8(replace_lower, replace_upper, is_vowel_upper), replace_mask);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpekkecj5a.cpp:66:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128i replaced = _mm_blendv_epi8(swapped_case, replace_lower, is_vowel_lower); // Replace lowercase vowels\n      |                            ^\n[REDACTED]/tmpekkecj5a.cpp:67:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   67 |         replaced = _mm_blendv_epi8(replaced, replace_upper, is_vowel_upper); // Replace uppercase vowels\n      |                    ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpib52rrkx.cpp:61:61: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i replacement = _mm_blendv_epi8(swapped_case, _mm_blendv_epi8(replace_lower, replace_upper, is_vowel_upper), is_vowel);\n      |                                                             ^\n[REDACTED]/tmpib52rrkx.cpp:61:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i replacement = _mm_blendv_epi8(swapped_case, _mm_blendv_epi8(replace_lower, replace_upper, is_vowel_upper), is_vowel);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqm1gwx6t.cpp:61:34: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   61 |         __m128i replaced_lower = _mm_blendv_epi8(swapped_case, replace_lower, is_vowel_lower);\n      |                                  ^\n[REDACTED]/tmpqm1gwx6t.cpp:65:34: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   65 |         __m128i replaced_upper = _mm_blendv_epi8(replaced_lower, replace_upper, is_vowel_upper);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf0_y33d_.cpp:72:27: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   72 |             __m128i mod = _mm_rem_epi32(vec, divisor); // Compute modulo\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpf0_y33d_.cpp:73:37: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   73 |             __m128i not_divisible = _mm_cmpneq_epi32(mod, _mm_setzero_si128()); // Check non-zero remainder\n      |                                     ^~~~~~~~~~~~~~~~\n      |                                     _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi_39h6jd.cpp:74:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   74 |         if (_mm_testz_si128(val, mask)) { // Check if p is prime\n      |             ^\n[REDACTED]/tmpi_39h6jd.cpp:90:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   90 |         if (_mm_testz_si128(val, mask)) {\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpighq8pue.cpp:72:27: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   72 |             __m128i mod = _mm_rem_epi32(vec, divisor); // Compute modulo\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpighq8pue.cpp:73:37: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   73 |             __m128i not_divisible = _mm_cmpneq_epi32(mod, _mm_setzero_si128()); // Check non-zero remainder\n      |                                     ^~~~~~~~~~~~~~~~\n      |                                     _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprcs52cc6.cpp:64:14: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   64 |         if (!_mm_extract_epi16(sieve[p / 16], p % 16)) { // Check if p is prime\n      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n[REDACTED]/tmprcs52cc6.cpp:78:14: error: argument to '__builtin_ia32_vec_ext_v8hi' must be a constant integer\n   78 |         if (!_mm_extract_epi16(sieve[idx], bit)) {\n      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4161:25: note: expanded from macro '_mm_extract_epi16'\n 4161 |   ((int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a),      \\\n      |                         ^\n 4162 |                                                     (int)(imm)))\n      |                                                     ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu8o_27at.cpp:57:52: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   57 |         __m128i is_vowel_0 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(0)));\n      |                                                    ^\n[REDACTED]/tmpu8o_27at.cpp:58:52: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   58 |         __m128i is_vowel_1 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(1)));\n      |                                                    ^\n[REDACTED]/tmpu8o_27at.cpp:59:52: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   59 |         __m128i is_vowel_2 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(2)));\n      |                                                    ^\n[REDACTED]/tmpu8o_27at.cpp:60:52: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   60 |         __m128i is_vowel_3 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(3)));\n      |                                                    ^\n[REDACTED]/tmpu8o_27at.cpp:61:52: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   61 |         __m128i is_vowel_4 = _mm_cmpeq_epi8(chunk, _mm_shuffle_epi8(vowels, _mm_set1_epi8(4)));\n      |                                                    ^\n5 errors generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_109_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbr_popd6.cpp:43:51: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i levels = _mm_add_epi32(current_v, _mm_mullo_epi32(increment, _mm_setr_epi32(0, 1, 2, 3)));\n      |                                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe_4965yq.cpp:59:11: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   59 |     sum = _mm_div_epi64(sum, two);\n      |           ^~~~~~~~~~~~~\n      |           _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpe_4965yq.cpp:66:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   66 |     __m128i avg = _mm_div_epi64(sum, count);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz16wxdoh.cpp:55:23: error: use of undeclared identifier '_mm_mul_epi64'\n   55 |     __m128i v_sum_m = _mm_mul_epi64(v_m, _mm_add_epi64(v_m, v_one));\n      |                       ^\n[REDACTED]/tmpz16wxdoh.cpp:56:31: error: use of undeclared identifier '_mm_mul_epi64'\n   56 |     __m128i v_sum_n_minus_1 = _mm_mul_epi64(v_n_minus_1, _mm_add_epi64(v_n_minus_1, v_one));\n      |                               ^\n[REDACTED]/tmpz16wxdoh.cpp:62:21: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   62 |     __m128i v_avg = _mm_div_epi64(v_sum, v_count);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpz16wxdoh.cpp:67:16: error: no member named 'bitset' in namespace 'std'\n   67 |     ss << std::bitset<64>(avg);\n      |           ~~~~~^\n4 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpszud6vsm.cpp:56:21: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   56 |     __m128i sum_n = _mm_div_epi64(n_term, two);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpszud6vsm.cpp:57:21: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   57 |     __m128i sum_m = _mm_div_epi64(m_term, two);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpszud6vsm.cpp:65:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   65 |     __m128i avg = _mm_div_epi64(total_sum, count);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeqetc1z5.cpp:60:19: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   60 |     __m128i avg = _mm_div_epi64(sum, count);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpeqetc1z5.cpp:68:16: error: no member named 'bitset' in namespace 'std'\n   68 |     ss << std::bitset<64>(result);\n      |           ~~~~~^\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1cefu4hh.cpp:57:21: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   57 |     __m128i v_avg = _mm_div_epi64(v_sum, v_count);\n      |                     ^~~~~~~~~~~~~\n      |                     _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmp1cefu4hh.cpp:65:16: error: no member named 'bitset' in namespace 'std'\n   65 |     ss << std::bitset<64>(avg).to_string();\n      |           ~~~~~^\n[REDACTED]/tmp1cefu4hh.cpp:65:31: error: member reference base type 'int64_t' (aka 'long') is not a structure or union\n   65 |     ss << std::bitset<64>(avg).to_string();\n      |                          ~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpma5i3j1d.cpp:72:18: error: use of undeclared identifier '_mm_mod_epi32'\n   72 |         values = _mm_mod_epi32(values, mod_val);\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy8bn7jp4.cpp:61:34: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   61 |             __m128i new_values = _mm_mullo_epi32(values, multiplier); // Factorial step\n      |                                  ^\n[REDACTED]/tmpy8bn7jp4.cpp:63:22: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   63 |             values = _mm_blendv_epi8(sum_values, new_values, is_even); // Blend based on even/odd\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1bw50337.cpp:69:48: error: use of undeclared identifier '_mm_mod_epi32'\n   69 |             results = _mm_blendv_epi8(results, _mm_mod_epi32(results, mod_mask), is_even);\n      |                                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptrar4q67.cpp:61:26: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   61 |             factorials = _mm_mullo_epi32(factorials, j_vec); // Multiply factorials by j\n      |                          ^\n[REDACTED]/tmptrar4q67.cpp:67:16: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   67 |         sums = _mm_mullo_epi32(sums, indices); // Sum = i * (i + 1)\n      |                ^\n[REDACTED]/tmptrar4q67.cpp:75:19: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   75 |         results = _mm_blendv_epi8(sums, factorials, mask);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfcm01oxp.cpp:66:27: error: use of undeclared identifier '_mm_rem_epu32'\n   66 |             v_factorial = _mm_rem_epu32(v_factorial, v_mod); // Custom modulo implementation\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp27xxaf2u.cpp:57:13: error: unknown type name '__m1128i'; did you mean '__m128i'?\n   57 |             __m1128i v_mod = _mm_rem_epi32(v_num, v_two);\n      |             ^~~~~~~~\n      |             __m128i\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:20:19: note: '__m128i' declared here\n   20 | typedef long long __m128i __attribute__((__vector_size__(16), __aligned__(16)));\n      |                   ^\n[REDACTED]/tmp27xxaf2u.cpp:57:30: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |             __m1128i v_mod = _mm_rem_epi32(v_num, v_two);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpil9m7_wk.cpp:56:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   56 |             __m128i num = _mm_shuffle_epi32(vec, _MM_SHUFFLE(j, j, j, j)); // Isolate one integer\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9_d1zn31.cpp:60:27: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   60 |             __m128i num = _mm_shuffle_epi32(abs_vec, _MM_SHUFFLE(j, j, j, j)); // Isolate one integer\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_ieuo7lj.cpp:52:23: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   52 |         current_min = _mm_min_epi64(current_plus_vec, vec);\n      |                       ^\n[REDACTED]/tmp_ieuo7lj.cpp:55:22: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   55 |         global_min = _mm_min_epi64(global_min, current_min);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr205o4s9.cpp:53:22: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   53 |         global_min = _mm_min_epi64(global_min, current_min);\n      |                      ^\n[REDACTED]/tmpr205o4s9.cpp:57:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   57 |         __m128i mask = _mm_cmpgt_epi64(zero, current_min);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdergywpb.cpp:52:23: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   52 |         current_min = _mm_min_epi64(zero, temp_sum);\n      |                       ^\n[REDACTED]/tmpdergywpb.cpp:55:22: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   55 |         global_min = _mm_min_epi64(global_min, current_min);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_pw78yet.cpp:53:22: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   53 |         global_min = _mm_min_epi64(global_min, current_min);\n      |                      ^\n[REDACTED]/tmp_pw78yet.cpp:57:23: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   57 |         __m128i cmp = _mm_cmpgt_epi64(current_min, zero);\n      |                       ^\n[REDACTED]/tmp_pw78yet.cpp:58:23: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   58 |         current_min = _mm_blendv_epi8(current_min, zero, cmp);\n      |                       ^\n3 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyj0w95gk.cpp:48:16: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   48 |         vmin = _mm_min_epi64(vmin, vcurrent);\n      |                ^\n[REDACTED]/tmpyj0w95gk.cpp:49:23: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   49 |         vglobal_min = _mm_min_epi64(vglobal_min, vmin);\n      |                       ^\n[REDACTED]/tmpyj0w95gk.cpp:53:24: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.2'\n   53 |         __m128i vcmp = _mm_cmpgt_epi64(vcurrent, vzero);\n      |                        ^\n[REDACTED]/tmpyj0w95gk.cpp:54:20: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'sse4.1'\n   54 |         vcurrent = _mm_blendv_epi8(vcurrent, vzero, vcmp);\n      |                    ^\n4 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv2mfziy8.cpp:57:27: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   57 |         __m128i sum_vec = _mm_hadd_epi16(filtered_values, filtered_values);\n      |                           ^\n[REDACTED]/tmpv2mfziy8.cpp:58:19: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   58 |         sum_vec = _mm_hadd_epi16(sum_vec, sum_vec);\n      |                   ^\n2 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpeawi48l8.cpp:41:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfl2lba5j.cpp:41:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpim14pp9l.cpp:41:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmponbb20sz.cpp:41:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg7w5l7e3.cpp:41:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf8gp7wds.cpp:47:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'sse4.1'\n   47 |         if (!_mm_testz_si128(cmp, cmp)) {\n      |              ^\n[REDACTED]/tmpf8gp7wds.cpp:52:27: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   52 |         __m128i shifted = _mm_alignr_epi8(next, current, 4); // Shift right by one element\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpf8gp7wds.cpp:54:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'sse4.1'\n   54 |         if (!_mm_testz_si128(eq, eq)) {\n      |              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi7wpw6fl.cpp:49:14: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'sse4.1'\n   49 |         if (!_mm_testz_si128(cmp_sorted, cmp_sorted)) {\n      |              ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6educ13e.cpp:57:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i sign_values = _mm_blendv_epi8(neg_one, one, signs);\n      |                               ^\n[REDACTED]/tmp6educ13e.cpp:60:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   60 |         __m128i magnitudes = _mm_abs_epi32(vec);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcfg2i5_a.cpp:57:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   57 |         signs = _mm_mullo_epi32(signs, sign_vec);\n      |                 ^\n[REDACTED]/tmpcfg2i5_a.cpp:60:27: error: always_inline function '_mm_sign_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   60 |         __m128i abs_vec = _mm_sign_epi32(vec, vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprpsp_xud.cpp:59:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   59 |         signs = _mm_mullo_epi32(signs, sign_vec);\n      |                 ^\n[REDACTED]/tmprpsp_xud.cpp:62:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   62 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxkh_2z3h.cpp:62:17: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   62 |         signs = _mm_mullo_epi32(signs, current_signs);\n      |                 ^\n[REDACTED]/tmpxkh_2z3h.cpp:65:30: error: always_inline function '_mm_sign_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   65 |         __m128i abs_values = _mm_sign_epi32(values, values);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsvxruk03.cpp:52:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'ssse3'\n   52 |         __m128i abs_vals = _mm_abs_epi32(vec);\n      |                            ^\n[REDACTED]/tmpsvxruk03.cpp:63:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   63 |         sign_product = _mm_mullo_epi32(sign_product, signs);\n      |                        ^\n[REDACTED]/tmpsvxruk03.cpp:76:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   76 |             sign_product = _mm_mullo_epi32(sign_product, ones);\n      |                            ^\n[REDACTED]/tmpsvxruk03.cpp:78:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'prod_signs_simd' that is compiled without support for 'sse4.1'\n   78 |             sign_product = _mm_mullo_epi32(sign_product, neg_ones);\n      |                            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5an1r0x7.cpp:96:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   96 |                         min_val = _mm_min_epi32(min_val, val);\n      |                                   ^\n[REDACTED]/tmp5an1r0x7.cpp:137:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  137 |                 min_val = _mm_min_epi32(min_val, val);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps2j5c0cl.cpp:89:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   89 |                     current_min = _mm_min_epi32(current_min, top);\n      |                                   ^\n[REDACTED]/tmps2j5c0cl.cpp:93:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   93 |                     current_min = _mm_min_epi32(current_min, bottom);\n      |                                   ^\n[REDACTED]/tmps2j5c0cl.cpp:97:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   97 |                     current_min = _mm_min_epi32(current_min, left);\n      |                                   ^\n[REDACTED]/tmps2j5c0cl.cpp:101:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  101 |                     current_min = _mm_min_epi32(current_min, right);\n      |                                   ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt4n879ky.cpp:89:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   89 |                     current_min = _mm_min_epi32(current_min, top);\n      |                                   ^\n[REDACTED]/tmpt4n879ky.cpp:93:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   93 |                     current_min = _mm_min_epi32(current_min, bottom);\n      |                                   ^\n[REDACTED]/tmpt4n879ky.cpp:97:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   97 |                     current_min = _mm_min_epi32(current_min, left);\n      |                                   ^\n[REDACTED]/tmpt4n879ky.cpp:101:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  101 |                     current_min = _mm_min_epi32(current_min, right);\n      |                                   ^\n4 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoqdacfmu.cpp:98:10: error: no member named 'function' in namespace 'std'\n   98 |     std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |     ~~~~~^\n[REDACTED]/tmpoqdacfmu.cpp:98:27: error: expected '(' for function-style cast or type construction\n   98 |     std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                        ~~~^\n[REDACTED]/tmpoqdacfmu.cpp:98:32: error: expected '(' for function-style cast or type construction\n   98 |     std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                             ~~~^\n[REDACTED]/tmpoqdacfmu.cpp:98:37: error: expected '(' for function-style cast or type construction\n   98 |     std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                  ~~~^\n[REDACTED]/tmpoqdacfmu.cpp:98:40: error: use of undeclared identifier 'dfs'\n   98 |     std::function<void(int, int, int)> dfs = [&](int x, int y, int step) {\n      |                                        ^\n[REDACTED]/tmpoqdacfmu.cpp:112:17: error: use of undeclared identifier 'dfs'\n  112 |                 dfs(nx, ny, step + 1);\n      |                 ^\n[REDACTED]/tmpoqdacfmu.cpp:120:13: error: use of undeclared identifier 'dfs'\n  120 |             dfs(i, j, 0);\n      |             ^\n7 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl6ejbemw.cpp:96:35: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n   96 |                         min_val = _mm_min_epi32(min_val, val);\n      |                                   ^\n[REDACTED]/tmpl6ejbemw.cpp:137:27: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'minPath_simd' that is compiled without support for 'sse4.1'\n  137 |                 min_val = _mm_min_epi32(min_val, val);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxzuaf9uq.cpp:55:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i selected_digits = _mm_blendv_epi8(_mm_set1_epi8(1), digits, mask);\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnbfk6snp.cpp:58:32: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i valid_digits = _mm_blendv_epi8(_mm_set1_epi8(1), digit_vec, mask);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwc42wl83.cpp:60:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i selected_digits = _mm_blendv_epi8(_mm_set1_epi8(1), digit_vec, mask);\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ekp05cg.cpp:55:35: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   55 |             __m128i valid_digit = _mm_blendv_epi8(zero, digit, is_odd);\n      |                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1a6f8xdu.cpp:41:58: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   41 |         __m128 v_cel = _mm_sub_ps(_mm_add_ps(v, v_ones), _mm_floor_ps(_mm_add_ps(v, v_ones)));\n      |                                                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp1a6f8xdu.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:73:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:73:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   73 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:74:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   74 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:74:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   74 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:75:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   75 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:75:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   75 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp1a6f8xdu.cpp:76:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   76 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp1a6f8xdu.cpp:76:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   76 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1gevq1n0.cpp:53:32: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |         largest_negative_vec = _mm_max_epi32(largest_negative_vec, negatives);\n      |                                ^\n[REDACTED]/tmp1gevq1n0.cpp:58:33: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   58 |         smallest_positive_vec = _mm_min_epi32(smallest_positive_vec, _mm_or_si128(positives, _mm_andnot_si128(mask_pos, _mm_set1_epi32(std::numeric_limits<int>::max()))));\n      |                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6uhgmmsj.cpp:59:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   59 |         largest_neg_vec = _mm_max_epi32(largest_neg_vec, negatives);\n      |                           ^\n[REDACTED]/tmp6uhgmmsj.cpp:62:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   62 |         smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, positives);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfrs3_s44.cpp:62:30: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   62 |         v_largest_negative = _mm_max_epi32(v_largest_negative, v_negatives);\n      |                              ^\n[REDACTED]/tmpfrs3_s44.cpp:66:31: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   66 |         v_smallest_positive = _mm_min_epi32(v_smallest_positive, v_positives);\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgz9xukpe.cpp:53:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |         neg_max = _mm_max_epi32(neg_max, neg_vals);\n      |                   ^\n[REDACTED]/tmpgz9xukpe.cpp:57:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   57 |         pos_min = _mm_min_epi32(pos_min, _mm_or_si128(pos_vals, _mm_andnot_si128(pos_mask, _mm_set1_epi32(std::numeric_limits<int>::max()))));\n      |                   ^\n[REDACTED]/tmpgz9xukpe.cpp:64:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   64 |             neg_max = _mm_max_epi32(neg_max, _mm_set1_epi32(val));\n      |                       ^\n[REDACTED]/tmpgz9xukpe.cpp:66:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   66 |             pos_min = _mm_min_epi32(pos_min, _mm_set1_epi32(val));\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcj1ix35v.cpp:55:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         largest_neg_vec = _mm_max_epi32(largest_neg_vec, combined_neg);\n      |                           ^\n[REDACTED]/tmpcj1ix35v.cpp:62:28: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   62 |         smallest_pos_vec = _mm_min_epi32(smallest_pos_vec, combined_pos);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx9co7f74.cpp:48:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |         __m128i mod3 = _mm_rem_epi32(idx, _mm_set1_epi32(3));\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpx9co7f74.cpp:49:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   49 |         __m128i mod4 = _mm_rem_epi32(idx, _mm_set1_epi32(4));\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpx9co7f74.cpp:52:43: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   52 |                                           _mm_cmpneq_epi32(mod3, _mm_setzero_si128()));\n      |                                           ^~~~~~~~~~~~~~~~\n      |                                           _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfp0gsq0o.cpp:56:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   56 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpfp0gsq0o.cpp:57:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   57 |         vec = _mm_blendv_epi8(vec, squared, mask3);\n      |               ^\n[REDACTED]/tmpfp0gsq0o.cpp:60:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmpfp0gsq0o.cpp:60:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n[REDACTED]/tmpfp0gsq0o.cpp:61:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   61 |         vec = _mm_blendv_epi8(vec, cubed, mask4);\n      |               ^\n5 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwaz4kxmy.cpp:55:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpwaz4kxmy.cpp:56:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   56 |         vec = _mm_blendv_epi8(vec, squared, mask3);\n      |               ^\n[REDACTED]/tmpwaz4kxmy.cpp:59:46: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i cubed = _mm_mullo_epi32(vec, _mm_mullo_epi32(vec, vec));\n      |                                              ^\n[REDACTED]/tmpwaz4kxmy.cpp:59:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i cubed = _mm_mullo_epi32(vec, _mm_mullo_epi32(vec, vec));\n      |                         ^\n[REDACTED]/tmpwaz4kxmy.cpp:60:15: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   60 |         vec = _mm_blendv_epi8(vec, cubed, mask4);\n      |               ^\n5 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3bbnohrw.cpp:50:30: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   50 |                 mask_mult3 = _mm_insert_epi32(mask_mult3, -1, j);\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmp3bbnohrw.cpp:52:35: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   52 |                 mask_mult4_not3 = _mm_insert_epi32(mask_mult4_not3, -1, j);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbdfmefsz.cpp:47:43: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   47 |         __m128i is_mod3 = _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod3), _mm_setzero_si128());\n      |                                           ^~~~~~~~~~~~~\n      |                                           _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpbdfmefsz.cpp:48:69: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   48 |         __m128i is_mod4 = _mm_andnot_si128(is_mod3, _mm_cmpeq_epi32(_mm_rem_epi32(idx, mod4), _mm_setzero_si128()));\n      |                                                                     ^~~~~~~~~~~~~\n      |                                                                     _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbkfo8kur.cpp:51:32: error: use of undeclared identifier '_mm_rem_epu32'\n   51 |         __m128i v_last_digit = _mm_rem_epu32(v_abs_nums, _mm_set1_epi32(10));\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpahra_g3d.cpp:50:32: error: use of undeclared identifier '_mm_rem_epu32'\n   50 |         __m128i v_last_digit = _mm_rem_epu32(v_abs_nums, _mm_set1_epi32(10));\n      |                                ^\n[REDACTED]/tmpahra_g3d.cpp:55:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   55 |             v_first_digit = _mm_div_epi32(v_first_digit, _mm_set1_epi32(10));\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxhrn_hzg.cpp:49:30: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   49 |         __m128i v_abs_nums = _mm_abs_epi32(v_nums);\n      |                              ^\n[REDACTED]/tmpxhrn_hzg.cpp:54:45: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   54 |             v_first_digit = _mm_cvtps_epi32(_mm_round_ps(_mm_cvtepi32_ps(v_first_digit), _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC));\n      |                                             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbdmhq78o.cpp:47:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i vAbsNums = _mm_abs_epi32(vNums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkpm11t8w.cpp:52:24: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'specialFilter_simd' that is compiled without support for 'ssse3'\n   52 |         __m128i vabs = _mm_abs_epi32(vnums);\n      |                        ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzi2q8yrc.cpp:80:36: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   80 |         _mm_store_si128(&a[i / 4], _mm_insert_epi32(_mm_load_si128(&a[i / 4]), value, i % 4));\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpzi2q8yrc.cpp:94:33: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   94 |                 __m128i v_mod = _mm_rem_epi32(v_sum, v_mod3);\n      |                                 ^~~~~~~~~~~~~\n      |                                 _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8nouz4te.cpp:93:44: error: no matching function for call to '_mm_set_epi64x'\n   93 |             counts = _mm_add_epi64(counts, _mm_set_epi64x(0, 0, 1));\n      |                                            ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 3 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmp8nouz4te.cpp:101:44: error: no matching function for call to '_mm_set_epi64x'\n  101 |             counts = _mm_add_epi64(counts, _mm_set_epi64x(0, 0, 0, 1));\n      |                                            ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmp8nouz4te.cpp:81:35: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   81 |             uint64_t count_mod2 = _mm_extract_epi64(counts, 2);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmp8nouz4te.cpp:89:35: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   89 |             uint64_t count_mod2 = _mm_extract_epi64(counts, 2);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqtv0fk8v.cpp:95:33: error: use of undeclared identifier '_mm_rem_epu32'\n   95 |                 __m128i v_mod = _mm_rem_epu32(v_sum, v_mod3);\n      |                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpunwuxnsz.cpp:81:35: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   81 |             uint64_t count_mod2 = _mm_extract_epi64(counts, 2);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmpunwuxnsz.cpp:89:35: error: argument value 2 is outside the valid range [0, 1] [-Wargument-outside-range]\n   89 |             uint64_t count_mod2 = _mm_extract_epi64(counts, 2);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmpunwuxnsz.cpp:93:64: warning: shift count >= width of type [-Wshift-count-overflow]\n   93 |             counts = _mm_add_epi64(counts, _mm_set_epi64x(0, 1 << 32));\n      |                                                                ^  ~~\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmsbvof3c.cpp:87:27: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]\n   87 |     __m128i v_mod_results[size / 4];\n      |                           ^~~~~~~~\n[REDACTED]/tmpmsbvof3c.cpp:87:27: note: read of non-const variable 'size' is not allowed in a constant expression\n[REDACTED]/tmpmsbvof3c.cpp:74:14: note: declared here\n   74 |     uint64_t size = (n + 3) & ~3; // Round up to multiple of 4 for SIMD alignment\n      |              ^\n[REDACTED]/tmpmsbvof3c.cpp:90:25: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   90 |         __m128i v_mod = _mm_rem_epi32(v_a, v_mod3); // Compute a[i] % 3\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmhofl7bp.cpp:42:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   42 |         __m128i vmod = _mm_rem_epi32(vn, vi); // Compute n % i for each lane\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxl63zu7c.cpp:43:24: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   43 |         __m128i vmod = _mm_rem_epi32(vn, vi); // Compute n % i\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp315cc6cd.cpp:42:26: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   42 |     __m128i vremainder = _mm_rem_epi32(vn, vdivisor); // Compute n % divisor for each\n      |                          ^~~~~~~~~~~~~\n      |                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpidjjtdyt.cpp:51:42: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i odd_mask = _mm_and_si128(_mm_rem_epi32(vec_int, one), positive_mask);\n      |                                          ^~~~~~~~~~~~~\n      |                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb8aq6xi5.cpp:51:42: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i odd_mask = _mm_and_si128(_mm_rem_epi32(vec_int, one), one);\n      |                                          ^~~~~~~~~~~~~\n      |                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl1l1f8ew.cpp:51:42: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i odd_mask = _mm_and_si128(_mm_rem_epi32(int_vec, one), positive_mask);\n      |                                          ^~~~~~~~~~~~~\n      |                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsitrmbch.cpp:51:42: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i odd_mask = _mm_and_si128(_mm_rem_epi32(vec_int, one), positive_mask);\n      |                                          ^~~~~~~~~~~~~\n      |                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpexkcvddd.cpp:51:42: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   51 |         __m128i odd_mask = _mm_and_si128(_mm_rem_epi32(vec_int, one), positive_mask);\n      |                                          ^~~~~~~~~~~~~\n      |                                          _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvqxtkug9.cpp:48:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n[REDACTED]/tmpvqxtkug9.cpp:52:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'compare_simd' that is compiled without support for 'sse4.1'\n   52 |         __m128i result_vec = _mm_blendv_epi8(abs_diff, zero, equal_mask);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnam95ap1.cpp:48:51: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i abs_diff = _mm_andnot_si128(mask, _mm_abs_epi32(diff));\n      |                                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "runtime failed: free(): invalid pointer\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpamgc_c_m.cpp:48:51: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i abs_diff = _mm_andnot_si128(mask, _mm_abs_epi32(diff));\n      |                                                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkr227rn5.cpp:48:51: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i abs_diff = _mm_andnot_si128(mask, _mm_abs_epi32(diff));\n      |                                                   ^\n1 error generated.\n"}

{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppt2yn2cs.cpp:36:41: error: use of undeclared identifier 'src_low'; did you mean 'src_vec'?\n   36 |         __m128i dst_low = _mm_and_si128(src_low, mask_low);\n      |                                         ^~~~~~~\n      |                                         src_vec\n[REDACTED]/tmppt2yn2cs.cpp:30:17: note: 'src_vec' declared here\n   30 |         __m128i src_vec = _mm_loadu_si128((__m128i*)(src + i));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpumekdtlc.cpp:32:89: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   32 |         __m128i result = _mm_or_ps(_mm_castsi128_ps(dst_vec), _mm_castsi128_ps(src_vec)).m128_i32[0];\n      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_0_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0icxu18j.cpp:45:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i div7 = _mm_div_epi32(sum, _mm_set1_epi32(7));\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwbs50iws.cpp:48:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   48 |         __m128i div = _mm_div_epi32(add, _mm_set1_epi32(7));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph5ilk3xj.cpp:45:27: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i div_vec = _mm_div_epi32(sum_vec, _mm_set1_epi32(7));\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptvp8gk_9.cpp:45:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   45 |         __m128i div7 = _mm_div_epi32(sum, _mm_set1_epi32(7));\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_1_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3pb4w2ab.cpp:43:23: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   43 |         __m128i div = _mm_div_epi32(sum, _mm_set1_epi32(7));\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt6nc8n18.cpp:32:17: error: use of undeclared identifier '_mm_insert_pd'\n   32 |         v_src = _mm_insert_pd(v_src, src[(r+1) * cols + stride], 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqo5eyfgf.cpp:32:17: error: use of undeclared identifier '_mm_insert_pd'\n   32 |         v_src = _mm_insert_pd(v_src, src[(r+1) * cols + stride], 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmt6ifzin.cpp:32:17: error: use of undeclared identifier '_mm_insert_pd'\n   32 |         v_src = _mm_insert_pd(v_src, src[(r+1) * cols + stride], 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfjen37mx.cpp:32:17: error: use of undeclared identifier '_mm_insert_pd'\n   32 |         v_src = _mm_insert_pd(v_src, src[(r+1) * cols + stride], 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_2_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpls7qjiox.cpp:32:17: error: use of undeclared identifier '_mm_insert_pd'\n   32 |         v_src = _mm_insert_pd(v_src, src[(r+1) * cols + stride], 1);\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq0r26je2.cpp:46:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   46 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[0], xmm0.m128_f32[0]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:46:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   46 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[0], xmm0.m128_f32[0]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:47:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   47 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[1], xmm0.m128_f32[1]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:47:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   47 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[1], xmm0.m128_f32[1]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:48:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[2], xmm0.m128_f32[2]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:48:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   48 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[2], xmm0.m128_f32[2]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:49:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   49 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[3], xmm0.m128_f32[3]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:49:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   49 |         _mm_storeu_ps(dst + idx_xmm0.m128i_i32[3], xmm0.m128_f32[3]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:51:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[0], xmm1.m128_f32[0]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:51:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   51 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[0], xmm1.m128_f32[0]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:52:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[1], xmm1.m128_f32[1]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:52:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   52 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[1], xmm1.m128_f32[1]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:53:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[2], xmm1.m128_f32[2]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:53:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   53 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[2], xmm1.m128_f32[2]);\n      |                                                    ~~~~^~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:54:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[3], xmm1.m128_f32[3]);\n      |                             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpq0r26je2.cpp:54:56: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   54 |         _mm_storeu_ps(dst + idx_xmm1.m128i_i32[3], xmm1.m128_f32[3]);\n      |                                                    ~~~~^~~~~~~~~\n16 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4o5bro80.cpp:42:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   42 |         _mm_storeu_ps(&dst[idx_xmm0.m128i_i32[0]], _mm_shuffle_ps(xmm1, xmm1, _MM_SHUFFLE(0, 0, 0, 0)));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4o5bro80.cpp:43:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |         _mm_storeu_ps(&dst[idx_xmm0.m128i_i32[1]], _mm_shuffle_ps(xmm1, xmm1, _MM_SHUFFLE(1, 1, 1, 1)));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4o5bro80.cpp:44:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   44 |         _mm_storeu_ps(&dst[idx_xmm0.m128i_i32[2]], _mm_shuffle_ps(xmm1, xmm1, _MM_SHUFFLE(2, 2, 2, 2)));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4o5bro80.cpp:45:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   45 |         _mm_storeu_ps(&dst[idx_xmm0.m128i_i32[3]], _mm_shuffle_ps(xmm1, xmm1, _MM_SHUFFLE(3, 3, 3, 3)));\n      |                            ~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8dyfqdli.cpp:43:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |         _mm_storeu_ps(&dst[idx_xmm1.m128i_i32[0]], xmm1);\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp8dyfqdli.cpp:44:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   44 |         _mm_storeu_ps(&dst[idx_xmm1.m128i_i32[1]], xmm1);\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp8dyfqdli.cpp:45:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   45 |         _mm_storeu_ps(&dst[idx_xmm1.m128i_i32[2]], xmm1);\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp8dyfqdli.cpp:46:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   46 |         _mm_storeu_ps(&dst[idx_xmm1.m128i_i32[3]], xmm1);\n      |                            ~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_3_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvewo9pqg.cpp:51:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         _mm_stream_ps(&dst[idx_xmm0.m128i_i32[0]], _mm_loadu_ps(&src[i]));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvewo9pqg.cpp:52:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |         _mm_stream_ps(&dst[idx_xmm0.m128i_i32[1]], _mm_loadu_ps(&src[i + 4]));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvewo9pqg.cpp:53:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         _mm_stream_ps(&dst[idx_xmm0.m128i_i32[2]], _mm_loadu_ps(&src[i + 8]));\n      |                            ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvewo9pqg.cpp:54:36: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |         _mm_stream_ps(&dst[idx_xmm0.m128i_i32[3]], _mm_loadu_ps(&src[i + 12]));\n      |                            ~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptttxyi9b.cpp:37:15: error: cannot assign to variable 'length' with const-qualified type 'const uint64_t' (aka 'const unsigned long')\n   37 |         length--;\n      |         ~~~~~~^\n[REDACTED]/tmptttxyi9b.cpp:31:20: note: variable 'length' declared const here\n   31 |     const uint64_t length = end - start + 1;\n      |     ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmptttxyi9b.cpp:47:16: error: cannot assign to variable 'length' with const-qualified type 'const uint64_t' (aka 'const unsigned long')\n   47 |         length -= tail_len;\n      |         ~~~~~~ ^\n[REDACTED]/tmptttxyi9b.cpp:31:20: note: variable 'length' declared const here\n   31 |     const uint64_t length = end - start + 1;\n      |     ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzqrootdm.cpp:36:45: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'range_reverse_simd' that is compiled without support for 'ssse3'\n   36 |         _mm_storeu_si128((__m128i*)&arr[i], _mm_shuffle_epi8(vec, _mm_setr_epi8(\n      |                                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_4_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpppyyvvir.cpp:32:27: error: no matching function for call to '_mm_set_epi32'\n   32 |         __m128i indices = _mm_set_epi32(i+3, i+2, i+1, i+0, i+3, i+2, i+1, i+0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr01_c9vz.cpp:33:27: error: no matching function for call to '_mm_set_epi32'\n   33 |         __m128i indices = _mm_set_epi32(i+3, i+2, i+1, i+0, i+3, i+2, i+1, i+0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpr01_c9vz.cpp:34:29: error: no matching function for call to '_mm_set_epi32'\n   34 |         __m128i base_addr = _mm_set_epi32(slice_idx*dim3 + (i+3)*dim3, slice_idx*dim3 + (i+2)*dim3,\n      |                             ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp357wkixg.cpp:33:27: error: no matching function for call to '_mm_set_epi32'\n   33 |         __m128i indices = _mm_set_epi32(i+3, i+2, i+1, i, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppi0hvqjw.cpp:33:27: error: no matching function for call to '_mm_set_epi32'\n   33 |         __m128i indices = _mm_set_epi32(i+3, i+2, i+1, i+0, i+3, i+2, i+1, i+0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_5_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp151k68zn.cpp:33:27: error: no matching function for call to '_mm_set_epi32'\n   33 |         __m128i indices = _mm_set_epi32(i+3, i+2, i+1, i+0, i+3, i+2, i+1, i+0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_6_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_7_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcmjr4s49.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |             __m128d result = _mm_blendv_pd(src_vec, scaled, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxrq1hl_r.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |             __m128d result = _mm_blendv_pd(src_vec, scaled, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_8_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmy57q00b.cpp:39:30: error: always_inline function '_mm_blendv_pd' requires target feature 'sse4.1', but would be inlined into function 'conditional_scale_simd' that is compiled without support for 'sse4.1'\n   39 |             __m128d result = _mm_blendv_pd(src_vec, scaled, mask);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6iirjg67.cpp:30:22: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]\n   30 |     __m128d row_data[cols];\n      |                      ^~~~\n[REDACTED]/tmp6iirjg67.cpp:30:22: note: function parameter 'cols' with unknown value cannot be used in a constant expression\n[REDACTED]/tmp6iirjg67.cpp:28:83: note: declared here\n   28 | void reorder_matrix_rows_simd(const double *src, double *dst, size_t rows, size_t cols, const size_t *indices) {\n      |                                                                                   ^\n[REDACTED]/tmp6iirjg67.cpp:37:58: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   37 |             _mm_loadu_pd(&src[i * cols + j], &row_data[j].m128d_f64[0]);\n      |                                               ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp6iirjg67.cpp:38:62: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   38 |             _mm_loadu_pd(&src[(i+1) * cols + j], &row_data[j].m128d_f64[1]);\n      |                                                   ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp6iirjg67.cpp:46:67: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   46 |             _mm_storeu_pd(&dst[indices[i] * cols + j], row_data[j].m128d_f64[0]);\n      |                                                        ~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp6iirjg67.cpp:47:69: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   47 |             _mm_storeu_pd(&dst[indices[i+1] * cols + j], row_data[j].m128d_f64[1]);\n      |                                                          ~~~~~~~~~~~^~~~~~~~~~\n1 warning and 4 errors generated.\n"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_9_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6zjeeg0k.cpp:34:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   34 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwpnms4rf.cpp:34:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   34 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvj58e0l1.cpp:34:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   34 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqgkz9olu.cpp:33:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n[REDACTED]/tmpqgkz9olu.cpp:41:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   41 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_10_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi29woscq.cpp:33:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   33 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n[REDACTED]/tmpi29woscq.cpp:41:22: error: always_inline function '_mm_srai_epi64' requires target feature 'avx512vl', but would be inlined into function 'vector_vector_add_simd' that is compiled without support for 'avx512vl'\n   41 |         xmm_result = _mm_srai_epi64(xmm_result, 1);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmsr2c8f9.cpp:40:19: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'vector_even_min_simd' that is compiled without support for 'sse4.1'\n   40 |         min_val = _mm_min_epi32(min_val, even_vals);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5xhvkcp_.cpp:36:24: error: no matching function for call to '_mm_setr_epi32'\n   36 |         __m128i mask = _mm_setr_epi32(0x80000000, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0x80000000);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n[REDACTED]/tmp5xhvkcp_.cpp:43:25: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   43 |     int result = min_val.m128i_i32[0];\n      |                  ~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppqo2higb.cpp:36:24: error: no matching function for call to '_mm_setr_epi32'\n   36 |         __m128i mask = _mm_setr_epi32(1, 0, 1, 0, 1, 0, 1, 0);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdx1z8qk1.cpp:36:24: error: no matching function for call to '_mm_setr_epi32'\n   36 |         __m128i mask = _mm_setr_epi32(1, 0, 1, 0, 1, 0, 1, 0);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_11_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpptjqa9es.cpp:36:24: error: no matching function for call to '_mm_setr_epi32'\n   36 |         __m128i mask = _mm_setr_epi32(1, 0, 1, 0, 1, 0, 1, 0);\n      |                        ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcou5tk2z.cpp:38:31: error: no matching function for call to '_mm_srli_epi32'\n   38 |         __m128i log_shifted = _mm_srli_epi32(_mm_and_si128(src_vec, mask), shift_log);\n      |                               ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2951:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 2nd argument\n 2951 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi32(__m128i __a,\n      |                                              ^\n 2952 |                                                             int __count) {\n      |                                                             ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_12_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_pal03k_.cpp:41:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   41 |     __m128i sum_low = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                       ^\n[REDACTED]/tmp_pal03k_.cpp:42:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   42 |     sum_low = _mm_hadd_epi32(sum_low, sum_low);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp87ngzmg0.cpp:41:20: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   41 |     __m128i temp = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                    ^\n[REDACTED]/tmp87ngzmg0.cpp:42:12: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   42 |     temp = _mm_hadd_epi32(temp, temp);\n      |            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvslz2_0j.cpp:39:22: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   39 |     __m128i summed = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                      ^\n[REDACTED]/tmpvslz2_0j.cpp:40:14: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   40 |     summed = _mm_hadd_epi32(summed, summed);\n      |              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjkcuhst7.cpp:41:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   41 |     __m128i sum_low = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                       ^\n[REDACTED]/tmpjkcuhst7.cpp:42:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_sum_simd' that is compiled without support for 'ssse3'\n   42 |     sum_low = _mm_hadd_epi32(sum_low, sum_low);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_13_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyo8huln0.cpp:47:41: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   47 |         if ((int)src[i] > (int)max_value.m128i_i8[0]) {\n      |                                ~~~~~~~~~^~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_14_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjxop2y97.cpp:47:41: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   47 |         if ((int)src[i] > (int)max_value.m128i_i8[0]) {\n      |                                ~~~~~~~~~^~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6z1ogabe.cpp:35:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i result = _mm_blendv_epi8(src2_vec, src1_vec, mask_test);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl_cldp_3.cpp:35:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'vector_blend_simd' that is compiled without support for 'sse4.1'\n   35 |         __m128i result = _mm_blendv_epi8(src2_vec, src1_vec, blend_mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_15_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvzzrt0eg.cpp:39:28: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   39 |         __m128i v_low_pc = _mm_shuffle_epi8(pc_table, v_low);\n      |                            ^\n[REDACTED]/tmpvzzrt0eg.cpp:43:29: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i v_high_pc = _mm_shuffle_epi8(pc_table, v_high);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpee3w_h0v.cpp:41:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i v_pc0 = _mm_shuffle_epi8(pc_table, v_b0);\n      |                         ^\n[REDACTED]/tmpee3w_h0v.cpp:42:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i v_pc1 = _mm_shuffle_epi8(pc_table, v_b1);\n      |                         ^\n[REDACTED]/tmpee3w_h0v.cpp:43:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i v_pc2 = _mm_shuffle_epi8(pc_table, v_b2);\n      |                         ^\n[REDACTED]/tmpee3w_h0v.cpp:44:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i v_pc3 = _mm_shuffle_epi8(pc_table, v_b3);\n      |                         ^\n4 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw5a8gdq9.cpp:41:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i v_pc0 = _mm_shuffle_epi8(pc_table, v_b0);\n      |                         ^\n[REDACTED]/tmpw5a8gdq9.cpp:42:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i v_pc1 = _mm_shuffle_epi8(pc_table, v_b1);\n      |                         ^\n[REDACTED]/tmpw5a8gdq9.cpp:43:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i v_pc2 = _mm_shuffle_epi8(pc_table, v_b2);\n      |                         ^\n[REDACTED]/tmpw5a8gdq9.cpp:44:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i v_pc3 = _mm_shuffle_epi8(pc_table, v_b3);\n      |                         ^\n4 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8hva1547.cpp:41:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i v_pc0 = _mm_shuffle_epi8(pc_table, v_b0);\n      |                         ^\n[REDACTED]/tmp8hva1547.cpp:42:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i v_pc1 = _mm_shuffle_epi8(pc_table, v_b1);\n      |                         ^\n[REDACTED]/tmp8hva1547.cpp:43:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         __m128i v_pc2 = _mm_shuffle_epi8(pc_table, v_b2);\n      |                         ^\n[REDACTED]/tmp8hva1547.cpp:44:25: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   44 |         __m128i v_pc3 = _mm_shuffle_epi8(pc_table, v_b3);\n      |                         ^\n4 errors generated.\n"}
{"task_id": "SimdBench_16_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpypg8n007.cpp:39:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   39 |             _mm_shuffle_epi8(pc_table, v_low),\n      |             ^\n[REDACTED]/tmpypg8n007.cpp:40:13: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   40 |             _mm_shuffle_epi8(pc_table, v_high)\n      |             ^\n[REDACTED]/tmpypg8n007.cpp:42:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   42 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 8)));\n      |                                         ^\n[REDACTED]/tmpypg8n007.cpp:43:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   43 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 12)));\n      |                                         ^\n[REDACTED]/tmpypg8n007.cpp:44:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   44 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 16)));\n      |                                         ^\n[REDACTED]/tmpypg8n007.cpp:45:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   45 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 20)));\n      |                                         ^\n[REDACTED]/tmpypg8n007.cpp:46:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   46 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 24)));\n      |                                         ^\n[REDACTED]/tmpypg8n007.cpp:47:41: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'population_count_simd' that is compiled without support for 'ssse3'\n   47 |         v_count = _mm_add_epi8(v_count, _mm_shuffle_epi8(pc_table, _mm_srli_epi32(v_src, 28)));\n      |                                         ^\n8 errors generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt2jkwhji.cpp:28:38: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   28 |     __m128i max_val = _mm_set1_epi16(UINT16_MAX);\n      |                       ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpt2jkwhji.cpp:39:26: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_min_epu16(sum, max_val);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu9xap8ir.cpp:28:38: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   28 |     __m128i max_val = _mm_set1_epi16(UINT16_MAX);\n      |                       ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpu9xap8ir.cpp:39:26: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_min_epu16(sum, max_val);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk62h0s81.cpp:28:38: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   28 |     __m128i max_val = _mm_set1_epi16(UINT16_MAX);\n      |                       ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpk62h0s81.cpp:39:26: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_min_epu16(sum, max_val);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmkjqvoi3.cpp:28:38: warning: implicit conversion from 'int' to 'short' changes value from 65535 to -1 [-Wconstant-conversion]\n   28 |     __m128i max_val = _mm_set1_epi16(UINT16_MAX);\n      |                       ~~~~~~~~~~~~~~ ^~~~~~~~~~\n/usr/include/stdint.h:117:23: note: expanded from macro 'UINT16_MAX'\n  117 | # define UINT16_MAX             (65535)\n      |                                  ^~~~~\n[REDACTED]/tmpmkjqvoi3.cpp:39:26: error: always_inline function '_mm_min_epu16' requires target feature 'sse4.1', but would be inlined into function 'saturating_add_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i result = _mm_min_epu16(sum, max_val);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_17_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6z4ayy1u.cpp:53:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   53 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvogeepgx.cpp:53:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   53 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1sh67_7t.cpp:53:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   53 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp21zngk7r.cpp:53:28: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'range_matrix_mul_simd' that is compiled without support for 'sse3'\n   53 |             __m128d temp = _mm_hadd_pd(sum, sum);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_18_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_19_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwfycqe48.cpp:49:27: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_add_round_nearest_simd' that is compiled without support for 'sse4.1'\n   49 |         __m128 adjusted = _mm_blendv_ps(vadd, _mm_add_ps(vadd, _mm_set1_ps(1.0f)), mask);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_20_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpazmtao16.cpp:43:27: error: use of undeclared identifier '_mm_cmpneq_epi32'; did you mean '_mm_cmpeq_epi32'?\n   43 |         __m128 mask_idx = _mm_cmpneq_epi32(idx_mod, _mm_setzero_si128());\n      |                           ^~~~~~~~~~~~~~~~\n      |                           _mm_cmpeq_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3059:46: note: '_mm_cmpeq_epi32' declared here\n 3059 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpeq_epi32(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpppy50e_3.cpp:54:25: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'vector_mul_round_up_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128 result = _mm_blendv_ps(minus_one_vec, mul_result, _mm_and_ps(compare_mask, _mm_castsi128_ps(index_check)));\n      |                         ^\n1 error generated.\n"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_21_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: free(): invalid next size (normal)\n"}
{"task_id": "SimdBench_22_SSE", "passed": false, "result": "runtime failed: double free or corruption (!prev)\n"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_23_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfky3dsge.cpp:44:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   44 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx2a4zok9.cpp:47:13: error: use of undeclared identifier '_mm_storeu_sd'\n   47 |             _mm_storeu_sd(dst + i * p + j, rounded);\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp98e5s1aw.cpp:51:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   51 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_24_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp276_oc3t.cpp:48:31: error: '__builtin_ia32_roundpd' needs target feature sse4.1\n   48 |             __m128d rounded = _mm_round_pd(sum, _MM_FROUND_TO_NEAREST_INT |_MM_FROUND_NO_EXC);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:315:13: note: expanded from macro '_mm_round_pd'\n  315 |   ((__m128d)__builtin_ia32_roundpd((__v2df)(__m128d)(X), (M)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptppirutv.cpp:56:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             __m128 floored0 = _mm_floor_ps(rounded0);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmptppirutv.cpp:57:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |             __m128 floored1 = _mm_floor_ps(rounded1);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmptppirutv.cpp:58:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   58 |             __m128 floored2 = _mm_floor_ps(rounded2);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmptppirutv.cpp:59:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   59 |             __m128 floored3 = _mm_floor_ps(rounded3);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1u107iq4.cpp:56:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   56 |             __m128 floored0 = _mm_floor_ps(rounded0);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp1u107iq4.cpp:57:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   57 |             __m128 floored1 = _mm_floor_ps(rounded1);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp1u107iq4.cpp:58:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   58 |             __m128 floored2 = _mm_floor_ps(rounded2);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp1u107iq4.cpp:59:31: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   59 |             __m128 floored3 = _mm_floor_ps(rounded3);\n      |                               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp04pw5o7k.cpp:45:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   45 |             transposed0 = _mm_round_ps(transposed0, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp04pw5o7k.cpp:46:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   46 |             transposed1 = _mm_round_ps(transposed1, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp04pw5o7k.cpp:47:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   47 |             transposed2 = _mm_round_ps(transposed2, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp04pw5o7k.cpp:48:27: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   48 |             transposed3 = _mm_round_ps(transposed3, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n      |                           ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n4 errors generated.\n"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_25_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk47ime5m.cpp:43:26: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   43 |         __m128 floored = _mm_floor_ps(abs_diff);\n      |                          ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6ktbr2xl.cpp:42:27: error: use of undeclared identifier '_mm_trunc_ps'\n   42 |         __m128 int_part = _mm_trunc_ps(_mm_add_ps(diff, sign));\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_26_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcbuvkkr5.cpp:43:26: error: use of undeclared identifier '_mm_trunc_ps'\n   43 |         __m128 rounded = _mm_trunc_ps(abs_diff);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_27_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4xwupef6.cpp:49:23: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   49 |         __m128 sum1 = _mm_hadd_ps(res1, res1);\n      |                       ^\n[REDACTED]/tmp4xwupef6.cpp:50:23: error: always_inline function '_mm_hadd_ps' requires target feature 'sse3', but would be inlined into function 'matrix_vector_mul_simd' that is compiled without support for 'sse3'\n   50 |         __m128 sum2 = _mm_hadd_ps(res2, res2);\n      |                       ^\n2 errors generated.\n"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_28_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsvhjhney.cpp:39:20: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   39 |             sum_vec.m128d_f64[0] += remaining;\n      |             ~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdvrf9bzp.cpp:39:16: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   39 |             sum.m128d_f64[0] += remaining;\n      |             ~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_29_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdm3iwkb9.cpp:39:20: error: member reference base type '__m128d' (vector of 2 'double' values) is not a structure or union\n   39 |             sum_vec.m128d_f64[0] += remaining;\n      |             ~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_30_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp02r_pawz.cpp:55:65: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |             if (directions[i] && matrix[i * cols + j] < prev_vec.m128i_i32[0]) {\n      |                                                         ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp02r_pawz.cpp:59:66: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   59 |             if (!directions[i] && matrix[i * cols + j] > prev_vec.m128i_i32[0]) {\n      |                                                          ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp02r_pawz.cpp:63:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   63 |             prev_vec.m128i_i32[0] = matrix[i * cols + j];\n      |             ~~~~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpetpvzvwr.cpp:34:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd8229zp2.cpp:34:27: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_vec = _mm_div_epi16(src_vec, base_vec);\n      |                           ^~~~~~~~~~~~~\n      |                           _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpd8229zp2.cpp:35:29: error: use of undeclared identifier '_mm_floordiv_epi16'; did you mean '_mm_loadu_epi16'?\n   35 |         __m128i floor_vec = _mm_floordiv_epi16(div_vec);\n      |                             ^~~~~~~~~~~~~~~~~~\n      |                             _mm_loadu_epi16\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlbwintrin.h:2295:1: note: '_mm_loadu_epi16' declared here\n 2295 | _mm_loadu_epi16 (void const *__P)\n      | ^\n[REDACTED]/tmpd8229zp2.cpp:35:48: error: cannot initialize a parameter of type 'const void *' with an lvalue of type '__m128i' (vector of 2 'long long' values)\n   35 |         __m128i floor_vec = _mm_floordiv_epi16(div_vec);\n      |                                                ^~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlbwintrin.h:2295:30: note: passing argument to parameter '__P' here\n 2295 | _mm_loadu_epi16 (void const *__P)\n      |                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx8qg9xc_.cpp:34:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpx8qg9xc_.cpp:35:32: error: use of undeclared identifier '_mm_floordiv_epi16'; did you mean '_mm_loadu_epi16'?\n   35 |         __m128i floor_result = _mm_floordiv_epi16(div_result);\n      |                                ^~~~~~~~~~~~~~~~~~\n      |                                _mm_loadu_epi16\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlbwintrin.h:2295:1: note: '_mm_loadu_epi16' declared here\n 2295 | _mm_loadu_epi16 (void const *__P)\n      | ^\n[REDACTED]/tmpx8qg9xc_.cpp:35:51: error: cannot initialize a parameter of type 'const void *' with an lvalue of type '__m128i' (vector of 2 'long long' values)\n   35 |         __m128i floor_result = _mm_floordiv_epi16(div_result);\n      |                                                   ^~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlbwintrin.h:2295:30: note: passing argument to parameter '__P' here\n 2295 | _mm_loadu_epi16 (void const *__P)\n      |                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxhzz9ooa.cpp:34:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpxhzz9ooa.cpp:35:50: error: too few arguments provided to function-like macro invocation\n   35 |         __m128i floored = _mm_floor_sd(div_result); // Simulate floor operation\n      |                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:207:9: note: macro '_mm_floor_sd' defined here\n  207 | #define _mm_floor_sd(X, Y) _mm_round_sd((X), (Y), _MM_FROUND_FLOOR)\n      |         ^\n[REDACTED]/tmpxhzz9ooa.cpp:35:27: error: use of undeclared identifier '_mm_floor_sd'\n   35 |         __m128i floored = _mm_floor_sd(div_result); // Simulate floor operation\n      |                           ^\n3 errors generated.\n"}
{"task_id": "SimdBench_31_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn1eo5p92.cpp:34:30: error: use of undeclared identifier '_mm_div_epi16'; did you mean '_mm_min_epi16'?\n   34 |         __m128i div_result = _mm_div_epi16(src_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epi16\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2297:46: note: '_mm_min_epi16' declared here\n 2297 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi16(__m128i __a,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_32_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp06phd62e.cpp:40:27: error: always_inline function '_mm_popcnt_u64' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         size_t eq_count = _mm_popcnt_u64(_mm_movemask_epi8(eq_mask));\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpalgc1gw4.cpp:40:27: error: always_inline function '_mm_popcnt_u64' requires target feature 'popcnt', but would be inlined into function 'tensor_4d_equal_count_simd' that is compiled without support for 'popcnt'\n   40 |         size_t eq_count = _mm_popcnt_u64(_mm_movemask_epi8(eq_mask));\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_33_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpak8vb20o.cpp:31:26: error: use of undeclared identifier '_mm_mul_epi64'\n   31 |         __m128i vec_ax = _mm_mul_epi64(vec_x, factor);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5vxt6aka.cpp:32:26: error: use of undeclared identifier '_mm_mul_epi64'\n   32 |         __m128i vec_ax = _mm_mul_epi64(vec_x, factor);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1p1prapd.cpp:31:26: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   31 |         __m128i vec_ax = _mm_mullo_epi64(vec_x, factor);\n      |                          ^\n[REDACTED]/tmp1p1prapd.cpp:32:27: error: always_inline function '_mm_abs_epi64' requires target feature 'avx512vl', but would be inlined into function 'axm_abs_simd' that is compiled without support for 'avx512vl'\n   32 |         __m128i vec_abs = _mm_abs_epi64(vec_ax);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzr_bgsx0.cpp:31:26: error: use of undeclared identifier '_mm_mul_epi64'\n   31 |         __m128i vec_ax = _mm_mul_epi64(vec_x, factor);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_34_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx1zl2cz1.cpp:32:26: error: use of undeclared identifier '_mm_mul_epi64'\n   32 |         __m128i vec_ax = _mm_mul_epi64(vec_x, factor);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmspeeke0.cpp:58:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   58 |     int16_t max_result = max_val.m128i_i16[0];\n      |                          ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpmspeeke0.cpp:59:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   59 |     int16_t min_result = min_val.m128i_i16[0];\n      |                          ~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_35_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd173j2va.cpp:57:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   57 |     int16_t min_num = min_val.m128i_i16[0];\n      |                       ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpd173j2va.cpp:58:30: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   58 |     int16_t max_num = max_val.m128i_i16[0];\n      |                       ~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_gdr5739.cpp:46:18: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'matrix_rows_strictly_increasing_simd' that is compiled without support for 'sse4.1'\n   46 |             if (!_mm_testz_si128(cmp_gt, cmp_gt)) {\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_36_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_37_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_47z5tpg.cpp:67:71: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   67 |                 if (!_mm_cmpeq_epi32(first_block[k], current_block[k]).m128i_i32[0]) {\n      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_38_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpairbd_pg.cpp:27:27: warning: absolute value function 'fabsf' given an argument of type 'double' but has parameter of type 'float' which may cause truncation of value [-Wabsolute-value]\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^\n[REDACTED]/tmpairbd_pg.cpp:27:27: note: use function 'std::abs' instead\n   27 |             double diff = fabsf(vec[i * block_size + j] - vec[j]);\n      |                           ^~~~~\n      |                           std::abs\n[REDACTED]/tmpairbd_pg.cpp:51:14: error: use of undeclared identifier '_mm_comigt_pd'; did you mean '_mm_comigt_sd'?\n   51 |         if (!_mm_comigt_pd(abs_diff1, tol) || !_mm_comigt_pd(abs_diff2, tol)) {\n      |              ^~~~~~~~~~~~~\n      |              _mm_comigt_sd\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1042:42: note: '_mm_comigt_sd' declared here\n 1042 | static __inline__ int __DEFAULT_FN_ATTRS _mm_comigt_sd(__m128d __a,\n      |                                          ^\n[REDACTED]/tmpairbd_pg.cpp:51:48: error: use of undeclared identifier '_mm_comigt_pd'; did you mean '_mm_comigt_sd'?\n   51 |         if (!_mm_comigt_pd(abs_diff1, tol) || !_mm_comigt_pd(abs_diff2, tol)) {\n      |                                                ^~~~~~~~~~~~~\n      |                                                _mm_comigt_sd\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1042:42: note: '_mm_comigt_sd' declared here\n 1042 | static __inline__ int __DEFAULT_FN_ATTRS _mm_comigt_sd(__m128d __a,\n      |                                          ^\n1 warning and 2 errors generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1yb4d83h.cpp:45:23: error: use of undeclared identifier '_mm_cvtss_f64'\n   45 |         double norm = _mm_cvtss_f64(sum);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnp500iji.cpp:44:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   44 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n[REDACTED]/tmpnp500iji.cpp:45:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   45 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_3di3e0x.cpp:43:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   43 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n[REDACTED]/tmp_3di3e0x.cpp:44:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   44 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjmuu5ocp.cpp:40:23: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   40 |         __m128d tmp = _mm_hadd_pd(sum, sum);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_39_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy5cxwawb.cpp:43:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   43 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n[REDACTED]/tmpy5cxwawb.cpp:44:15: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'matrix_row_norm_compare_simd' that is compiled without support for 'sse3'\n   44 |         sum = _mm_hadd_pd(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_40_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1vr5isz0.cpp:50:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   50 |         sum_of_squares.m128i_i32[0] += a * a;\n      |         ~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp1vr5isz0.cpp:51:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         sum_of_products.m128i_i32[0] += a * b;\n      |         ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp1vr5isz0.cpp:55:32: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |     int64_t result = result_vec.m128i_i64[0] + result_vec.m128i_i64[1];\n      |                      ~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp1vr5isz0.cpp:55:58: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |     int64_t result = result_vec.m128i_i64[0] + result_vec.m128i_i64[1];\n      |                                                ~~~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4wmaj2cq.cpp:50:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   50 |         sum_of_squares.m128i_i32[0] += a_val * a_val;\n      |         ~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4wmaj2cq.cpp:51:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         sum_of_squares.m128i_i32[1] += b_val * b_val;\n      |         ~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4wmaj2cq.cpp:52:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |         sum_of_products.m128i_i32[0] += a_val * b_val;\n      |         ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4wmaj2cq.cpp:56:32: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int64_t result = result_vec.m128i_i64[0] - result_vec.m128i_i64[1];\n      |                      ~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp4wmaj2cq.cpp:56:58: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int64_t result = result_vec.m128i_i64[0] - result_vec.m128i_i64[1];\n      |                                                ~~~~~~~~~~^~~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu2ltbvt7.cpp:57:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'long long'\n   57 |     __m128i sum_of_squares_low = _mm_cvtsi128_si64(sum_of_squares);\n      |             ^                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpu2ltbvt7.cpp:58:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'long long'\n   58 |     __m128i sum_of_squares_high = _mm_cvtsi128_si64(_mm_srli_si128(sum_of_squares, 8));\n      |             ^                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpu2ltbvt7.cpp:59:13: error: cannot initialize a variable of type 'int64_t' (aka 'long') with an rvalue of type '__m128i' (vector of 2 'long long' values)\n   59 |     int64_t total_sum_of_squares = sum_of_squares_low + sum_of_squares_high + residual_sum_of_squares;\n      |             ^                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpu2ltbvt7.cpp:61:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'long long'\n   61 |     __m128i sum_of_products_low = _mm_cvtsi128_si64(sum_of_products);\n      |             ^                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpu2ltbvt7.cpp:62:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'long long'\n   62 |     __m128i sum_of_products_high = _mm_cvtsi128_si64(_mm_srli_si128(sum_of_products, 8));\n      |             ^                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpu2ltbvt7.cpp:63:13: error: cannot initialize a variable of type 'int64_t' (aka 'long') with an rvalue of type '__m128i' (vector of 2 'long long' values)\n   63 |     int64_t total_sum_of_products = sum_of_products_low + sum_of_products_high + residual_sum_of_products;\n      |             ^                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_41_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa1n0w7pt.cpp:50:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   50 |         sum_of_squares.m128i_i32[0] += a * a;\n      |         ~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpa1n0w7pt.cpp:51:23: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         sum_of_squares.m128i_i32[1] += b * b;\n      |         ~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpa1n0w7pt.cpp:52:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   52 |         sum_of_products.m128i_i32[0] += a * b;\n      |         ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpa1n0w7pt.cpp:56:32: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int64_t result = result_vec.m128i_i64[0] - result_vec.m128i_i64[1];\n      |                      ~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpa1n0w7pt.cpp:56:58: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int64_t result = result_vec.m128i_i64[0] - result_vec.m128i_i64[1];\n      |                                                ~~~~~~~~~~^~~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_42_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvw_hi177.cpp:54:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i pos_res = _mm_blendv_epi8(zero_mask, pos_mask, pos_eq); // If positive parts match, set to 1\n      |                           ^\n[REDACTED]/tmpvw_hi177.cpp:55:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i neg_res = _mm_blendv_epi8(zero_mask, neg_mask, neg_eq); // If negative parts match, set to -1\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6dzoammm.cpp:54:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i pos_res = _mm_blendv_epi8(zero_mask, pos_mask, pos_eq); // If positive, set to 1\n      |                           ^\n[REDACTED]/tmp6dzoammm.cpp:55:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'tensor_three_valued_logic_simd' that is compiled without support for 'sse4.1'\n   55 |         __m128i neg_res = _mm_blendv_epi8(zero_mask, neg_mask, neg_eq); // If negative, set to -1\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_43_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_44_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_45_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb6njy7cy.cpp:48:41: error: always_inline function '_mm_popcnt_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   48 |         vec_out = _mm_add_epi8(vec_out, _mm_popcnt_epi8(v1));\n      |                                         ^\n[REDACTED]/tmpb6njy7cy.cpp:49:41: error: always_inline function '_mm_popcnt_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   49 |         vec_out = _mm_add_epi8(vec_out, _mm_popcnt_epi8(v2));\n      |                                         ^\n[REDACTED]/tmpb6njy7cy.cpp:50:41: error: always_inline function '_mm_popcnt_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   50 |         vec_out = _mm_add_epi8(vec_out, _mm_popcnt_epi8(v3));\n      |                                         ^\n[REDACTED]/tmpb6njy7cy.cpp:51:41: error: always_inline function '_mm_popcnt_epi8' requires target feature 'avx512vl', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vl'\n   51 |         vec_out = _mm_add_epi8(vec_out, _mm_popcnt_epi8(v4));\n      |                                         ^\n4 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphtu4bt45.cpp:39:30: error: always_inline function '_mm_popcnt_epi32' requires target feature 'avx512vpopcntdq', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'avx512vpopcntdq'\n   39 |         __m128i bit_counts = _mm_popcnt_epi32(data);\n      |                              ^\n[REDACTED]/tmphtu4bt45.cpp:40:34: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   40 |         __m128i horizontal_sum = _mm_hadd_epi32(bit_counts, bit_counts);\n      |                                  ^\n[REDACTED]/tmphtu4bt45.cpp:41:26: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   41 |         horizontal_sum = _mm_hadd_epi32(horizontal_sum, horizontal_sum);\n      |                          ^\n3 errors generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpskldri3w.cpp:43:47: error: use of undeclared identifier '_mm_cvtepu32_epi8'; did you mean '_mm_cvtepi32_epi8'?\n   43 |         bit_counts = _mm_add_epi8(bit_counts, _mm_cvtepu32_epi8(ones));\n      |                                               ^~~~~~~~~~~~~~~~~\n      |                                               _mm_cvtepi32_epi8\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:7540:1: note: '_mm_cvtepi32_epi8' declared here\n 7540 | _mm_cvtepi32_epi8 (__m128i __A)\n      | ^\n1 error generated.\n"}
{"task_id": "SimdBench_46_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpybg9tics.cpp:42:26: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i counts = _mm_shuffle_epi8(lookup_table, packed_bits);\n      |                          ^\n[REDACTED]/tmpybg9tics.cpp:45:34: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'tensor_bit_count_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i shifted_counts = _mm_shuffle_epi8(lookup_table, shifted_bits);\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsiwkyhsm.cpp:44:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   44 |         temp_b = _mm_mul_epu32(_mm_cvtepu32_epi64(temp_a), _mm_set1_epi32(0x55555555));\n      |                                ^\n[REDACTED]/tmpsiwkyhsm.cpp:52:60: error: always_inline function '_mm_sign_epi32' requires target feature 'ssse3', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'ssse3'\n   52 |         temp_c = _mm_xor_si128(temp_a, _mm_and_si128(mask, _mm_sign_epi32(temp_a, temp_a)));\n      |                                                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpswmto_6p.cpp:45:32: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_abs_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i a_times_inv3 = _mm_mul_epi32(a_vec, _mm_set1_epi32(0xaaaaaaab)); // Modular inverse of 3\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_47_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphbzmmqfs.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmphbzmmqfs.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmphbzmmqfs.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmphbzmmqfs.cpp:45:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128i result = _mm_blendv_epi8(src_negated, src_rotated, cmp_result);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe3vq1upu.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpe3vq1upu.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpe3vq1upu.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpe3vq1upu.cpp:46:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i result = _mm_blendv_epi8(negated, rotated, cond);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe6cimrzl.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpe6cimrzl.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpe6cimrzl.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpe6cimrzl.cpp:44:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128i result = _mm_blendv_epi8(src_negated, src_rotated, compare);\n      |                          ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_48_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpilppaq8i.cpp:24:17: warning: & has lower precedence than ==; == will be evaluated first [-Wparentheses]\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^~~~~~~~~~~~\n[REDACTED]/tmpilppaq8i.cpp:24:17: note: place parentheses around the '==' expression to silence this warning\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^           \n      |                   (         )\n[REDACTED]/tmpilppaq8i.cpp:24:17: note: place parentheses around the & expression to evaluate it first\n   24 |         if (val & 0xf == 0xf) {\n      |                 ^\n      |             (        )\n[REDACTED]/tmpilppaq8i.cpp:42:27: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'matrix_conditional_bit_rotate_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i dst_vec = _mm_blendv_epi8(src_neg, src_rot, cond);\n      |                           ^\n1 warning and 1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9d61ng2p.cpp:40:31: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   40 |         __m128 abs_diff_vec = _mm_abs_ps(diff_vec);\n      |                               ^~~~~~~~~~\n      |                               _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc6ochk38.cpp:44:43: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(neg_mask, zero_vec, cmp_neg), pos_mask, cmp_pos);\n      |                                           ^\n[REDACTED]/tmpc6ochk38.cpp:44:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(neg_mask, zero_vec, cmp_neg), pos_mask, cmp_pos);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqrcshe7n.cpp:45:43: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(greater_mask, less_mask, greater_than_eps), zero, less_than_neg_eps);\n      |                                           ^\n[REDACTED]/tmpqrcshe7n.cpp:45:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(greater_mask, less_mask, greater_than_eps), zero, less_than_neg_eps);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps8ix4_le.cpp:45:43: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(greater_mask, less_mask, greater_than_eps), zero, less_than_neg_eps);\n      |                                           ^\n[REDACTED]/tmps8ix4_le.cpp:45:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   45 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(greater_mask, less_mask, greater_than_eps), zero, less_than_neg_eps);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_49_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmph9qtr0ou.cpp:44:43: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(neg_one_vec, zero_vec, cmp_gt_vec), one_vec, cmp_lt_vec);\n      |                                           ^\n[REDACTED]/tmph9qtr0ou.cpp:44:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'tensor_ternary_compare_simd' that is compiled without support for 'sse4.1'\n   44 |         __m128 result_vec = _mm_blendv_ps(_mm_blendv_ps(neg_one_vec, zero_vec, cmp_gt_vec), one_vec, cmp_lt_vec);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_50_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_51_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_52_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_53_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6zebq1k2.cpp:33:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i extended = _mm_cvtepi16_epi32(vec);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_54_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxc1th318.cpp:33:28: error: always_inline function '_mm_cvtepi16_epi32' requires target feature 'sse4.1', but would be inlined into function 'int16_to_int32_simd' that is compiled without support for 'sse4.1'\n   33 |         __m128i extended = _mm_cvtepi16_epi32(vec);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgm4e4wor.cpp:59:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128 result_vec = _mm_blendv_ps(a_vec, clamp_high, _mm_castsi128_ps(cmp_mask));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsb9kx8tq.cpp:59:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128 result_vec = _mm_blendv_ps(a_vec, clamp_high, _mm_castsi128_ps(cmp_mask));\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_55_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpli76cesd.cpp:57:29: error: always_inline function '_mm_blendv_ps' requires target feature 'sse4.1', but would be inlined into function 'conditional_normalize_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128 result_vec = _mm_blendv_ps(a_vec, norm_vec, mask_vec);\n      |                             ^\n1 error generated.\n"}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_56_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3668wmt1.cpp:36:9: error: no matching function for call to '_mm_storeu_ps'\n   36 |         _mm_storeu_ps(B_vec + i, vec_b);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_57_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc7xw2q93.cpp:36:9: error: no matching function for call to '_mm_storeu_ps'\n   36 |         _mm_storeu_ps(B_vec + i, vec_b);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_57_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_58_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd0503tdi.cpp:34:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i extended_vec = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk4dn_ckc.cpp:34:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i extended_vec = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvcutl03a.cpp:34:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i extended_vec = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv3vy5c86.cpp:34:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i extended_vec = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_59_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp31wc5bq_.cpp:34:32: error: always_inline function '_mm_cvtepu32_epi64' requires target feature 'sse4.1', but would be inlined into function 'widening_uint_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i extended_vec = _mm_cvtepu32_epi64(src_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0erc0yc0.cpp:53:18: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   53 |     __m128d s0 = _mm_hadd_pd(sum, sum);\n      |                  ^\n[REDACTED]/tmp0erc0yc0.cpp:54:18: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   54 |     __m128d s1 = _mm_hadd_pd(s0, s0);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprb2bt1yz.cpp:53:18: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   53 |     __m128d s0 = _mm_hadd_pd(sum, sum);\n      |                  ^\n[REDACTED]/tmprb2bt1yz.cpp:54:18: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   54 |     __m128d s1 = _mm_hadd_pd(s0, s0);\n      |                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk0a4vyhd.cpp:54:21: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   54 |     __m128d s_sum = _mm_hadd_pd(sum, sum);\n      |                     ^\n[REDACTED]/tmpk0a4vyhd.cpp:55:13: error: always_inline function '_mm_hadd_pd' requires target feature 'sse3', but would be inlined into function 'indexed_sum_simd' that is compiled without support for 'sse3'\n   55 |     s_sum = _mm_hadd_pd(s_sum, s_sum);\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_60_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4x6kzu00.cpp:35:23: error: no matching function for call to '_mm_set_epi16'\n   35 |         __m128i idx = _mm_set_epi16(index[i+3], index[i+2], index[i+1], index[i]);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3514:1: note: candidate function not viable: requires 8 arguments, but 4 were provided\n 3514 | _mm_set_epi16(short __w7, short __w6, short __w5, short __w4, short __w3,\n      | ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3515 |               short __w2, short __w1, short __w0) {\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_61_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjpv8db5u.cpp:40:41: error: '__builtin_ia32_vpermilpd' needs target feature avx\n   40 |         __m128d diff = _mm_sub_pd(nums, _mm_permute_pd(nums, 1));\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1006:13: note: expanded from macro '_mm_permute_pd'\n 1006 |   ((__m128d)__builtin_ia32_vpermilpd((__v2df)(__m128d)(A), (int)(C)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmugbj05z.cpp:38:42: error: '__builtin_ia32_vpermilpd' needs target feature avx\n   38 |         __m128d diffs = _mm_sub_pd(nums, _mm_permute_pd(nums, 1));\n      |                                          ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1006:13: note: expanded from macro '_mm_permute_pd'\n 1006 |   ((__m128d)__builtin_ia32_vpermilpd((__v2df)(__m128d)(A), (int)(C)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpniyi1xg3.cpp:43:16: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   43 |         diff = _mm_abs_pd(diff);\n      |                ^~~~~~~~~~\n      |                _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8p3e74ya.cpp:41:41: error: '__builtin_ia32_vpermilpd' needs target feature avx\n   41 |         __m128d diff = _mm_sub_pd(nums, _mm_permute_pd(nums, 1));\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1006:13: note: expanded from macro '_mm_permute_pd'\n 1006 |   ((__m128d)__builtin_ia32_vpermilpd((__v2df)(__m128d)(A), (int)(C)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_62_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp879_p8s3.cpp:41:41: error: '__builtin_ia32_vpermilpd' needs target feature avx\n   41 |         __m128d diff = _mm_sub_pd(nums, _mm_permute_pd(nums, 1));\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1006:13: note: expanded from macro '_mm_permute_pd'\n 1006 |   ((__m128d)__builtin_ia32_vpermilpd((__v2df)(__m128d)(A), (int)(C)))\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ime6ogk.cpp:44:19: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   44 |             ops = _mm_insert_epi32(ops, operations[i + j], j);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpv69sr7hb.cpp:44:19: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   44 |             ops = _mm_insert_epi32(ops, operations[i + j], j);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfprjtnp9.cpp:55:24: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |         current_balance.m128i_i32[0] += operations[i];\n      |         ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpfprjtnp9.cpp:56:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         if (current_balance.m128i_i32[0] < 0) {\n      |             ~~~~~~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp15uwr2jm.cpp:41:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   41 |         if (i + 0 < n) ops = _mm_insert_epi32(ops, operations[i + 0], 0);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmp15uwr2jm.cpp:42:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   42 |         if (i + 1 < n) ops = _mm_insert_epi32(ops, operations[i + 1], 1);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmp15uwr2jm.cpp:43:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   43 |         if (i + 2 < n) ops = _mm_insert_epi32(ops, operations[i + 2], 2);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmp15uwr2jm.cpp:44:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   44 |         if (i + 3 < n) ops = _mm_insert_epi32(ops, operations[i + 3], 3);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_63_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnnebf1py.cpp:41:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   41 |         if (i + 0 < n) ops = _mm_insert_epi32(ops, operations[i + 0], 0);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpnnebf1py.cpp:42:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   42 |         if (i + 1 < n) ops = _mm_insert_epi32(ops, operations[i + 1], 1);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpnnebf1py.cpp:43:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   43 |         if (i + 2 < n) ops = _mm_insert_epi32(ops, operations[i + 2], 2);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n[REDACTED]/tmpnnebf1py.cpp:44:30: error: '__builtin_ia32_vec_set_v4si' needs target feature sse4.1\n   44 |         if (i + 3 < n) ops = _mm_insert_epi32(ops, operations[i + 3], 3);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqyelib_9.cpp:51:28: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   51 |         __m128d abs_diff = _mm_abs_pd(diff);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprwcbtg44.cpp:51:28: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   51 |         __m128d abs_diff = _mm_abs_pd(diff);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8nhtqaur.cpp:50:28: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   50 |         __m128d abs_diff = _mm_abs_pd(diff);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7oeqqmlz.cpp:50:28: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   50 |         __m128d abs_diff = _mm_abs_pd(diff);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_64_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvue5q10o.cpp:42:24: error: no matching function for call to '_mm_set1_pd'\n   42 |         __m128d mean = _mm_set1_pd(sum / (i / 2));\n      |                        ^~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:1753:46: note: candidate function not viable: no known conversion from '__m128d' (vector of 2 'double' values) to 'double' for 1st argument\n 1753 | static __inline__ __m128d __DEFAULT_FN_ATTRS _mm_set1_pd(double __w) {\n      |                                              ^           ~~~~~~~~~~\n[REDACTED]/tmpvue5q10o.cpp:43:27: error: use of undeclared identifier '_mm_abs_pd'; did you mean '_mm_abs_ph'?\n   43 |         __m128d abs_dev = _mm_abs_pd(_mm_sub_pd(data, mean));\n      |                           ^~~~~~~~~~\n      |                           _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpvue5q10o.cpp:49:23: error: use of undeclared identifier '_mm_movehdup_pd'\n   49 |     __m128d shuffle = _mm_movehdup_pd(sum);\n      |                       ^\n[REDACTED]/tmpvue5q10o.cpp:52:15: error: use of undeclared identifier '_mm_movehdup_pd'\n   52 |     shuffle = _mm_movehdup_pd(sum_abs_dev);\n      |               ^\n4 errors generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  cannot create std::vector larger than max_size()\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  cannot create std::vector larger than max_size()\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyuehkvza.cpp:55:36: error: argument value 5 is outside the valid range [0, 3] [-Wargument-outside-range]\n   55 |         __m128i nums_with_delim3 = _mm_insert_epi32(nums_with_delim2, delimeter, 5);\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpyuehkvza.cpp:56:36: error: argument value 7 is outside the valid range [0, 3] [-Wargument-outside-range]\n   56 |         __m128i nums_with_delim4 = _mm_insert_epi32(nums_with_delim3, delimeter, 7);\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7rwtom55.cpp:55:36: error: argument value 5 is outside the valid range [0, 3] [-Wargument-outside-range]\n   55 |         __m128i nums_with_delim3 = _mm_insert_epi32(nums_with_delim2, delimeter, 5);\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmp7rwtom55.cpp:56:36: error: argument value 7 is outside the valid range [0, 3] [-Wargument-outside-range]\n   56 |         __m128i nums_with_delim4 = _mm_insert_epi32(nums_with_delim3, delimeter, 7);\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_65_SSE", "passed": false, "result": "runtime failed: terminate called after throwing an instance of 'std::length_error'\n  what():  cannot create std::vector larger than max_size()\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptblxjidn.cpp:50:51: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   50 |                 _mm_storel_epi64((__m128i*)&nums, _mm_insert_epi32(nums, numbers[i + j], j));\n      |                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpptq8y29f.cpp:49:24: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   49 |     __m128i temp_sum = _mm_hadd_epi16(sum_vec, sum_vec);\n      |                        ^\n[REDACTED]/tmpptq8y29f.cpp:50:16: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   50 |     temp_sum = _mm_hadd_epi16(temp_sum, temp_sum);\n      |                ^\n[REDACTED]/tmpptq8y29f.cpp:53:25: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   53 |     __m128i temp_prod = _mm_hadd_epi16(prod_vec, prod_vec);\n      |                         ^\n[REDACTED]/tmpptq8y29f.cpp:54:17: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'sum_product_simd' that is compiled without support for 'ssse3'\n   54 |     temp_prod = _mm_hadd_epi16(temp_prod, temp_prod);\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_66_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_jko326o.cpp:50:51: error: argument to '__builtin_ia32_vec_set_v8hi' must be a constant integer\n   50 |                 _mm_storel_epi64((__m128i*)&nums, _mm_insert_epi16(nums, numbers[i + j], j));\n      |                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4189:13: note: expanded from macro '_mm_insert_epi16'\n 4189 |   ((__m128i)__builtin_ia32_vec_set_v8hi((__v8hi)(__m128i)(a), (int)(b),        \\\n      |             ^\n 4190 |                                         (int)(imm)))\n      |                                         ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkths7mzy.cpp:50:27: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   50 |         __m128i new_max = _mm_max_epi32(max_val, current_vals);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp90fompnx.cpp:51:19: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   51 |         max_val = _mm_max_epi32(prev_max, curr_val);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvnchbjx_.cpp:53:33: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         if (numbers[i] > max_val.m128i_i32[0]) {\n      |                          ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpvnchbjx_.cpp:56:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         result[i] = max_val.m128i_i32[0];\n      |                     ~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6w59oi1z.cpp:53:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'rolling_max_simd' that is compiled without support for 'sse4.1'\n   53 |             max_val = _mm_max_epi32(max_val, prev);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_67_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbefa6lk4.cpp:53:32: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         if(numbers[i] > max_val.m128i_i32[0]){\n      |                         ~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpbefa6lk4.cpp:56:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         result[i] = max_val.m128i_i32[0];\n      |                     ~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_68_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpb0et1_2t.cpp:40:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   40 |             len_vec = _mm_insert_epi32(len_vec, static_cast<int>(s.length()), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpb0et1_2t.cpp:49:5: error: no matching function for call to '_mm_storeu_si128'\n   49 |     _mm_storeu_si128(&max_len_scalar, max_len);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'int *' to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n[REDACTED]/tmpb0et1_2t.cpp:50:5: error: no matching function for call to '_mm_storeu_si128'\n   50 |     _mm_storeu_si128(&max_idx_scalar, max_idx);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'size_t *' (aka 'unsigned long *') to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwmm_e8xo.cpp:42:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   42 |             len_vec = _mm_insert_epi32(len_vec, static_cast<int>(s.length()), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpauu9nm9_.cpp:43:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   43 |             lengths = _mm_insert_epi32(lengths, len, j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpauu9nm9_.cpp:51:5: error: no matching function for call to '_mm_storeu_si128'\n   51 |     _mm_storeu_si128(&max_len_scalar, max_len);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'int *' to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n[REDACTED]/tmpauu9nm9_.cpp:52:5: error: no matching function for call to '_mm_storeu_si128'\n   52 |     _mm_storeu_si128(&max_idx_scalar, max_idx);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'size_t *' (aka 'unsigned long *') to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzagh33tm.cpp:40:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   40 |             len_vec = _mm_insert_epi32(len_vec, static_cast<int>(s.length()), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmpzagh33tm.cpp:51:5: error: no matching function for call to '_mm_storeu_si128'\n   51 |     _mm_storeu_si128(&max_idx, max_idx_vec);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'int *' to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_69_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp04hpkse2.cpp:40:23: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   40 |             len_vec = _mm_insert_epi32(len_vec, static_cast<int>(s.length()), j);\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n[REDACTED]/tmp04hpkse2.cpp:49:5: error: no matching function for call to '_mm_storeu_si128'\n   49 |     _mm_storeu_si128(&max_len_scalar, max_len);\n      |     ^~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3818:43: note: candidate function not viable: no known conversion from 'int *' to '__m128i_u *' for 1st argument\n 3818 | static __inline__ void __DEFAULT_FN_ATTRS _mm_storeu_si128(__m128i_u *__p,\n      |                                           ^                ~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpec7ohk1e.cpp:34:12: error: use of undeclared identifier '__gcd'; did you mean 'std::__gcd'?\n   34 |     return __gcd(a, b);\n      |            ^~~~~\n      |            std::__gcd\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:1185:5: note: 'std::__gcd' declared here\n 1185 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^\n1 error generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpufwpi5v0.cpp:35:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   35 |     while (!_mm_movemask_epi8(_mm_cmpeq_epi64(v_a, v_b))) {\n      |                               ^\n[REDACTED]/tmpufwpi5v0.cpp:37:34: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   37 |         v_r = _mm_and_si128(v_r, _mm_cmpgt_epi64(v_r, v_b));\n      |                                  ^\n[REDACTED]/tmpufwpi5v0.cpp:39:15: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'avx512vl'\n   39 |         v_a = _mm_min_epi64(v_a, v_b);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpr5s112rn.cpp:35:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   35 |     while (!_mm_movemask_epi8(_mm_cmpeq_epi64(a_vec, b_vec))) {\n      |                               ^\n[REDACTED]/tmpr5s112rn.cpp:36:27: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   36 |         __m128i greater = _mm_cmpgt_epi64(a_vec, b_vec);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9tukn3iw.cpp:35:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   35 |     while (!_mm_movemask_epi8(_mm_cmpeq_epi64(a_vec, b_vec))) {\n      |                               ^\n[REDACTED]/tmp9tukn3iw.cpp:36:27: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   36 |         __m128i gt_mask = _mm_cmpgt_epi64(a_vec, b_vec);\n      |                           ^\n[REDACTED]/tmp9tukn3iw.cpp:38:17: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   38 |         a_vec = _mm_blendv_epi8(a_vec, diff_vec, gt_mask);\n      |                 ^\n[REDACTED]/tmp9tukn3iw.cpp:39:17: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   39 |         b_vec = _mm_blendv_epi8(b_vec, diff_vec, _mm_xor_si128(gt_mask, _mm_set1_epi64x(-1)));\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_70_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkk19fxwb.cpp:35:31: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   35 |     while (!_mm_movemask_epi8(_mm_cmpeq_epi64(a_vec, b_vec))) {\n      |                               ^\n[REDACTED]/tmpkk19fxwb.cpp:36:27: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.2'\n   36 |         __m128i gt_mask = _mm_cmpgt_epi64(a_vec, b_vec);\n      |                           ^\n[REDACTED]/tmpkk19fxwb.cpp:39:17: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   39 |         a_vec = _mm_blendv_epi8(a_vec, diff_vec, gt_mask);\n      |                 ^\n[REDACTED]/tmpkk19fxwb.cpp:40:17: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'greatest_common_divisor_simd' that is compiled without support for 'sse4.1'\n   40 |         b_vec = _mm_blendv_epi8(b_vec, diff_vec, _mm_xor_si128(gt_mask, _mm_set1_epi64x(-1)));\n      |                 ^\n4 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpniv9xfs1.cpp:47:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   47 |         __m128 abs_diff0 = _mm_abs_ps(diff0);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpniv9xfs1.cpp:48:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   48 |         __m128 abs_diff1 = _mm_abs_ps(diff1);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpniv9xfs1.cpp:49:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   49 |         __m128 abs_diff2 = _mm_abs_ps(diff2);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpniv9xfs1.cpp:50:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   50 |         __m128 abs_diff3 = _mm_abs_ps(diff3);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpniv9xfs1.cpp:51:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   51 |         __m128 abs_diff4 = _mm_abs_ps(diff4);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpniv9xfs1.cpp:52:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   52 |         __m128 abs_diff5 = _mm_abs_ps(diff5);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n6 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxzibrub7.cpp:39:16: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   39 |         diff = _mm_abs_ps(diff);\n      |                ^~~~~~~~~~\n      |                _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpxzibrub7.cpp:54:41: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   54 |             result.push_back(result_pair.m128_f32[j]);\n      |                              ~~~~~~~~~~~^~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpa5h3914s.cpp:47:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   47 |         __m128 abs_diff0 = _mm_abs_ps(diff0);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpa5h3914s.cpp:48:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   48 |         __m128 abs_diff1 = _mm_abs_ps(diff1);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpa5h3914s.cpp:49:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   49 |         __m128 abs_diff2 = _mm_abs_ps(diff2);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpa5h3914s.cpp:50:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   50 |         __m128 abs_diff3 = _mm_abs_ps(diff3);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpa5h3914s.cpp:51:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   51 |         __m128 abs_diff4 = _mm_abs_ps(diff4);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpa5h3914s.cpp:52:28: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   52 |         __m128 abs_diff5 = _mm_abs_ps(diff5);\n      |                            ^~~~~~~~~~\n      |                            _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n6 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpz8cl0s1f.cpp:41:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   41 |         __m128 abs_diff01 = _mm_abs_ps(diff01);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:44:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   44 |         __m128 abs_diff02 = _mm_abs_ps(diff02);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:47:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   47 |         __m128 abs_diff03 = _mm_abs_ps(diff03);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:50:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   50 |         __m128 abs_diff12 = _mm_abs_ps(diff12);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:53:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   53 |         __m128 abs_diff13 = _mm_abs_ps(diff13);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:56:29: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   56 |         __m128 abs_diff23 = _mm_abs_ps(diff23);\n      |                             ^~~~~~~~~~\n      |                             _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmpz8cl0s1f.cpp:73:16: error: use of undeclared identifier '_mm_cmpeq_PS'\n   73 |         mask = _mm_cmpeq_PS(min_diff_temp, abs_diff12);\n      |                ^\n[REDACTED]/tmpz8cl0s1f.cpp:76:16: error: use of undeclared identifier '_mm_cmpeq_PS'\n   76 |         mask = _mm_cmpeq_PS(min_diff_temp, abs_diff13);\n      |                ^\n[REDACTED]/tmpz8cl0s1f.cpp:79:16: error: use of undeclared identifier '_mm_cmpeq_PS'\n   79 |         mask = _mm_cmpeq_PS(min_diff_temp, abs_diff23);\n      |                ^\n9 errors generated.\n"}
{"task_id": "SimdBench_71_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp96dqdc8w.cpp:39:30: error: use of undeclared identifier '_mm_abs_ps'; did you mean '_mm_abs_ph'?\n   39 |         __m128 abs_diff_ab = _mm_abs_ps(diff_ab);\n      |                              ^~~~~~~~~~\n      |                              _mm_abs_ph\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlfp16intrin.h:322:49: note: '_mm_abs_ph' declared here\n  322 | static __inline__ __m128h __DEFAULT_FN_ATTRS128 _mm_abs_ph(__m128h __A) {\n      |                                                 ^\n[REDACTED]/tmp96dqdc8w.cpp:54:41: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   54 |             result.push_back(result_pair.m128_f32[j]);\n      |                              ~~~~~~~~~~~^~~~~~~~~\n[REDACTED]/tmp96dqdc8w.cpp:55:41: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   55 |             result.push_back(result_pair.m128_f32[j+1]);\n      |                              ~~~~~~~~~~~^~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmyc93omc.cpp:62:22: error: assigning to 'value_type' (aka 'float') from incompatible type '__m128' (vector of 4 'float' values)\n   62 |         numbers[i] = (numbers[i] != min_val) ? (1.0f - (numbers[i] / max_val)) : 0.0f;\n      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "runtime failed: double free or corruption (out)\n"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_72_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqszc5qfl.cpp:30:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   30 |     while(!_mm_movemask_epi8(_mm_cmpeq_epi64(_mm_mul_epu32(divisor, _mm_set1_epi64x(2)), num))) {\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbuoo_ei_.cpp:30:66: error: use of undeclared identifier '_mm_rem_epu64'\n   30 |     while(_mm_movemask_epi8(_mm_cmpeq_epi64(_mm_setzero_si128(), _mm_rem_epu64(input, divisor))) == 0){\n      |                                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp35mxi2y2.cpp:30:66: error: use of undeclared identifier '_mm_rem_epu64'\n   30 |     while(_mm_movemask_epi8(_mm_cmpeq_epi64(_mm_setzero_si128(), _mm_rem_epu64(input, divisor)))) {\n      |                                                                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5kj2epxx.cpp:30:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   30 |     while(!_mm_movemask_epi8(_mm_cmpeq_epi64(_mm_mul_epu32(divisor, _mm_set_epi64x(1, 1)), num))){\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_73_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpca6b3ejv.cpp:31:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'largest_divisor_simd' that is compiled without support for 'sse4.1'\n   31 |     while(!_mm_movemask_epi8(_mm_cmpeq_epi64(num, _mm_mul_epu32(divisor, one)))){\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu6vdvqj2.cpp:57:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   57 |         __m128i remainder = _mm_rem_epi32(num, divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpu6vdvqj2.cpp:64:31: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   64 |         __m128i updated_num = _mm_div_epi32(num, divisor);\n      |                               ^~~~~~~~~~~~~\n      |                               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgcu4hd_g.cpp:47:60: error: use of undeclared identifier 'one'\n   47 |     __m128i divisible = _mm_cmpeq_epi32(_mm_and_si128(num, one), zero);\n      |                                                            ^\n[REDACTED]/tmpgcu4hd_g.cpp:50:15: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   50 |         num = _mm_div_epi32(num, two);\n      |               ^~~~~~~~~~~~~\n      |               _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpgcu4hd_g.cpp:51:56: error: use of undeclared identifier 'one'\n   51 |         divisible = _mm_cmpeq_epi32(_mm_and_si128(num, one), zero);\n      |                                                        ^\n[REDACTED]/tmpgcu4hd_g.cpp:57:24: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   57 |         __m128i temp = _mm_div_epi32(num, current);\n      |                        ^~~~~~~~~~~~~\n      |                        _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpgcu4hd_g.cpp:58:29: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   58 |         __m128i remainder = _mm_rem_epi32(num, current);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n5 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp22_dmxmd.cpp:46:12: error: value of type '__m128i' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   46 |     while (_mm_cmpgt_epi32(limit, i)) {\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp22_dmxmd.cpp:48:26: error: no matching function for call to '_mm_set1_epi32'\n   48 |         __m128i factor = _mm_set1_epi32(i);\n      |                          ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3618:46: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'int' for 1st argument\n 3618 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set1_epi32(int __i) {\n      |                                              ^              ~~~~~~~\n[REDACTED]/tmp22_dmxmd.cpp:51:21: error: no matching member function for call to 'push_back'\n   51 |             factors.push_back(factor);\n      |             ~~~~~~~~^~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1281:7: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'const value_type' (aka 'const int') for 1st argument\n 1281 |       push_back(const value_type& __x)\n      |       ^         ~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1298:7: note: candidate function not viable: no known conversion from '__m128i' (vector of 2 'long long' values) to 'value_type' (aka 'int') for 1st argument\n 1298 |       push_back(value_type&& __x)\n      |       ^         ~~~~~~~~~~~~~~~~\n[REDACTED]/tmp22_dmxmd.cpp:52:22: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   52 |             number = _mm_div_epi32(number, factor);\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n4 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd61x9smh.cpp:43:21: error: use of undeclared identifier '_mm_sqrt_epu32'\n   43 |     __m128i limit = _mm_sqrt_epu32(_mm_set1_epi32(n));\n      |                     ^\n[REDACTED]/tmpd61x9smh.cpp:53:82: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |             factors.insert(factors.end(), 4 - __builtin_popcount(mask), candidate.m128i_i32[bit]);\n      |                                                                         ~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpd61x9smh.cpp:54:22: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   54 |             number = _mm_div_epi32(number, _mm_shuffle_epi32(candidate, _MM_SHUFFLE(0, 0, 0, 0)));\n      |                      ^~~~~~~~~~~~~\n      |                      _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_74_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgdnj3mo6.cpp:53:23: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   53 |         __m128i rem = _mm_rem_epi32(num, current);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n[REDACTED]/tmpgdnj3mo6.cpp:57:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   57 |             num = _mm_div_epi32(num, current);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_75_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxfhpsl08.cpp:34:63: error: use of undeclared identifier '_mm_cmple_epi32'; did you mean '_mm_cmplt_epi32'?\n   34 |     for (__m128i limit = _mm_set1_epi32(n); _mm_movemask_epi8(_mm_cmple_epi32(numbers, limit)) != 0; ){\n      |                                                               ^~~~~~~~~~~~~~~\n      |                                                               _mm_cmplt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3180:46: note: '_mm_cmplt_epi32' declared here\n 3180 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi32(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpxfhpsl08.cpp:39:25: error: use of undeclared identifier '_mm_rem_epu32'\n   39 |             remainder = _mm_rem_epu32(numbers, div);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo2pmv0xl.cpp:38:24: error: use of undeclared identifier '_mm_rem_epu32'\n   38 |         __m128i mod1 = _mm_rem_epu32(numbers, factor);\n      |                        ^\n[REDACTED]/tmpo2pmv0xl.cpp:39:24: error: use of undeclared identifier '_mm_rem_epu32'\n   39 |         __m128i mod2 = _mm_rem_epu32(numbers, next_factor);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0ugt0lx0.cpp:38:24: error: use of undeclared identifier '_mm_rem_epu32'\n   38 |         __m128i mod1 = _mm_rem_epu32(numbers, factor);\n      |                        ^\n[REDACTED]/tmp0ugt0lx0.cpp:39:24: error: use of undeclared identifier '_mm_rem_epu32'\n   39 |         __m128i mod2 = _mm_rem_epu32(numbers, next_factor);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_76_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx05q1rnt.cpp:34:30: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   34 |     while (_mm_movemask_epi8(_mm_cmplt_epi64(v_i, v_n)) != 0){\n      |                              ^~~~~~~~~~~~~~~\n      |                              _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpx05q1rnt.cpp:35:25: error: use of undeclared identifier '_mm_rem_epi64'\n   35 |         __m128i v_mod = _mm_rem_epi64(v_n, v_i);\n      |                         ^\n2 errors generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdx6dxv23.cpp:68:32: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   68 |             __m128i reversed = _mm_shuffle_epi8(vec, _mm_set_epi8(15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0));\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_77_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyg_lc_sq.cpp:55:14: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   55 |         v4 = _mm_min_epi32(v4, v5);\n      |              ^\n[REDACTED]/tmpyg_lc_sq.cpp:56:14: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   56 |         v6 = _mm_max_epi32(v6, v7);\n      |              ^\n[REDACTED]/tmpyg_lc_sq.cpp:57:14: error: '__builtin_ia32_vpermilps' needs target feature avx\n   57 |         v5 = _mm_permute_ps(_mm_castsi128_ps(v4), 0x55);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1102:12: note: expanded from macro '_mm_permute_ps'\n 1102 |   ((__m128)__builtin_ia32_vpermilps((__v4sf)(__m128)(A), (int)(C)))\n      |            ^\n[REDACTED]/tmpyg_lc_sq.cpp:58:14: error: '__builtin_ia32_vpermilps' needs target feature avx\n   58 |         v7 = _mm_permute_ps(_mm_castsi128_ps(v6), 0x55);\n      |              ^\n/usr/lib/llvm-18/lib/clang/18/include/avxintrin.h:1102:12: note: expanded from macro '_mm_permute_ps'\n 1102 |   ((__m128)__builtin_ia32_vpermilps((__v4sf)(__m128)(A), (int)(C)))\n      |            ^\n[REDACTED]/tmpyg_lc_sq.cpp:60:14: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   60 |         v4 = _mm_max_epi32(v4, v5);\n      |              ^\n[REDACTED]/tmpyg_lc_sq.cpp:61:14: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   61 |         v6 = _mm_min_epi32(v6, v7);\n      |              ^\n6 errors generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgl3wu0a_.cpp:63:26: error: always_inline function '_mm_minpos_epu16' requires target feature 'sse4.1', but would be inlined into function 'sort_third_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i sorted = _mm_minpos_epu16(_mm_packus_epi16(v0, v1));\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_78_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpiwl85fic.cpp:51:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   51 |             if(a > b){\n      |                ^~~~~\n[REDACTED]/tmpiwl85fic.cpp:55:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   55 |             if(c > d){\n      |                ^~~~~\n[REDACTED]/tmpiwl85fic.cpp:59:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   59 |             if(b > d){\n      |                ^~~~~\n[REDACTED]/tmpiwl85fic.cpp:64:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   64 |             if(a > c){\n      |                ^~~~~\n[REDACTED]/tmpiwl85fic.cpp:70:37: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   70 |             sorted = _mm_set_epi32(d.m128i_i32[0], c.m128i_i32[1], b.m128i_i32[2], a.m128i_i32[3]);\n      |                                    ~^~~~~~~~~~\n[REDACTED]/tmpiwl85fic.cpp:70:53: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   70 |             sorted = _mm_set_epi32(d.m128i_i32[0], c.m128i_i32[1], b.m128i_i32[2], a.m128i_i32[3]);\n      |                                                    ~^~~~~~~~~~\n[REDACTED]/tmpiwl85fic.cpp:70:69: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   70 |             sorted = _mm_set_epi32(d.m128i_i32[0], c.m128i_i32[1], b.m128i_i32[2], a.m128i_i32[3]);\n      |                                                                    ~^~~~~~~~~~\n[REDACTED]/tmpiwl85fic.cpp:70:85: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   70 |             sorted = _mm_set_epi32(d.m128i_i32[0], c.m128i_i32[1], b.m128i_i32[2], a.m128i_i32[3]);\n      |                                                                                    ~^~~~~~~~~~\n8 errors generated.\n"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_79_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqp09guyj.cpp:45:46: error: use of undeclared identifier '_mm_mod_epi32'\n   45 |         __m128i divisible1 = _mm_cmpeq_epi32(_mm_mod_epi32(numbers, divisor1), _mm_setzero_si128());\n      |                                              ^\n[REDACTED]/tmpqp09guyj.cpp:46:46: error: use of undeclared identifier '_mm_mod_epi32'\n   46 |         __m128i divisible2 = _mm_cmpeq_epi32(_mm_mod_epi32(numbers, divisor2), _mm_setzero_si128());\n      |                                              ^\n[REDACTED]/tmpqp09guyj.cpp:49:61: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   49 |         __m128i digits = _mm_and_si128(_mm_set1_epi32(0xF), _mm_div_epi32(numbers, _mm_set1_epi32(10)));\n      |                                                             ^~~~~~~~~~~~~\n      |                                                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpqp09guyj.cpp:53:42: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   53 |         count += _mm_popcnt_epi32(sevens).m128i_u32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphq5scfwe.cpp:44:27: error: no matching function for call to '_mm_set_epi32'\n   44 |         __m128i numbers = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmphq5scfwe.cpp:55:34: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   55 |             if(local_count[j] && _mm_extract_epi32(div_mask, j)){\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpq8_p_cko.cpp:44:24: error: no matching function for call to '_mm_set_epi32'\n   44 |         __m128i nums = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                        ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpq8_p_cko.cpp:46:49: error: use of undeclared identifier '_mm_mod_epi32'\n   46 |         __m128i mod1 = _mm_and_si128(div1_mask, _mm_mod_epi32(nums, divisor1));\n      |                                                 ^\n[REDACTED]/tmpq8_p_cko.cpp:47:49: error: use of undeclared identifier '_mm_mod_epi32'\n   47 |         __m128i mod2 = _mm_and_si128(div1_mask, _mm_mod_epi32(nums, divisor2));\n      |                                                 ^\n[REDACTED]/tmpq8_p_cko.cpp:51:15: error: assigning to 'int' from incompatible type '__m128i' (vector of 2 'long long' values)\n   51 |         count += _mm_popcnt_epi32(sevens);\n      |               ^  ~~~~~~~~~~~~~~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4xei_8xe.cpp:45:45: error: use of undeclared identifier '_mm_mod_epi32'\n   45 |         __m128i div1_mask = _mm_cmplt_epi32(_mm_mod_epi32(nums, divisor1), _mm_setzero_si128());\n      |                                             ^\n[REDACTED]/tmp4xei_8xe.cpp:46:45: error: use of undeclared identifier '_mm_mod_epi32'\n   46 |         __m128i div2_mask = _mm_cmplt_epi32(_mm_mod_epi32(nums, divisor2), _mm_setzero_si128());\n      |                                             ^\n[REDACTED]/tmp4xei_8xe.cpp:56:48: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         count += _mm_popcnt_epi32(valid_sevens).m128i_u32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_80_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe53b28if.cpp:45:45: error: use of undeclared identifier '_mm_rem_epu32'\n   45 |         __m128i div1_mask = _mm_cmplt_epi32(_mm_rem_epu32(nums, divisor1), threshold);\n      |                                             ^\n[REDACTED]/tmpe53b28if.cpp:46:45: error: use of undeclared identifier '_mm_rem_epu32'\n   46 |         __m128i div2_mask = _mm_cmplt_epi32(_mm_rem_epu32(nums, divisor2), threshold);\n      |                                             ^\n[REDACTED]/tmpe53b28if.cpp:48:26: error: use of undeclared identifier '_mm_cvtepu32_epi8'; did you mean '_mm_cvtepi32_epi8'?\n   48 |         __m128i digits = _mm_cvtepu32_epi8(nums);\n      |                          ^~~~~~~~~~~~~~~~~\n      |                          _mm_cvtepi32_epi8\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:7540:1: note: '_mm_cvtepi32_epi8' declared here\n 7540 | _mm_cvtepi32_epi8 (__m128i __A)\n      | ^\n[REDACTED]/tmpe53b28if.cpp:50:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   50 |         __m128i seven_count = _mm_movemask_epi8(seven_mask);\n      |                 ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpe53b28if.cpp:51:37: error: cannot initialize a parameter of type 'unsigned int' with an rvalue of type '__m128i' (vector of 2 'long long' values)\n   51 |         count += __builtin_popcount(seven_count & _mm_movemask_epi8(div_mask));\n      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n5 errors generated.\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_81_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw52ddj4e.cpp:62:42: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   62 |         __m128 v0 = _mm_load_ps(&input[i].m128_f32[0]);\n      |                                  ~~~~~~~~^~~~~~~~~\n[REDACTED]/tmpw52ddj4e.cpp:63:42: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   63 |         __m128 v1 = _mm_load_ps(&input[i].m128_f32[4]);\n      |                                  ~~~~~~~~^~~~~~~~~\n[REDACTED]/tmpw52ddj4e.cpp:70:32: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   70 |         _mm_store_ps(&output[i].m128_f32[0], low0);\n      |                       ~~~~~~~~~^~~~~~~~~\n[REDACTED]/tmpw52ddj4e.cpp:71:32: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   71 |         _mm_store_ps(&output[i].m128_f32[4], high0);\n      |                       ~~~~~~~~~^~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_82_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_83_SSE", "passed": false, "result": "runtime failed: malloc(): corrupted top size\n"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_84_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3veuj5c7.cpp:45:50: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |             if(_mm_movemask_epi8(_mm_cmpeq_epi32(_mm_shuffle_epi32(current_vec, _MM_SHUFFLE(j,j,j,j)), neg_current_vec)) & 0x0F){\n      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5925p3w8.cpp:46:30: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   46 |         __m128i div_result = _mm_div_epu32(dividend, divisor);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp5925p3w8.cpp:53:24: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   53 |         int8_t digit = _mm_extract_epi8(remainders, i);\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "no intrinsic in code"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw0k2nyqu.cpp:53:30: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   53 |         __m128i div_result = _mm_div_epu32(x_vec, base_vec);\n      |                              ^~~~~~~~~~~~~\n      |                              _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmpw0k2nyqu.cpp:60:28: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   60 |             char c = '0' + _mm_extract_epi8(remainder_vec, i);\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_85_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_631xx5s.cpp:38:27: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i rev_vec = _mm_shuffle_epi8(vec, _mm_setr_epi8(\n      |                           ^\n[REDACTED]/tmp_631xx5s.cpp:41:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'sse4.1'\n   41 |         if(!_mm_test_all_zeros(_mm_cmpeq_epi8(vec, rev_vec), _mm_set1_epi8(-1))){\n      |             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpto8_52v3.cpp:42:20: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   42 |         backward = _mm_alignr_epi8(forward, forward, 7);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpto8_52v3.cpp:45:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'sse4.1'\n   45 |         if(!_mm_testz_si128(_mm_cmpeq_epi8(forward, backward), mask)){\n      |             ^\n[REDACTED]/tmpto8_52v3.cpp:52:20: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   52 |         backward = _mm_alignr_epi8(forward, forward, 7);\n      |                    ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpto8_52v3.cpp:55:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'sse4.1'\n   55 |         if(!_mm_testz_si128(_mm_cmpeq_epi8(forward, backward), mask)){\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4x_znpd2.cpp:38:31: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i forward_rev = _mm_shuffle_epi8(forward, _mm_set_epi8(\n      |                               ^\n[REDACTED]/tmp4x_znpd2.cpp:41:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_palindrome_simd' that is compiled without support for 'sse4.1'\n   41 |         if(!_mm_test_all_zeros(_mm_xor_si128(forward_rev, backward), _mm_set1_epi8(-1))){\n      |             ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1185:34: note: expanded from macro '_mm_test_all_zeros'\n 1185 | #define _mm_test_all_zeros(M, V) _mm_testz_si128((M), (V))\n      |                                  ^\n2 errors generated.\n"}
{"task_id": "SimdBench_86_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_87_SSE", "passed": true, "result": "passed"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_zzlnm5j.cpp:53:55: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   53 |         decoded = _mm_sub_epi8(shifted, _mm_mul_epu32(_mm_div_epu32(_mm_cvtepu8_epi32(shifted), mod), mod));\n      |                                                       ^~~~~~~~~~~~~\n      |                                                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp2jzkw2cp.cpp:48:19: error: use of undeclared identifier '_mm_mod_epu8'\n   48 |         decoded = _mm_mod_epu8(decoded, mod);\n      |                   ^\n1 error generated.\n"}
{"task_id": "SimdBench_87_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6y0_r7v9.cpp:50:55: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   50 |         decoded = _mm_add_epi8(decoded, _mm_mul_epu32(_mm_div_epu32(_mm_cvtepu8_epi32(decoded), mod), mod));\n      |                                                       ^~~~~~~~~~~~~\n      |                                                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpifg0tr2m.cpp:33:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   33 |         if(!_mm_testz_si128(cmp, cmp)) return false;\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppxrlhiph.cpp:33:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   33 |         if(!_mm_testz_si128(cmp, cmp)) return false;\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf0et16c2.cpp:33:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   33 |         if(!_mm_testz_si128(cmp, cmp)) return false;\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpck3m_r2a.cpp:33:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   33 |         if(!_mm_testz_si128(cmp, cmp)) return false;\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_88_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyaazz5g0.cpp:33:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'below_threshold_simd' that is compiled without support for 'sse4.1'\n   33 |         if(!_mm_testz_si128(cmp, cmp)) return false;\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkmobaevi.cpp:55:42: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   55 |         balance = _mm_add_epi32(balance, _mm_cvtepi8_epi32(open));\n      |                                          ^\n[REDACTED]/tmpkmobaevi.cpp:56:42: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   56 |         balance = _mm_sub_epi32(balance, _mm_cvtepi8_epi32(close));\n      |                                          ^\n[REDACTED]/tmpkmobaevi.cpp:60:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   60 |         if(!_mm_testz_si128(overflow, overflow)){\n      |             ^\n[REDACTED]/tmpkmobaevi.cpp:65:29: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   65 |     __m128i final_balance = _mm_hadd_epi32(balance, balance);\n      |                             ^\n[REDACTED]/tmpkmobaevi.cpp:66:21: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'ssse3'\n   66 |     final_balance = _mm_hadd_epi32(final_balance, final_balance);\n      |                     ^\n5 errors generated.\n"}
{"task_id": "SimdBench_89_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyr909to1.cpp:55:42: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   55 |         balance = _mm_add_epi32(balance, _mm_cvtepi8_epi32(open));\n      |                                          ^\n[REDACTED]/tmpyr909to1.cpp:56:42: error: always_inline function '_mm_cvtepi8_epi32' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   56 |         balance = _mm_sub_epi32(balance, _mm_cvtepi8_epi32(close));\n      |                                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpx28ey5sy.cpp:62:26: error: argument to '__builtin_ia32_vec_set_v16qi' must be a constant integer\n   62 |             last_chars = _mm_insert_epi8(last_chars, brackets[i + j], j);\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n  924 |                                          (int)(N)))\n      |                                          ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphlds2s5k.cpp:60:12: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'correct_bracketing_simd' that is compiled without support for 'sse4.1'\n   60 |     return _mm_testz_si128(acc, acc);\n      |            ^\n1 error generated.\n"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_90_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8fmfcrgq.cpp:50:48: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   50 |         __m128 coeff0 = _mm_loadu_ps(&xs_ptr[i].m128_f32[0]);\n      |                                       ~~~~~~~~~^~~~~~~~~\n[REDACTED]/tmp8fmfcrgq.cpp:51:50: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   51 |         __m128 coeff1 = _mm_loadu_ps(&xs_ptr[i+1].m128_f32[0]);\n      |                                       ~~~~~~~~~~~^~~~~~~~~\n[REDACTED]/tmp8fmfcrgq.cpp:58:34: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   58 |         _mm_storeu_ps(&res_ptr[i].m128_f32[0], der0);\n      |                        ~~~~~~~~~~^~~~~~~~~\n[REDACTED]/tmp8fmfcrgq.cpp:59:36: error: member reference base type '__m128' (vector of 4 'float' values) is not a structure or union\n   59 |         _mm_storeu_ps(&res_ptr[i+1].m128_f32[0], der1);\n      |                        ~~~~~~~~~~~~^~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "runtime failed: Fatal glibc error: malloc.c:2599 (sysmalloc): assertion failed: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7gy5j41y.cpp:49:24: error: no matching function for call to '_mm_loadu_ps'\n   49 |         __m128 coeff = _mm_loadu_ps(coeffs + i);\n      |                        ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1748:1: note: candidate function not viable: no known conversion from '__m128 *' to 'const float *' for 1st argument\n 1748 | _mm_loadu_ps(const float *__p)\n      | ^            ~~~~~~~~~~~~~~~~\n[REDACTED]/tmp7gy5j41y.cpp:52:9: error: no matching function for call to '_mm_storeu_ps'\n   52 |         _mm_storeu_ps(res + i, der);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp_5cwhj1.cpp:50:22: error: no matching function for call to '_mm_loadu_ps'\n   50 |         __m128 vec = _mm_loadu_ps(input + i);\n      |                      ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1748:1: note: candidate function not viable: no known conversion from '__m128 *' to 'const float *' for 1st argument\n 1748 | _mm_loadu_ps(const float *__p)\n      | ^            ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpp_5cwhj1.cpp:53:9: error: no matching function for call to '_mm_storeu_ps'\n   53 |         _mm_storeu_ps(output + i, der);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_91_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp9xm83j3.cpp:50:22: error: no matching function for call to '_mm_loadu_ps'\n   50 |         __m128 vec = _mm_loadu_ps(input + i);\n      |                      ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1748:1: note: candidate function not viable: no known conversion from '__m128 *' to 'const float *' for 1st argument\n 1748 | _mm_loadu_ps(const float *__p)\n      | ^            ~~~~~~~~~~~~~~~~\n[REDACTED]/tmpp9xm83j3.cpp:53:9: error: no matching function for call to '_mm_storeu_ps'\n   53 |         _mm_storeu_ps(output + i, mul);\n      |         ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/xmmintrin.h:1991:1: note: candidate function not viable: no known conversion from '__m128 *' to 'float *' for 1st argument\n 1991 | _mm_storeu_ps(float *__p, __m128 __a)\n      | ^             ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf9gqsysw.cpp:57:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   57 |         count += _mm_popcnt_u32(_mm_movemask_epi8(total_match));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5kzwrnf1.cpp:56:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   56 |         count += _mm_popcnt_u32(_mm_movemask_epi8(lower));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpak3ytdku.cpp:57:18: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'vowels_count_simd' that is compiled without support for 'popcnt'\n   57 |         count += _mm_popcnt_u32(_mm_movemask_epi8(total_match));\n      |                  ^\n1 error generated.\n"}
{"task_id": "SimdBench_92_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6r9oic40.cpp:56:40: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |         count += _mm_popcnt_epi8(total).m128i_u32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqy4z2ik4.cpp:38:17: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'int'\n   38 |         __m128i mask = _mm_movemask_epi8(valid);             // Create a mask for valid characters\n      |                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpqy4z2ik4.cpp:39:12: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   39 |         if(mask == 0xFFFF){\n      |            ^~~~~~~~~~~~~~\n[REDACTED]/tmpqy4z2ik4.cpp:43:40: error: cannot initialize a parameter of type 'unsigned int' with an lvalue of type '__m128i' (vector of 2 'long long' values)\n   43 |         str += 16 - __builtin_popcount(mask);                // Move pointer forward\n      |                                        ^~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsq5plblw.cpp:30:26: error: no matching function for call to '_mm_set_epi8'\n   30 |     __m128i upper_mask = _mm_set_epi8(\n      |                          ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 64 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpelctxeui.cpp:30:26: error: no matching function for call to '_mm_set_epi8'\n   30 |     __m128i upper_mask = _mm_set_epi8(\n      |                          ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 32 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_93_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpc3wcctoo.cpp:65:19: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   65 |         int val = _mm_extract_epi32(min_even, i);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpc3wcctoo.cpp:66:19: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   66 |         int idx = _mm_extract_epi32(min_index, i);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmpc3wcctoo.cpp:67:18: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   67 |         if(val < _mm_extract_epi32(min_even, i+1)){\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoy0sbzaj.cpp:73:28: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   73 |         if(min_even_indices.m128i_i32[i] != -1){\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpoy0sbzaj.cpp:74:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   74 |             result.push_back(min_even_values.m128i_i32[i]);\n      |                              ~~~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpoy0sbzaj.cpp:75:46: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   75 |             result.push_back(min_even_indices.m128i_i32[i]);\n      |                              ~~~~~~~~~~~~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp_z2ugt3n.cpp:55:48: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |         if(arr[i] % 2 == 0 && arr[i] < min_even.m128i_i32[0]){\n      |                                        ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp_z2ugt3n.cpp:56:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |             min_even.m128i_i32[0] = arr[i];\n      |             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp_z2ugt3n.cpp:57:22: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   57 |             min_index.m128i_i32[0] = i;\n      |             ~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp_z2ugt3n.cpp:61:17: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   61 |     if(min_index.m128i_i32[0] == -1) return {};\n      |        ~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp_z2ugt3n.cpp:62:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   62 |     return {min_even.m128i_i32[0], min_index.m128i_i32[0]};\n      |             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp_z2ugt3n.cpp:62:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   62 |     return {min_even.m128i_i32[0], min_index.m128i_i32[0]};\n      |                                    ~~~~~~~~~^~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyslckz25.cpp:48:48: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |         if(arr[j] % 2 == 0 && arr[j] < min_even.m128i_u32[0]){\n      |                                        ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpyslckz25.cpp:49:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   49 |             min_even.m128i_u32[0] = arr[j];\n      |             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpyslckz25.cpp:50:22: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   50 |             min_index.m128i_u32[0] = j;\n      |             ~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpyslckz25.cpp:54:16: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |     if(min_even.m128i_u32[0] == 0x7FFFFFFF) return {};\n      |        ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpyslckz25.cpp:55:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |     return {min_even.m128i_u32[0], min_index.m128i_u32[0]};\n      |             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmpyslckz25.cpp:55:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   55 |     return {min_even.m128i_u32[0], min_index.m128i_u32[0]};\n      |                                    ~~~~~~~~~^~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_94_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9hmb4fmp.cpp:54:48: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   54 |         if(arr[i] % 2 == 0 && arr[i] < min_even.m128i_u32[0]){\n      |                                        ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp9hmb4fmp.cpp:60:16: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   60 |     if(min_even.m128i_u32[0] == 0x7FFFFFFF) return {};\n      |        ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp9hmb4fmp.cpp:61:21: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   61 |     return {min_even.m128i_u32[0], min_index.m128i_u32[0]};\n      |             ~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp9hmb4fmp.cpp:61:45: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   61 |     return {min_even.m128i_u32[0], min_index.m128i_u32[0]};\n      |                                    ~~~~~~~~~^~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcsx_cmsn.cpp:113:30: error: cannot increment value of type '__m128i' (vector of 2 'long long' values)\n  113 |             histogram[lst[i]]++;\n      |             ~~~~~~~~~~~~~~~~~^\n[REDACTED]/tmpcsx_cmsn.cpp:119:12: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n  119 |         if(histogram[j] >= j){\n      |            ^~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_95_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmjqqtn_t.cpp:42:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   42 |         __m128i sum = _mm_hadd_epi32(vec, vec);\n      |                       ^\n[REDACTED]/tmpmjqqtn_t.cpp:43:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'will_it_fly_simd' that is compiled without support for 'ssse3'\n   43 |         sum = _mm_hadd_epi32(sum, sum);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppafgwo28.cpp:48:20: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   48 |     __m128i temp = _mm_shuffle_epi32(balance_vec, shuffle_mask);\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmppafgwo28.cpp:50:12: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   50 |     temp = _mm_shuffle_epi32(balance_vec, shuffle_mask);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmppafgwo28.cpp:52:12: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   52 |     temp = _mm_shuffle_epi32(balance_vec, shuffle_mask);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmppafgwo28.cpp:66:12: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   66 |     temp = _mm_shuffle_epi32(total_sum, shuffle_mask);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmppafgwo28.cpp:68:12: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   68 |     temp = _mm_shuffle_epi32(total_sum, shuffle_mask);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmppafgwo28.cpp:70:12: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   70 |     temp = _mm_shuffle_epi32(total_sum, shuffle_mask);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp56ycd66c.cpp:48:12: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   48 |         sum.m128i_i32[0] += q[i];\n      |         ~~~^~~~~~~~~~\n[REDACTED]/tmp56ycd66c.cpp:49:47: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   49 |         if(q[i] != q[n - i - 1]) balance_check.m128i_i32[0] &= 0;\n      |                                  ~~~~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmp56ycd66c.cpp:56:16: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int s = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |             ~~~^~~~~~~~~~\n[REDACTED]/tmp56ycd66c.cpp:56:35: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int s = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                ~~~^~~~~~~~~~\n[REDACTED]/tmp56ycd66c.cpp:56:54: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int s = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                   ~~~^~~~~~~~~~\n[REDACTED]/tmp56ycd66c.cpp:56:73: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   56 |     int s = sum.m128i_i32[0] + sum.m128i_i32[1] + sum.m128i_i32[2] + sum.m128i_i32[3];\n      |                                                                      ~~~^~~~~~~~~~\n6 errors generated.\n"}
{"task_id": "SimdBench_96_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfdkrsmxy.cpp:62:9: error: couldn't allocate input reg for constraint 'r'\n   62 |     asm(\"movd %0, %%eax\" : : \"r\"(sum) : \"%eax\");\n      |         ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6d6u7j7_.cpp:37:16: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'ssse3'\n   37 |         diff = _mm_abs_epi32(diff);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk1f2boca.cpp:37:16: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'ssse3'\n   37 |         diff = _mm_abs_epi32(diff);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnfx5wpv6.cpp:37:16: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'ssse3'\n   37 |         diff = _mm_abs_epi32(diff);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_97_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0q3fiv0k.cpp:37:16: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'smallest_change_simd' that is compiled without support for 'ssse3'\n   37 |         diff = _mm_abs_epi32(diff);\n      |                ^\n1 error generated.\n"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_98_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfvan0tvp.cpp:40:29: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   40 |     while(_mm_movemask_epi8(_mm_cmpgt_epi64(xx, nx)) != 0){\n      |                             ^\n[REDACTED]/tmpfvan0tvp.cpp:57:30: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   57 |         if(_mm_movemask_epi8(_mm_cmpeq_epi64(xx, nx)) != 0){\n      |                              ^\n[REDACTED]/tmpfvan0tvp.cpp:60:30: error: always_inline function '_mm_cmpgt_epi64' requires target feature 'sse4.2', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.2'\n   60 |         if(_mm_movemask_epi8(_mm_cmpgt_epi64(xx, nx)) == 0){\n      |                              ^\n3 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvcy9slmd.cpp:40:29: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   40 |     while(_mm_movemask_epi8(_mm_cmplt_epi64(xx, nx)) == 0){\n      |                             ^~~~~~~~~~~~~~~\n      |                             _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps5gt00hb.cpp:38:23: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'is_simple_power_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i cmp = _mm_cmpeq_epi64(current, limit);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp018fewbh.cpp:39:29: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   39 |     while(_mm_movemask_epi8(_mm_cmplt_epi64(vn, vx)) != 0){\n      |                             ^~~~~~~~~~~~~~~\n      |                             _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n[REDACTED]/tmp018fewbh.cpp:40:24: error: use of undeclared identifier '_mm_mod_epi64'\n   40 |         __m128i vmod = _mm_mod_epi64(vx, vn);\n      |                        ^\n[REDACTED]/tmp018fewbh.cpp:44:14: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   44 |         vx = _mm_div_epi64(vx, vn);\n      |              ^~~~~~~~~~~~~\n      |              _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n3 errors generated.\n"}
{"task_id": "SimdBench_99_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpp5wqz2ic.cpp:39:29: error: use of undeclared identifier '_mm_cmplt_epi64'; did you mean '_mm_cmpgt_epi64'?\n   39 |     while(_mm_movemask_epi8(_mm_cmplt_epi64(nx, xx)) != 0){\n      |                             ^~~~~~~~~~~~~~~\n      |                             _mm_cmpgt_epi64\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:2317:46: note: '_mm_cmpgt_epi64' declared here\n 2317 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmpgt_epi64(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp27pd4jgd.cpp:28:33: error: no matching function for call to '_mm_set_epi8'\n   28 |     const __m128i primes_mask = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 80 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm5quyxmu.cpp:28:33: error: no matching function for call to '_mm_set_epi8'\n   28 |     const __m128i primes_mask = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 64 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl9eh16s3.cpp:28:33: error: no matching function for call to '_mm_set_epi8'\n   28 |     const __m128i primes_mask = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 80 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpm25opvbn.cpp:28:33: error: no matching function for call to '_mm_set_epi8'\n   28 |     const __m128i primes_mask = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 80 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_100_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuztyims8.cpp:28:33: error: no matching function for call to '_mm_set_epi8'\n   28 |     const __m128i primes_mask = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 80 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpdqqrv6gy.cpp:40:47: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   40 |         __m128i mask3 = _mm_cmpeq_epi8(chunk, _mm_alignr_epi8(chunk, prev, 1));\n      |                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpdqqrv6gy.cpp:43:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   43 |         if(!_mm_testz_si128(any_match, any_match)){\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk0t8nkdd.cpp:40:47: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   40 |         __m128i mask3 = _mm_cmpeq_epi8(chunk, _mm_alignr_epi8(chunk, prev, 1));\n      |                                               ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmpk0t8nkdd.cpp:43:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_happy_simd' that is compiled without support for 'sse4.1'\n   43 |         if(!_mm_testz_si128(any_match, any_match)){\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_101_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplcpmgzey.cpp:39:15: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   39 |     char c0 = _mm_extract_epi8(chars, 0);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmplcpmgzey.cpp:40:15: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   40 |     char c1 = _mm_extract_epi8(chars, 1);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmplcpmgzey.cpp:41:15: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   41 |     char c2 = _mm_extract_epi8(chars, 2);\n      |               ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmplcpmgzey.cpp:54:30: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   54 |         __m128i prev_chunk = _mm_alignr_epi8(current_chunk, chars, 1);\n      |                              ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n[REDACTED]/tmplcpmgzey.cpp:55:35: error: '__builtin_ia32_palignr128' needs target feature ssse3\n   55 |         __m128i prev_prev_chunk = _mm_alignr_epi8(current_chunk, chars, 2);\n      |                                   ^\n/usr/lib/llvm-18/lib/clang/18/include/tmmintrin.h:157:13: note: expanded from macro '_mm_alignr_epi8'\n  157 |   ((__m128i)__builtin_ia32_palignr128((__v16qi)(__m128i)(a), \\\n      |             ^\n5 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyv90nlnw.cpp:35:25: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   35 |         __m128i prime = _mm_shuffle_epi32(primes, _MM_SHUFFLE(i,i,i,i));\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmpyv90nlnw.cpp:36:23: error: use of undeclared identifier '_mm_div_epu32'; did you mean '_mm_min_epu32'?\n   36 |         __m128i div = _mm_div_epu32(val, prime);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epu32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:774:46: note: '_mm_min_epu32' declared here\n  774 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epu32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7wq_94fy.cpp:37:42: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   37 |         __m128i divisor = _mm_set1_epi32(_mm_extract_epi32(primes, i));\n      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n[REDACTED]/tmp7wq_94fy.cpp:38:29: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   38 |         __m128i remainder = _mm_div_epi32(_mm_set1_epi32(length), divisor);\n      |                             ^~~~~~~~~~~~~\n      |                             _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmcrf5pkt.cpp:36:44: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   36 |         __m128i div = _mm_set1_epi32(primes.m128i_i32[i]);\n      |                                      ~~~~~~^~~~~~~~~~\n[REDACTED]/tmpmcrf5pkt.cpp:37:39: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   37 |         __m128i cmp = _mm_cmpeq_epi32(_mm_div_epi32(_mm_set1_epi32(length), div), _mm_setzero_si128());\n      |                                       ^~~~~~~~~~~~~\n      |                                       _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpruuv9dg_.cpp:35:25: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   35 |     __m128i remainder = _mm_div_epi32(num, divisors);\n      |                         ^~~~~~~~~~~~~\n      |                         _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_102_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpfgblfube.cpp:35:19: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   35 |     __m128i cmp = _mm_div_epi32(num, divisors);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl3xtd_ci.cpp:50:19: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   50 |     __m128i tmp = _mm_hadd_epi32(sum_reg, sum_reg);\n      |                   ^\n[REDACTED]/tmpl3xtd_ci.cpp:51:11: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'solve_simd' that is compiled without support for 'ssse3'\n   51 |     tmp = _mm_hadd_epi32(tmp, tmp);\n      |           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_103_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpu4o842is.cpp:35:32: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   35 |         __m128i odd_elements = _mm_shuffle_epi32(vec, mask_odd);\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n[REDACTED]/tmpu4o842is.cpp:36:33: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   36 |         __m128i even_elements = _mm_shuffle_epi32(vec, mask_even);\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbixf6zo7.cpp:35:31: error: C-style cast from vector '__m128i' (vector of 2 'long long' values) to scalar 'int' of different size\n   35 |         __m128i odd_indices = _mm_shuffle_epi32(v, mask_odd);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:57: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |                                                         ^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmryuwu6y.cpp:39:37: error: use of undeclared identifier 'sum_vec'\n   39 |     __m128i result = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                                     ^\n[REDACTED]/tmpmryuwu6y.cpp:39:46: error: use of undeclared identifier 'sum_vec'\n   39 |     __m128i result = _mm_hadd_epi32(sum_vec, sum_vec);\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_104_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpt889ap86.cpp:35:27: error: no matching function for call to '_mm_set_epi32'\n   35 |         __m128i indices = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6voidd__.cpp:45:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   45 |         if(i + 0 < len) input = _mm_insert_epi8(input, s[i + 0], 0);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp6voidd__.cpp:46:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   46 |         if(i + 1 < len) input = _mm_insert_epi8(input, s[i + 1], 1);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp6voidd__.cpp:47:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   47 |         if(i + 2 < len) input = _mm_insert_epi8(input, s[i + 2], 2);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp6voidd__.cpp:48:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   48 |         if(i + 3 < len) input = _mm_insert_epi8(input, s[i + 3], 3);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmp6voidd__.cpp:60:41: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   60 |         if(i + 0 < len) result += (char)_mm_extract_epi8(output, 0);\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmp6voidd__.cpp:61:41: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   61 |         if(i + 1 < len) result += (char)_mm_extract_epi8(output, 1);\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmp6voidd__.cpp:62:41: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   62 |         if(i + 2 < len) result += (char)_mm_extract_epi8(output, 2);\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n[REDACTED]/tmp6voidd__.cpp:63:41: error: '__builtin_ia32_vec_ext_v16qi' needs target feature sse4.1\n   63 |         if(i + 3 < len) result += (char)_mm_extract_epi8(output, 3);\n      |                                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n8 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprkqcxfxe.cpp:45:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   45 |         if(i + 0 < len) input = _mm_insert_epi8(input, s[i + 0], 0);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmprkqcxfxe.cpp:46:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   46 |         if(i + 1 < len) input = _mm_insert_epi8(input, s[i + 1], 1);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmprkqcxfxe.cpp:47:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   47 |         if(i + 2 < len) input = _mm_insert_epi8(input, s[i + 2], 2);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n[REDACTED]/tmprkqcxfxe.cpp:48:33: error: '__builtin_ia32_vec_set_v16qi' needs target feature sse4.1\n   48 |         if(i + 3 < len) input = _mm_insert_epi8(input, s[i + 3], 3);\n      |                                 ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_105_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkjczy77s.cpp:50:21: error: argument to '__builtin_ia32_vec_set_v16qi' must be a constant integer\n   50 |             input = _mm_insert_epi8(input, s[i + j] - base, j);\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:923:13: note: expanded from macro '_mm_insert_epi8'\n  923 |   ((__m128i)__builtin_ia32_vec_set_v16qi((__v16qi)(__m128i)(X), (int)(I),      \\\n      |             ^\n  924 |                                          (int)(N)))\n      |                                          ~~~~~~~~\n[REDACTED]/tmpkjczy77s.cpp:60:36: error: argument to '__builtin_ia32_vec_ext_v16qi' must be a constant integer\n   60 |             result[i + j] = (char)(_mm_extract_epi8(modulo, j) + base);\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1029:24: note: expanded from macro '_mm_extract_epi8'\n 1029 |   ((int)(unsigned char)__builtin_ia32_vec_ext_v16qi((__v16qi)(__m128i)(X),     \\\n      |                        ^\n 1030 |                                                     (int)(N)))\n      |                                                     ~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8b4e_ljn.cpp:34:33: error: no matching function for call to '_mm_set_epi8'\n   34 |     const __m128i mask_vowels = _mm_set_epi8(\n      |                                 ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 32 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp8b4e_ljn.cpp:38:34: error: no matching function for call to '_mm_set_epi8'\n   38 |     const __m128i shift_vowels = _mm_set_epi8(\n      |                                  ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 32 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmp8b4e_ljn.cpp:42:31: error: no matching function for call to '_mm_set_epi8'\n   42 |     const __m128i swap_case = _mm_set_epi8(\n      |                               ^~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3563:1: note: candidate function not viable: requires 16 arguments, but 32 were provided\n 3563 | _mm_set_epi8(char __b15, char __b14, char __b13, char __b12, char __b11,\n      | ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3564 |              char __b10, char __b9, char __b8, char __b7, char __b6, char __b5,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 3565 |              char __b4, char __b3, char __b2, char __b1, char __b0) {\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqrljgl59.cpp:61:43: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   61 |         __m128i is_vowel = _mm_cmpeq_epi8(_mm_shuffle_epi8(vowels, chars), _mm_setzero_si128());\n      |                                           ^\n[REDACTED]/tmpqrljgl59.cpp:62:34: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   62 |         __m128i shifted_vowels = _mm_shuffle_epi8(shift_vowels, chars);\n      |                                  ^\n[REDACTED]/tmpqrljgl59.cpp:63:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'encode_simd' that is compiled without support for 'sse4.1'\n   63 |         __m128i encoded_chars = _mm_blendv_epi8(swapped_case, shifted_vowels, is_vowel);\n      |                                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_106_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7xrb96n8.cpp:72:40: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   72 |         __m128i shifted_lower_vowels = _mm_shuffle_epi8(shift_vowels_lower, lower_vowels_test);\n      |                                        ^\n[REDACTED]/tmp7xrb96n8.cpp:73:40: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'encode_simd' that is compiled without support for 'ssse3'\n   73 |         __m128i shifted_upper_vowels = _mm_shuffle_epi8(shift_vowels_upper, upper_vowels_test);\n      |                                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmprmmm6kjz.cpp:62:27: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   62 |             upper_check = _mm_movemask_epi8(upper_check);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmprmmm6kjz.cpp:63:27: error: assigning to '__m128i' (vector of 2 'long long' values) from incompatible type 'int'\n   63 |             lower_check = _mm_movemask_epi8(lower_check);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmprmmm6kjz.cpp:65:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   65 |             if(upper_check != 0xFFFF) all_upper = false;\n      |                ^~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmprmmm6kjz.cpp:66:16: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   66 |             if(lower_check != 0xFFFF) all_lower = false;\n      |                ^~~~~~~~~~~~~~~~~~~~~\n4 errors generated.\n"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_107_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjzkbkln5.cpp:71:12: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   71 |         if(_mm_extract_epi32(sieve, i)){\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8ck68m7i.cpp:72:12: error: value of type '__attribute__((__vector_size__(2 * sizeof(long long)))) long long' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   72 |         if((sieve & (1 << i)) == 0){\n      |            ^~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpww4l4yb0.cpp:58:38: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'count_up_to_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i test = _mm_and_si128(_mm_mullo_epi32(num, sieve), mask);\n      |                                      ^\n1 error generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpkniq8m75.cpp:69:33: error: use of undeclared identifier '_mm_cmple_epi32'; did you mean '_mm_cmplt_epi32'?\n   69 |         while(_mm_movemask_epi8(_mm_cmple_epi32(div, sqrt_n)) != 0){\n      |                                 ^~~~~~~~~~~~~~~\n      |                                 _mm_cmplt_epi32\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3180:46: note: '_mm_cmplt_epi32' declared here\n 3180 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_cmplt_epi32(__m128i __a,\n      |                                              ^\n[REDACTED]/tmpkniq8m75.cpp:72:19: error: use of undeclared identifier '_mm_rem_epi32'; did you mean '_mm_rot_epi32'?\n   72 |             rem = _mm_rem_epi32(num, div);\n      |                   ^~~~~~~~~~~~~\n      |                   _mm_rot_epi32\n/usr/lib/llvm-18/lib/clang/18/include/xopintrin.h:216:1: note: '_mm_rot_epi32' declared here\n  216 | _mm_rot_epi32(__m128i __A, __m128i __B)\n      | ^\n2 errors generated.\n"}
{"task_id": "SimdBench_108_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp24c04r9t.cpp:38:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i even_chars = _mm_shuffle_epi8(chars, _mm_setr_epi8(0, 2, 4, 6, 8, 10, 12, 14, -1, -1, -1, -1, -1, -1, -1, -1));\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpzzikvli5.cpp:38:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'count_upper_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i even_chars = _mm_shuffle_epi8(chars, _mm_setr_epi8(0, 2, 4, 6, 8, 10, 12, 14, -1, -1, -1, -1, -1, -1, -1, -1));\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_109_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplfcyne1g.cpp:43:43: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   43 |         __m128i v_current = _mm_add_epi32(_mm_mullo_epi32(v_index, v_even), v_n);\n      |                                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsrs7pfgr.cpp:43:30: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'make_a_pile_simd' that is compiled without support for 'sse4.1'\n   43 |     __m128i v_next_numbers = _mm_blendv_epi8(v_even, v_odd, v_is_even);\n      |                              ^\n1 error generated.\n"}
{"task_id": "SimdBench_110_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpj6u8r4tb.cpp:45:39: error: no matching function for call to '_mm_and_si128'\n   45 |         __m128i cmp = _mm_cmpeq_epi32(_mm_and_si128(current, 1), _mm_setzero_si128());\n      |                                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2611:46: note: candidate function not viable: no known conversion from 'int' to '__m128i' (vector of 2 'long long' values) for 2nd argument\n 2611 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_and_si128(__m128i __a,\n      |                                              ^\n 2612 |                                                            __m128i __b) {\n      |                                                            ~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpvmv1l1tc.cpp:58:17: error: no member named 'bitset' in namespace 'std'\n   58 |     return std::bitset<32>(average).to_string();\n      |            ~~~~~^\n[REDACTED]/tmpvmv1l1tc.cpp:58:36: error: member reference base type 'int' is not a structure or union\n   58 |     return std::bitset<32>(average).to_string();\n      |                           ~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpljc85h52.cpp:54:17: error: no member named 'bitset' in namespace 'std'\n   54 |     return std::bitset<32>(avg).to_string();\n      |            ~~~~~^\n[REDACTED]/tmpljc85h52.cpp:54:32: error: member reference base type 'int' is not a structure or union\n   54 |     return std::bitset<32>(avg).to_string();\n      |                           ~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_111_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl_l4pdd7.cpp:44:33: error: argument to '__builtin_ia32_vec_ext_v2di' must be a constant integer\n   44 |         int64_t current_start = _mm_extract_epi64(start, i);\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmpl_l4pdd7.cpp:45:31: error: argument to '__builtin_ia32_vec_ext_v2di' must be a constant integer\n   45 |         int64_t current_end = _mm_extract_epi64(end, i);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1078:15: note: expanded from macro '_mm_extract_epi64'\n 1078 |   ((long long)__builtin_ia32_vec_ext_v2di((__v2di)(__m128i)(X), (int)(N)))\n      |               ^                                                 ~~~~~~~~\n[REDACTED]/tmpl_l4pdd7.cpp:51:23: error: no matching function for call to '_mm_set_epi64x'\n   51 |         __m128i seq = _mm_set_epi64x(0, 0, 0, 0);\n      |                       ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpl_l4pdd7.cpp:53:27: error: no matching function for call to '_mm_set_epi64x'\n   53 |             __m128i vec = _mm_set_epi64x(j + 3, j + 2, j + 1, j);\n      |                           ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3426:46: note: candidate function not viable: requires 2 arguments, but 4 were provided\n 3426 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi64x(long long __q1,\n      |                                              ^              ~~~~~~~~~~~~~~~\n 3427 |                                                             long long __q0) {\n      |                                                             ~~~~~~~~~~~~~~\n[REDACTED]/tmpl_l4pdd7.cpp:62:23: error: use of undeclared identifier '_mm_div_epi64'; did you mean '_mm_min_epi64'?\n   62 |     __m128i avg_vec = _mm_div_epi64(sum_vec, count_vec);\n      |                       ^~~~~~~~~~~~~\n      |                       _mm_min_epi64\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:3194:1: note: '_mm_min_epi64' declared here\n 3194 | _mm_min_epi64 (__m128i __A, __m128i __B) {\n      | ^\n[REDACTED]/tmpl_l4pdd7.cpp:64:27: error: use of undeclared identifier '_mm_round\u4e0d\u5b9a\u503c\u5904\u7406\u90e8\u5206\u9700\u8981\u8865\u5145\u5b8c\u6574'\n   64 |     __m128i rounded_avg = _mm_round\u4e0d\u5b9a\u503c\u5904\u7406\u90e8\u5206\u9700\u8981\u8865\u5145\u5b8c\u6574\n      |                           ^\n[REDACTED]/tmpl_l4pdd7.cpp:64:75: error: expected ';' at end of declaration\n   64 |     __m128i rounded_avg = _mm_round\u4e0d\u5b9a\u503c\u5904\u7406\u90e8\u5206\u9700\u8981\u8865\u5145\u5b8c\u6574\n      |                                                              ^\n      |                                                              ;\n7 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmldl6zmr.cpp:53:27: error: no matching function for call to '_mm_set_epi32'\n   53 |         __m128i indices = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpmldl6zmr.cpp:65:20: error: use of undeclared identifier '_mm_div_epi32'; did you mean '_mm_min_epi32'?\n   65 |         sum_temp = _mm_div_epi32(sum_temp, two);\n      |                    ^~~~~~~~~~~~~\n      |                    _mm_min_epi32\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:738:46: note: '_mm_min_epi32' declared here\n  738 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_min_epi32(__m128i __V1,\n      |                                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd30vvbow.cpp:54:31: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   54 |         __m128i fact_or_sum = _mm_blendv_epi8(sums, factorials, is_even);\n      |                               ^\n[REDACTED]/tmpd30vvbow.cpp:57:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   57 |         __m128i fact_temp = _mm_mullo_epi32(factorials, counter);\n      |                             ^\n[REDACTED]/tmpd30vvbow.cpp:58:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i fact_mod = _mm_mullo_epi32(fact_temp, modulo);\n      |                            ^\n[REDACTED]/tmpd30vvbow.cpp:66:29: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   66 |         __m128i final_val = _mm_blendv_epi8(fact_mod, sum_temp, is_even);\n      |                             ^\n4 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3ny7pk_i.cpp:69:28: error: use of undeclared identifier '_mm_mod_epi32'\n   69 |         factorial_result = _mm_mod_epi32(factorial_result, modulo);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplt5z38my.cpp:74:46: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   74 |         result[i] = (i % 2 == 0) ? factorials.m128i_i32[i] : sums.m128i_i32[i];\n      |                                    ~~~~~~~~~~^~~~~~~~~~\n[REDACTED]/tmplt5z38my.cpp:74:66: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   74 |         result[i] = (i % 2 == 0) ? factorials.m128i_i32[i] : sums.m128i_i32[i];\n      |                                                              ~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_112_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7h5l2be9.cpp:58:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   58 |         __m128i fact_temp = _mm_mullo_epi32(factorials, i_val);\n      |                             ^\n[REDACTED]/tmp7h5l2be9.cpp:60:22: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'func_simd' that is compiled without support for 'sse4.1'\n   60 |         factorials = _mm_mullo_epi32(factorials, mod_val);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4wl15wag.cpp:39:48: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   39 |         even_count = _mm_add_epi32(even_count, _mm_cvtepu32_epi32(mask));\n      |                                                ^\n[REDACTED]/tmp4wl15wag.cpp:44:48: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   44 |         even_count = _mm_add_epi32(even_count, _mm_cvtepu32_epi32(mask));\n      |                                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgtrir62c.cpp:39:48: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   39 |         even_count = _mm_add_epi32(even_count, _mm_cvtepu32_epi32(mask));\n      |                                                ^\n[REDACTED]/tmpgtrir62c.cpp:44:48: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   44 |         even_count = _mm_add_epi32(even_count, _mm_cvtepu32_epi32(mask));\n      |                                                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6tgdr807.cpp:37:23: error: no matching function for call to '_mm_set_epi32'\n   37 |         __m128i num = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                       ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_113_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5b5rz4l2.cpp:48:27: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   48 |         __m128i abs_vec = _mm_abs_epi32(vec);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcrwnpm62.cpp:47:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n[REDACTED]/tmpcrwnpm62.cpp:48:58: error: always_inline function '_mm_cvtepi32_epi8' requires target feature 'avx512vl', but would be inlined into function 'count_nums_simd' that is compiled without support for 'avx512vl'\n   48 |         __m128i sums = _mm_sad_epu8(_mm_setzero_si128(), _mm_cvtepi32_epi8(abs_nums));\n      |                                                          ^\n2 errors generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk8cmdgpu.cpp:61:32: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   61 |         __m128i abs_data_vec = _mm_abs_epi32(data_vec);\n      |                                ^\n1 error generated.\n"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_114_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp9c8288r5.cpp:47:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'count_nums_simd' that is compiled without support for 'ssse3'\n   47 |         __m128i abs_nums = _mm_abs_epi32(nums);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7vxmy1qc.cpp:45:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'move_one_ball_simd' that is compiled without support for 'sse4.1'\n   45 |         if(!_mm_testz_si128(cmp, cmp)){\n      |             ^\n[REDACTED]/tmp7vxmy1qc.cpp:58:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'move_one_ball_simd' that is compiled without support for 'sse4.1'\n   58 |         if(!_mm_testz_si128(masked_last, masked_last)){\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_115_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpqx5vnx72.cpp:49:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   49 |         if(!_mm_testz_si128(odd_mask1, mask1)){\n      |             ^\n[REDACTED]/tmpqx5vnx72.cpp:52:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   52 |         if(!_mm_testz_si128(odd_mask2, mask1)){\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuy3ha9sb.cpp:49:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   49 |         if(!_mm_testz_si128(odd_mask1, odd_mask1)){\n      |             ^\n[REDACTED]/tmpuy3ha9sb.cpp:52:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   52 |         if(!_mm_testz_si128(odd_mask2, odd_mask2)){\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_116_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp44zbperq.cpp:46:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'myexchange_simd' that is compiled without support for 'sse4.1'\n   46 |         if(!_mm_testz_si128(odd_mask1, odd_mask2)){\n      |             ^\n1 error generated.\n"}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_117_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8y44ghkm.cpp:41:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   41 |         min_sum = _mm_min_epi64(min_sum, current_sum);\n      |                   ^\n[REDACTED]/tmp8y44ghkm.cpp:50:15: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   50 |     min_sum = _mm_min_epi64(min_sum, min_remaining);\n      |               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy309wsxw.cpp:41:19: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   41 |         min_sum = _mm_min_epi64(min_sum, current_sum);\n      |                   ^\n[REDACTED]/tmpy309wsxw.cpp:50:15: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   50 |     min_sum = _mm_min_epi64(min_sum, min_sum_vec);\n      |               ^\n[REDACTED]/tmpy309wsxw.cpp:52:15: error: always_inline function '_mm_min_epi64' requires target feature 'avx512vl', but would be inlined into function 'minSubArraySum_simd' that is compiled without support for 'avx512vl'\n   52 |     min_sum = _mm_min_epi64(min_sum, min_sum_vec);\n      |               ^\n3 errors generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf2pqrwxt.cpp:52:43: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   52 |         _mm_storel_epi64((__m128i*)&temp, _mm_shuffle_epi32(min_sum, i*8));\n      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnudgsam6.cpp:51:24: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   51 |         __m128i lane = _mm_shuffle_epi32(min_sum, _MM_SHUFFLE(i,i,i,i));\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_118_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpjooqgzx9.cpp:54:12: error: no matching function for call to 'min'\n   54 |     return std::min(_mm_cvtsi128_si64(min_sum), remaining_min);\n      |            ^~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:420:5: note: candidate template ignored: deduced conflicting types for parameter '_Tp' ('long long' vs. 'int64_t' (aka 'long'))\n  420 |     min(const _Tp&, const _Tp&);\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5785:5: note: candidate template ignored: could not match 'initializer_list<_Tp>' against 'long long'\n 5785 |     min(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:5775:5: note: candidate function template not viable: requires single argument '__l', but 2 arguments were provided\n 5775 |     min(initializer_list<_Tp> __l)\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/algorithmfwd.h:425:5: note: candidate function template not viable: requires 3 arguments, but 2 were provided\n  425 |     min(const _Tp&, const _Tp&, _Compare);\n      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpwfbgy_wk.cpp:42:21: error: always_inline function '_mm_popcnt_u32' requires target feature 'popcnt', but would be inlined into function 'max_fill_simd' that is compiled without support for 'popcnt'\n   42 |         int count = _mm_popcnt_u32(_mm_movemask_epi8(mask));\n      |                     ^\n1 error generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpl9o3jz_u.cpp:41:16: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   41 |         while(!_mm_testz_si128(bucket, bucket)){\n      |                ^\n[REDACTED]/tmpl9o3jz_u.cpp:42:30: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'max_fill_simd' that is compiled without support for 'sse4.1'\n   42 |             __m128i filled = _mm_min_epi32(bucket, threshold);\n      |                              ^\n2 errors generated.\n"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_119_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk0uytgdy.cpp:53:24: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'max_fill_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i sums = _mm_hadd_epi32(current_sum, zero);\n      |                        ^\n[REDACTED]/tmpk0uytgdy.cpp:54:16: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'max_fill_simd' that is compiled without support for 'ssse3'\n   54 |         sums = _mm_hadd_epi32(sums, zero);\n      |                ^\n2 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpf90pf37c.cpp:47:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   47 |     sum_horizontal = _mm_hadd_epi16(sum_vec, sum_horizontal);\n      |                      ^\n[REDACTED]/tmpf90pf37c.cpp:48:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   48 |     sum_horizontal = _mm_hadd_epi16(sum_horizontal, sum_horizontal);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnfpuwpsp.cpp:39:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'solution_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i filtered = _mm_blendv_epi8(_mm_setzero_si128(), odd_masked, final_mask);\n      |                            ^\n[REDACTED]/tmpnfpuwpsp.cpp:43:30: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   43 |     __m128i sum_horizontal = _mm_hadd_epi16(sum_vec, sum_vec);\n      |                              ^\n[REDACTED]/tmpnfpuwpsp.cpp:44:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   44 |     sum_horizontal = _mm_hadd_epi16(sum_horizontal, sum_horizontal);\n      |                      ^\n3 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpcjj_5_jk.cpp:43:30: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   43 |     __m128i sum_horizontal = _mm_hadd_epi16(sum_vec, sum_vec);\n      |                              ^\n[REDACTED]/tmpcjj_5_jk.cpp:44:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   44 |     sum_horizontal = _mm_hadd_epi16(sum_horizontal, sum_horizontal);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_120_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpbecmevpd.cpp:42:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   42 |     sum_horizontal = _mm_hadd_epi16(sum_vec, sum_horizontal);\n      |                      ^\n[REDACTED]/tmpbecmevpd.cpp:43:22: error: always_inline function '_mm_hadd_epi16' requires target feature 'ssse3', but would be inlined into function 'solution_simd' that is compiled without support for 'ssse3'\n   43 |     sum_horizontal = _mm_hadd_epi16(sum_horizontal, sum_horizontal);\n      |                      ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3jkn11zt.cpp:34:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'add_elements_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i masked = _mm_min_epi32(vec, mask);\n      |                          ^\n[REDACTED]/tmp3jkn11zt.cpp:37:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'add_elements_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i sums = _mm_mullo_epi32(valid, vec);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1uq185ee.cpp:34:26: error: always_inline function '_mm_min_epu32' requires target feature 'sse4.1', but would be inlined into function 'add_elements_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i masked = _mm_min_epu32(vec, mask);\n      |                          ^\n1 error generated.\n"}
{"task_id": "SimdBench_121_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpg_h6i219.cpp:34:26: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'add_elements_simd' that is compiled without support for 'sse4.1'\n   34 |         __m128i masked = _mm_min_epi32(vec, mask);\n      |                          ^\n[REDACTED]/tmpg_h6i219.cpp:37:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'add_elements_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i sums = _mm_mullo_epi32(valid, vec);\n      |                        ^\n[REDACTED]/tmpg_h6i219.cpp:38:31: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i partial_sum = _mm_hadd_epi32(sums, sums);\n      |                               ^\n[REDACTED]/tmpg_h6i219.cpp:39:23: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'add_elements_simd' that is compiled without support for 'ssse3'\n   39 |         partial_sum = _mm_hadd_epi32(partial_sum, partial_sum);\n      |                       ^\n4 errors generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpyxlfmhab.cpp:53:13: error: cannot initialize a variable of type '__m128i' (vector of 2 'long long' values) with an rvalue of type 'bool'\n   53 |     __m128i dup_check = _mm_movemask_epi8(duplicates_mask) != 0;\n      |             ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[REDACTED]/tmpyxlfmhab.cpp:54:8: error: value of type '__m128i' (vector of 2 'long long' values) is not contextually convertible to 'bool'\n   54 |     if(dup_check)\n      |        ^~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpnthvyj0_.cpp:38:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'sse4.1'\n   38 |         if(!_mm_testz_si128(cmp_prev, cmp_prev)) return false;\n      |             ^\n[REDACTED]/tmpnthvyj0_.cpp:45:13: error: always_inline function '_mm_testz_si128' requires target feature 'sse4.1', but would be inlined into function 'is_sorted_simd' that is compiled without support for 'sse4.1'\n   45 |         if(!_mm_testz_si128(cmp_prev, cmp_prev)) return false;\n      |             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_122_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp53vqyzpn.cpp:45:24: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |         __m128i shuf = _mm_shuffle_epi32(sum_vec, _MM_SHUFFLE(j,j,j,j));\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmp53vqyzpn.cpp:46:29: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   46 |         __m128i shuf_sign = _mm_shuffle_epi32(sign_vec, _MM_SHUFFLE(j,j,j,j));\n      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmp53vqyzpn.cpp:59:36: error: use of undeclared identifier 'prod_sign'; did you mean 'prod_signs'?\n   59 |         total_sum += abs(arr[i]) * prod_sign(arr[i]);\n      |                                    ^~~~~~~~~\n      |                                    prod_signs\n[REDACTED]/tmp53vqyzpn.cpp:20:5: note: 'prod_signs' declared here\n   20 | int prod_signs(const std::vector<int> & arr){\n      |     ^\n[REDACTED]/tmp53vqyzpn.cpp:59:46: error: reference to type 'const std::vector<int>' could not bind to an lvalue of type 'const value_type' (aka 'const int')\n   59 |         total_sum += abs(arr[i]) * prod_sign(arr[i]);\n      |                                              ^~~~~~\n[REDACTED]/tmp53vqyzpn.cpp:20:41: note: passing argument to parameter 'arr' here\n   20 | int prod_signs(const std::vector<int> & arr){\n      |                                         ^\n4 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmplgc27x4b.cpp:45:31: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |         __m128i shuffle_sum = _mm_shuffle_epi32(sum_vec, _MM_SHUFFLE(j,j,j,j));\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmplgc27x4b.cpp:46:32: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   46 |         __m128i shuffle_sign = _mm_shuffle_epi32(sign_vec, _MM_SHUFFLE(j,j,j,j));\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmplgc27x4b.cpp:58:23: error: use of undeclared identifier 'sign'; did you mean 'sin'?\n   58 |         total_sign += sign(arr[k]);\n      |                       ^~~~\n      |                       sin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:17: note: 'sin' declared here\n   64 | __MATHCALL_VEC (sin,, (_Mdouble_ __x));\n      |                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpoia67s_w.cpp:44:24: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   44 |         __m128i shuf = _mm_shuffle_epi32(sum_vec, _MM_SHUFFLE(j,j,j,j));\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmpoia67s_w.cpp:52:24: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   52 |         __m128i shuf = _mm_shuffle_epi32(sign_vec, _MM_SHUFFLE(j,j,j,j));\n      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp7bqm0zcp.cpp:58:36: error: use of undeclared identifier 'sign'; did you mean 'sin'?\n   58 |         total_sum += abs(arr[k]) * sign(arr[k]);\n      |                                    ^~~~\n      |                                    sin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:17: note: 'sin' declared here\n   64 | __MATHCALL_VEC (sin,, (_Mdouble_ __x));\n      |                 ^\n1 error generated.\n"}
{"task_id": "SimdBench_123_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphofy3_oa.cpp:45:31: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   45 |         __m128i shuffle_sum = _mm_shuffle_epi32(sum_vec, _MM_SHUFFLE(j,j,j,j));\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmphofy3_oa.cpp:46:32: error: argument to '__builtin_ia32_pshufd' must be a constant integer\n   46 |         __m128i shuffle_sign = _mm_shuffle_epi32(sign_vec, _MM_SHUFFLE(j,j,j,j));\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:4240:13: note: expanded from macro '_mm_shuffle_epi32'\n 4240 |   ((__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm)))\n      |             ^                                           ~~~~~~~~~~\n[REDACTED]/tmphofy3_oa.cpp:58:23: error: use of undeclared identifier 'sign'; did you mean 'sin'?\n   58 |         total_sign += sign(arr[k]);\n      |                       ^~~~\n      |                       sin\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:17: note: 'sin' declared here\n   64 | __MATHCALL_VEC (sin,, (_Mdouble_ __x));\n      |                 ^\n3 errors generated.\n"}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_124_SSE", "passed": false, "result": "runtime failed: "}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp1pgqp7za.cpp:39:26: error: always_inline function '_mm_cvtepu8_epi64' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i digits = _mm_cvtepu8_epi64(_mm_and_si128(_mm_set1_epi64x(0xFF), num));\n      |                          ^\n[REDACTED]/tmp1pgqp7za.cpp:41:33: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   41 |         __m128i digit_product = _mm_blendv_epi8(_mm_set1_epi64x(1), digits, is_odd);\n      |                                 ^\n[REDACTED]/tmp1pgqp7za.cpp:43:19: error: always_inline function '_mm_mullo_epi64' requires target feature 'avx512vl', but would be inlined into function 'digits_simd' that is compiled without support for 'avx512vl'\n   43 |         product = _mm_mullo_epi64(product, digit_product);\n      |                   ^\n3 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxxfdbzzs.cpp:43:13: error: no matching function for call to '_mm_srli_epi64'\n   43 |         n = _mm_srli_epi64(n, 4);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2987:46: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long') to '__m128i' (vector of 2 'long long' values) for 1st argument\n 2987 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi64(__m128i __a,\n      |                                              ^              ~~~~~~~~~~~\n[REDACTED]/tmpxxfdbzzs.cpp:43:13: error: assigning to 'uint64_t' (aka 'unsigned long') from incompatible type '__m128i' (vector of 2 'long long' values)\n   43 |         n = _mm_srli_epi64(n, 4);\n      |             ^~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmppftte6o_.cpp:43:13: error: no matching function for call to '_mm_srli_epi64'\n   43 |         n = _mm_srli_epi64(n, 4);\n      |             ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:2987:46: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long') to '__m128i' (vector of 2 'long long' values) for 1st argument\n 2987 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_srli_epi64(__m128i __a,\n      |                                              ^              ~~~~~~~~~~~\n[REDACTED]/tmppftte6o_.cpp:43:13: error: assigning to 'uint64_t' (aka 'unsigned long') from incompatible type '__m128i' (vector of 2 'long long' values)\n   43 |         n = _mm_srli_epi64(n, 4);\n      |             ^~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_125_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpd4p1km9s.cpp:39:26: error: always_inline function '_mm_cvtepu8_epi64' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i digits = _mm_cvtepu8_epi64(_mm_and_si128(num, _mm_set1_epi64x(0xFF)));\n      |                          ^\n[REDACTED]/tmpd4p1km9s.cpp:42:27: error: always_inline function '_mm_cmpeq_epi64' requires target feature 'sse4.1', but would be inlined into function 'digits_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i is_even = _mm_cmpeq_epi64(is_odd, zero);\n      |                           ^\n2 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpxjfn1uk3.cpp:34:37: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_add_ps(_mm_floor_ps(v), _mm_castsi128_ps(upper_mask));\n      |                                     ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpxjfn1uk3.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpxjfn1uk3.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpxjfn1uk3.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5gvp0vf7.cpp:35:36: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 ceil_v = _mm_add_ps(_mm_floor_ps(v), _mm_cmplt_ss(_mm_setzero_ps(), _mm_sub_ps(v, _mm_floor_ps(v))));\n      |                                    ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp5gvp0vf7.cpp:35:98: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   35 |         __m128 ceil_v = _mm_add_ps(_mm_floor_ps(v), _mm_cmplt_ss(_mm_setzero_ps(), _mm_sub_ps(v, _mm_floor_ps(v))));\n      |                                                                                                  ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmp5gvp0vf7.cpp:37:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i square_v = _mm_mullo_epi32(int_v, int_v);\n      |                            ^\n[REDACTED]/tmp5gvp0vf7.cpp:41:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   41 |     sum_vec = _mm_hadd_epi32(sum_vec, zero);\n      |               ^\n[REDACTED]/tmp5gvp0vf7.cpp:42:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   42 |     sum_vec = _mm_hadd_epi32(sum_vec, zero);\n      |               ^\n[REDACTED]/tmp5gvp0vf7.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmp5gvp0vf7.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmp5gvp0vf7.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 5 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpledc5jwk.cpp:34:37: error: '__builtin_ia32_roundps' needs target feature sse4.1\n   34 |         __m128 rounded = _mm_add_ps(_mm_floor_ps(v), upper_mask);\n      |                                     ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:140:25: note: expanded from macro '_mm_floor_ps'\n  140 | #define _mm_floor_ps(X) _mm_round_ps((X), _MM_FROUND_FLOOR)\n      |                         ^\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:240:12: note: expanded from macro '_mm_round_ps'\n  240 |   ((__m128)__builtin_ia32_roundps((__v4sf)(__m128)(X), (M)))\n      |            ^\n[REDACTED]/tmpledc5jwk.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpledc5jwk.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpledc5jwk.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 1 error generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpix_xqpun.cpp:42:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   42 |         __m128i v_squared = _mm_mullo_epi32(v_ceil, v_ceil);\n      |                             ^\n[REDACTED]/tmpix_xqpun.cpp:45:25: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   45 |         __m128i v_sum = _mm_hadd_epi32(v_squared, v_squared);\n      |                         ^\n[REDACTED]/tmpix_xqpun.cpp:46:17: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   46 |         v_sum = _mm_hadd_epi32(v_sum, v_sum);\n      |                 ^\n[REDACTED]/tmpix_xqpun.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:62:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   62 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:62:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   62 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:63:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   63 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:63:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   63 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:64:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   64 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:64:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   64 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:65:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   65 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:65:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   65 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:66:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   66 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:66:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   66 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:67:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   67 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:67:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   67 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:68:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   68 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:68:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   68 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:69:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:69:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   69 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:70:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   70 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:70:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   70 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:71:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   71 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:71:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   71 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmpix_xqpun.cpp:72:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   72 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmpix_xqpun.cpp:72:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   72 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 3 errors generated.\n"}
{"task_id": "SimdBench_126_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphtktram0.cpp:39:24: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   39 |         __m128i v_sq = _mm_mullo_epi32(v_int_abs, v_int_abs);\n      |                        ^\n[REDACTED]/tmphtktram0.cpp:43:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   43 |     sum_vec = _mm_hadd_epi32(sum_vec, zero);\n      |               ^\n[REDACTED]/tmphtktram0.cpp:44:15: error: always_inline function '_mm_hadd_epi32' requires target feature 'ssse3', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'ssse3'\n   44 |     sum_vec = _mm_hadd_epi32(sum_vec, zero);\n      |               ^\n[REDACTED]/tmphtktram0.cpp:50:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   50 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:50:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   50 |     pass = pass && fabs(sum_squares_simd({1,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:51:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   51 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:51:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   51 |     pass = pass && fabs(sum_squares_simd({1.0,2,3}) - 14) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:52:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   52 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:52:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   52 |     pass = pass && fabs(sum_squares_simd({1,3,5,7}) - 84) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:53:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   53 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:53:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   53 |     pass = pass && fabs(sum_squares_simd({1.4,4.2,0}) - 29) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:54:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   54 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:54:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   54 |     pass = pass && fabs(sum_squares_simd({-2.4,1,1}) - 6) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:55:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   55 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:55:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   55 |     pass = pass && fabs(sum_squares_simd({100,1,15,2}) - 10230) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:56:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   56 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:56:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   56 |     pass = pass && fabs(sum_squares_simd({10000,10000}) - 200000000) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:57:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   57 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:57:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   57 |     pass = pass && fabs(sum_squares_simd({-1.4,4.6,6.3}) - 75) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:58:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   58 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:58:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   58 |     pass = pass && fabs(sum_squares_simd({-1.4,17.9,18.9,19.9}) - 1086) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:59:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   59 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:59:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   59 |     pass = pass && fabs(sum_squares_simd({0}) - 0) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:60:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   60 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:60:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   60 |     pass = pass && fabs(sum_squares_simd({-1}) - 1) < 1e-6;\n      |                    ^~~~\n[REDACTED]/tmphtktram0.cpp:61:20: warning: taking the absolute value of unsigned type 'uint64_t' (aka 'unsigned long') has no effect [-Wabsolute-value]\n   61 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^\n[REDACTED]/tmphtktram0.cpp:61:20: note: remove the call to 'fabs' since unsigned values cannot be negative\n   61 |     pass = pass && fabs(sum_squares_simd({-1,1,0}) - 2) < 1e-6;\n      |                    ^~~~\n12 warnings and 3 errors generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6yqq_x4r.cpp:45:16: error: argument to '__builtin_ia32_vec_ext_v4si' must be a constant integer\n   45 |             if(_mm_extract_epi32(cmp, j)){\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:1055:9: note: expanded from macro '_mm_extract_epi32'\n 1055 |   ((int)__builtin_ia32_vec_ext_v4si((__v4si)(__m128i)(X), (int)(N)))\n      |         ^                                                 ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_127_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphktd1jk8.cpp:50:24: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   50 |         max_negative = _mm_max_epi32(max_negative, current_negatives);\n      |                        ^\n[REDACTED]/tmphktd1jk8.cpp:55:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   55 |         min_positive = _mm_min_epi32(min_positive, current_positives);\n      |                        ^\n[REDACTED]/tmphktd1jk8.cpp:63:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'ssse3'\n   63 |     __m128i max_negative_h = _mm_shuffle_epi8(max_negative, shuffle_mask);\n      |                              ^\n[REDACTED]/tmphktd1jk8.cpp:64:30: error: always_inline function '_mm_shuffle_epi8' requires target feature 'ssse3', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'ssse3'\n   64 |     __m128i min_positive_h = _mm_shuffle_epi8(min_positive, shuffle_mask);\n      |                              ^\n[REDACTED]/tmphktd1jk8.cpp:66:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   66 |     max_negative_h = _mm_max_epi32(max_negative_h, _mm_srli_si128(max_negative_h, 4));\n      |                      ^\n[REDACTED]/tmphktd1jk8.cpp:67:22: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   67 |     max_negative_h = _mm_max_epi32(max_negative_h, _mm_srli_si128(max_negative_h, 8));\n      |                      ^\n[REDACTED]/tmphktd1jk8.cpp:68:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   68 |     min_positive_h = _mm_min_epi32(min_positive_h, _mm_srli_si128(min_positive_h, 4));\n      |                      ^\n[REDACTED]/tmphktd1jk8.cpp:69:22: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   69 |     min_positive_h = _mm_min_epi32(min_positive_h, _mm_srli_si128(min_positive_h, 8));\n      |                      ^\n8 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpniqzs482.cpp:59:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   59 |         __m128i neg_vals = _mm_blendv_epi8(_mm_setzero_si128(), vec, neg_mask);\n      |                            ^\n[REDACTED]/tmpniqzs482.cpp:60:28: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   60 |         __m128i pos_vals = _mm_blendv_epi8(_mm_setzero_si128(), vec, pos_mask);\n      |                            ^\n[REDACTED]/tmpniqzs482.cpp:62:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   62 |         largest_neg = _mm_max_epi32(largest_neg, neg_vals);\n      |                       ^\n[REDACTED]/tmpniqzs482.cpp:63:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   63 |         smallest_pos = _mm_min_epi32(smallest_pos, pos_vals);\n      |                        ^\n[REDACTED]/tmpniqzs482.cpp:66:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   66 |     __m128i max_neg = _mm_max_epi32(largest_neg, _mm_shuffle_epi32(largest_neg, _MM_SHUFFLE(0,0,3,2)));\n      |                       ^\n[REDACTED]/tmpniqzs482.cpp:67:15: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   67 |     max_neg = _mm_max_epi32(max_neg, _mm_shuffle_epi32(max_neg, _MM_SHUFFLE(0,0,1,0)));\n      |               ^\n[REDACTED]/tmpniqzs482.cpp:69:23: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   69 |     __m128i min_pos = _mm_min_epi32(smallest_pos, _mm_shuffle_epi32(smallest_pos, _MM_SHUFFLE(0,0,3,2)));\n      |                       ^\n[REDACTED]/tmpniqzs482.cpp:70:15: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   70 |     min_pos = _mm_min_epi32(min_pos, _mm_shuffle_epi32(min_pos, _MM_SHUFFLE(0,0,1,0)));\n      |               ^\n8 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpw85wf_ix.cpp:50:17: error: argument to '__builtin_ia32_vec_set_v4si' must be a constant integer\n   50 |                 _mm_insert_epi32(vec, lst[i + count], count);\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/smmintrin.h:955:13: note: expanded from macro '_mm_insert_epi32'\n  955 |   ((__m128i)__builtin_ia32_vec_set_v4si((__v4si)(__m128i)(X), (int)(I),        \\\n      |             ^\n  956 |                                         (int)(N)))\n      |                                         ~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp49yb14vf.cpp:52:23: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   52 |         largest_neg = _mm_max_epi32(largest_neg, neg_vals);\n      |                       ^\n[REDACTED]/tmp49yb14vf.cpp:53:24: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   53 |         smallest_pos = _mm_min_epi32(smallest_pos, pos_vals);\n      |                        ^\n2 errors generated.\n"}
{"task_id": "SimdBench_128_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpgl6w7nh2.cpp:59:32: error: always_inline function '_mm_max_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   59 |             largest_negative = _mm_max_epi32(largest_negative, neg_vals);\n      |                                ^\n[REDACTED]/tmpgl6w7nh2.cpp:60:33: error: always_inline function '_mm_min_epi32' requires target feature 'sse4.1', but would be inlined into function 'largest_smallest_integers_simd' that is compiled without support for 'sse4.1'\n   60 |             smallest_positive = _mm_min_epi32(smallest_positive, pos_vals);\n      |                                 ^\n2 errors generated.\n"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_129_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpe693ciuy.cpp:37:27: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   37 |         __m128i squared = _mm_mullo_epi32(vec, vec);\n      |                           ^\n[REDACTED]/tmpe693ciuy.cpp:38:41: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                                         ^\n[REDACTED]/tmpe693ciuy.cpp:38:25: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i cubed = _mm_mullo_epi32(_mm_mullo_epi32(vec, vec), vec);\n      |                         ^\n[REDACTED]/tmpe693ciuy.cpp:40:26: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i result = _mm_blendv_epi8(cubed, squared, mask3);\n      |                          ^\n[REDACTED]/tmpe693ciuy.cpp:41:18: error: always_inline function '_mm_blendv_epi8' requires target feature 'sse4.1', but would be inlined into function 'sum_squares_simd' that is compiled without support for 'sse4.1'\n   41 |         result = _mm_blendv_epi8(result, vec, _mm_andnot_si128(mask3, mask4));\n      |                  ^\n5 errors generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpmq7xfdmp.cpp:34:27: error: no matching function for call to '_mm_set_epi32'\n   34 |         __m128i indices = _mm_set_epi32(7,6,5,4,3,2,1,0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpo0f_cw15.cpp:34:27: error: no matching function for call to '_mm_set_epi32'\n   34 |         __m128i indices = _mm_set_epi32(7,6,5,4,3,2,1,0);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5uhz9t_h.cpp:33:27: error: no matching function for call to '_mm_set_epi32'\n   33 |         __m128i indices = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_130_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpuug7whqj.cpp:34:27: error: no matching function for call to '_mm_set_epi32'\n   34 |         __m128i indices = _mm_set_epi32(i+7, i+6, i+5, i+4, i+3, i+2, i+1, i);\n      |                           ^~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3474:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3474 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_set_epi32(int __i3, int __i2,\n      |                                              ^             ~~~~~~~~~~~~~~~~~~~\n 3475 |                                                            int __i1, int __i0) {\n      |                                                            ~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmptvz9m0zi.cpp:54:15: error: assigning to 'int' from incompatible type '__m128i' (vector of 2 'long long' values)\n   54 |         count += _mm_popcnt_epi32(combinedMask);\n      |               ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmps_xq72bq.cpp:61:32: error: use of undeclared identifier '_mm_cvtepu32_epi8'; did you mean '_mm_cvtepi32_epi8'?\n   61 |         __m128i first_digits = _mm_cvtepu32_epi8(_mm_and_si128(abs_v, mask_odd));\n      |                                ^~~~~~~~~~~~~~~~~\n      |                                _mm_cvtepi32_epi8\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:7540:1: note: '_mm_cvtepi32_epi8' declared here\n 7540 | _mm_cvtepi32_epi8 (__m128i __A)\n      | ^\n[REDACTED]/tmps_xq72bq.cpp:62:45: error: use of undeclared identifier '_mm_cvtepu32_epi8'; did you mean '_mm_cvtepi32_epi8'?\n   62 |         __m128i last_digits = _mm_and_si128(_mm_cvtepu32_epi8(_mm_srli_epi32(abs_v, 28)), mask_odd);\n      |                                             ^~~~~~~~~~~~~~~~~\n      |                                             _mm_cvtepi32_epi8\n/usr/lib/llvm-18/lib/clang/18/include/avx512vlintrin.h:7540:1: note: '_mm_cvtepi32_epi8' declared here\n 7540 | _mm_cvtepi32_epi8 (__m128i __A)\n      | ^\n[REDACTED]/tmps_xq72bq.cpp:65:46: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   65 |         count += _mm_popcnt_epi32(final_mask).m128i_i32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n3 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpou6j69zb.cpp:62:40: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   62 |         count += _mm_popcnt_epi32(mask).m128i_u32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n1 error generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpi3aagbrw.cpp:57:32: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   57 |         __m128i first_digits = _mm_cvtepu32_epi32(_mm_and_si128(abs_v, mask_odd_digits));\n      |                                ^\n[REDACTED]/tmpi3aagbrw.cpp:58:31: error: use of undeclared identifier '_mm_cvtepu32_epi32'\n   58 |         __m128i last_digits = _mm_cvtepu32_epi32(_mm_and_si128(abs_v, _mm_set1_epi32(0xF)));\n      |                               ^\n2 errors generated.\n"}
{"task_id": "SimdBench_131_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4mkgy88u.cpp:34:26: error: no matching function for call to '_mm_setr_epi32'\n   34 |     __m128i odd_digits = _mm_setr_epi32(1, 3, 5, 7, 9, 11, 13, 15);\n      |                          ^~~~~~~~~~~~~~\n/usr/lib/llvm-18/lib/clang/18/include/emmintrin.h:3693:46: note: candidate function not viable: requires 4 arguments, but 8 were provided\n 3693 | static __inline__ __m128i __DEFAULT_FN_ATTRS _mm_setr_epi32(int __i0, int __i1,\n      |                                              ^              ~~~~~~~~~~~~~~~~~~~\n 3694 |                                                             int __i2,\n      |                                                             ~~~~~~~~~\n 3695 |                                                             int __i3) {\n      |                                                             ~~~~~~~~\n[REDACTED]/tmp4mkgy88u.cpp:51:49: error: member reference base type '__m128i' (vector of 2 'long long' values) is not a structure or union\n   51 |         count += _mm_popcnt_epi32(combined_mask).m128i_u32[0];\n      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\n2 errors generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp6msf4q3v.cpp:75:23: error: use of undeclared identifier '_mm_rem_epu32'\n   75 |         __m128i mod = _mm_rem_epu32(val, threes);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp5e4g6nxs.cpp:75:23: error: use of undeclared identifier '_mm_rem_epu32'\n   75 |         __m128i mod = _mm_rem_epu32(val, threes);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpy2jdnob2.cpp:76:23: error: use of undeclared identifier '_mm_rem_epu32'\n   76 |         __m128i mod = _mm_rem_epu32(val, threes);\n      |                       ^\n1 error generated.\n"}
{"task_id": "SimdBench_132_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp86kx23u4.cpp:77:27: error: use of undeclared identifier '_mm_rem_epu32'\n   77 |         __m128i mod_res = _mm_rem_epu32(val, threes);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_133_SSE", "passed": false, "result": "logical bug"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpk5e5kguq.cpp:37:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   37 |         __m128i v_abs = _mm_abs_epi32(v_int);\n      |                         ^\n[REDACTED]/tmpk5e5kguq.cpp:40:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   40 |         __m128i v_square = _mm_mullo_epi32(v_int, v_int);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn4w3ekc8.cpp:38:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   38 |         __m128i v_abs = _mm_abs_epi32(v_int);\n      |                         ^\n[REDACTED]/tmpn4w3ekc8.cpp:46:29: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   46 |         __m128i v_squared = _mm_mullo_epi32(v_int, v_int);\n      |                             ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp3kzj2e6_.cpp:35:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   35 |         __m128i v_abs = _mm_abs_epi32(v_int);\n      |                         ^\n[REDACTED]/tmp3kzj2e6_.cpp:38:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i v_square = _mm_mullo_epi32(v_int, v_int);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp8qsl1khc.cpp:38:27: error: always_inline function '_mm_mul_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i squared = _mm_mul_epi32(mask_valid, mask_valid);\n      |                           ^\n1 error generated.\n"}
{"task_id": "SimdBench_134_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp0x36qfwg.cpp:35:25: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'ssse3'\n   35 |         __m128i v_abs = _mm_abs_epi32(v_int);\n      |                         ^\n[REDACTED]/tmp0x36qfwg.cpp:38:28: error: always_inline function '_mm_mullo_epi32' requires target feature 'sse4.1', but would be inlined into function 'double_the_difference_simd' that is compiled without support for 'sse4.1'\n   38 |         __m128i v_square = _mm_mullo_epi32(v_odd, v_odd);\n      |                            ^\n2 errors generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpn98v7kkl.cpp:53:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmp4fxeipnq.cpp:53:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmphckv39fw.cpp:41:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   41 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpadvvfagn.cpp:53:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
{"task_id": "SimdBench_135_SSE", "passed": false, "result": "compilation failed: [REDACTED]/tmpsj2v0idf.cpp:53:28: error: always_inline function '_mm_abs_epi32' requires target feature 'ssse3', but would be inlined into function 'compare_simd' that is compiled without support for 'ssse3'\n   53 |         __m128i abs_diff = _mm_abs_epi32(diff);\n      |                            ^\n1 error generated.\n"}
